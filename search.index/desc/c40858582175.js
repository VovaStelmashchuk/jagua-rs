rd_("Bj\xe2\x80\x9cC\xe2\x80\x9d is an alias for row major orderingAhReturn Euler\xe2\x80\x99s number.BmA floating-point type used for epsilon valuesCk\xe2\x80\x9cF\xe2\x80\x9d (for Fortran) is an alias for column major orderingBdAn integer type used for ulps valuesCoA constant <code>Complex</code> <em>i</em>, the imaginary unit.BhThe type sampled by this implementation.0DfA <code>\\x</code> prefix. When used without brackets, this form is \xe2\x80\xa6dBlue00CgThe Unicode scalar value corresponding to this literal.eGreen00AkReturns the imaginary unit.CmReturns the probability (<code>p</code>) of the distribution.0cRed00AkSlice argument constructor.0BfReturn a transposed view of the array.C`Returns the x/horizontal component of the point.DjTypically, <code>x</code> is the horizontal position, or longitude for \xe2\x80\xa60100BnReturns the y/vertical component of the point.DgTypically, <code>y</code> is the vertical position, or latitude for \xe2\x80\xa60100Bk\xe2\x80\x9cante meridiem\xe2\x80\x9d or \xe2\x80\x9cbefore midday.\xe2\x80\x9do<code>as</code>n<code>@</code>BhA type alias for <code>BigEndian</code>.0AiThe \xe2\x80\x9ccommon era\xe2\x80\x9d era.o<code>do</code>BgThe <code>==</code> operator (equality)n<code>=</code>AmA free-standing function: \xe2\x80\xa6CcA foreign function in an <code>extern</code> block.ChAn associated function within the definition of a trait.BlAn associated function within an impl block.o<code>fn</code>CjThe <code>&gt;=</code> operator (greater than or equal to)Ab<code>&gt;=</code>BmThe <code>&gt;</code> operator (greater than)Aa<code>&gt;</code>Cd<code>Arg</code> or <code>ArgGroup</code> identifier0DkAn <code>if</code> expression with an optional <code>else</code> block: \xe2\x80\xa6o<code>if</code>o<code>in</code>DjRepresents an I/O error. Can occur when writing to <code>stderr</code> \xe2\x80\xa60iIO error.ClThe error was caused by a failure to read or write bytes \xe2\x80\xa6A`Array index typeBkA type alias for <code>LittleEndian</code>.0CgThe <code>&lt;=</code> operator (less than or equal to)Ab<code>&lt;=</code>BjThe <code>&lt;</code> operator (less than)Aa<code>&lt;</code>BkThe <code>!=</code> operator (not equal to)o<code>!=</code>CjRun an unanchored search. This means a match may occur \xe2\x80\xa6CmDST is not in effect. In other words, standard time is in \xe2\x80\xa61CoEquivalent to <code>Ok::&lt;_, anyhow::Error&gt;(value)</code>.AjContains the success value00DcThe output type produced by this <code>Serializer</code> during \xe2\x80\xa60DcMust match the <code>Ok</code> type of our <code>Serializer</code>.000000222222BiThe <code>||</code> operator (logical or)CaA pattern that matches any one of a set of cases.n<code>|</code>BnReturn Archimedes\xe2\x80\x99 constant <code>\xcf\x80</code>.Bj\xe2\x80\x9cpost meridiem\xe2\x80\x9d or \xe2\x80\x9cafter midday.\xe2\x80\x9dBlMPMC queue with a capability for 2 elements.BlMPMC queue with a capability for 4 elements.BlMPMC queue with a capability for 8 elements.DhA convenience function for constructing a <code>DateTime</code> from \xe2\x80\xa6CkReturns a copy of the global <code>TimeZoneDatabase</code>.CaGeneric data structure deserialization framework.BoDeserialize JSON data to a Rust data structure.CeCalculate the difference in \xe2\x80\x98x\xe2\x80\x99 components (\xce\x94x).0CeCalculate the difference in \xe2\x80\x98y\xe2\x80\x99 components (\xce\x94y).0AnPeform the equality comparison00CcChecks if both handles point to the same collector.CnChecks whether the given two Cartesian coordinates are the \xe2\x80\xa6DhDetermines if the elements of this <code>ParallelIterator</code> are \xe2\x80\xa600ClSet the identifier used for referencing this argument in \xe2\x80\xa6AdSets the group name.10AmUnique identifier of the itemBbUnique identifier of the containerAmUnique identifier for the binBgImaginary portion of the complex number00ClImporting problem instances into and exporting solutions \xe2\x80\xa600DeReturns true if <code>E</code> is the type held by this error object.CiZeroth order of the Bessel function of the first kind \xe2\x80\xa6CkFirst order of the Bessel function of the first kind (f64).CjInteger order of the Bessel function of the first kind \xe2\x80\xa6AgLittle-Endian utilities<BbNatural logarithm of each element.BlReturns the natural logarithm of the number.00>B`Peform the inequality comparison00?CgCreate a <code>Style</code> with this as the foreground00000000000DhA convenience function for constructing a <code>DateTime</code> from \xe2\x80\xa6AeThe actual operation.EcThe type of Unicode op used to associate <code>name</code> with <code>value</code>.FcReturns a tuple consisting of the <code>l</code> and <code>r</code> in <code>Both(l, r)</code>, \xe2\x80\xa6BbReal portion of the complex number00AlReborrow with a new lifetimeAgThe line\xe2\x80\x99s end point.CmRoutines for interacting with time zones and the zoneinfo \xe2\x80\xa6BmCreate a new haystack unit from a byte value.CjZeroth order of the Bessel function of the second kind \xe2\x80\xa6CiFirst order of the Bessel function of the second kind \xe2\x80\xa6CkInteger order of the Bessel function of the second kind \xe2\x80\xa6CnAVX but not AVX2: only 128-bit integer operations, but use \xe2\x80\xa6DfThe binary interface of a function: <code>extern &quot;C&quot;</code>.BfThe <code>+</code> operator (addition)AlReport all possible matches.CmAll capture states, including those corresponding to both \xe2\x80\xa6CbThe <code>&amp;&amp;</code> operator (logical and)Ab<code>&amp;</code>Ed<code>std::sync::Arc</code> but backed by a memory <code>Pool</code> rather than \xe2\x80\xa6CkThe abstract representation of a command line argument. \xe2\x80\xa600EgOne arm of a <code>match</code> expression: <code>0..=10 =&gt; { return true; }</code>.ChAn abstract syntax tree for a single regular expression.B`The \xe2\x80\x9cbefore common era\xe2\x80\x9d era.ChA container in the Bin Packing Problem (BPP) with an \xe2\x80\xa6nA memory blockDhA memory block that belongs to the global memory pool, <code>POOL</code>A`<code>box</code>GiThis is <code>Cow&lt;&#39;static, str&gt;</code> for <code>String</code>, and <code>Cow&lt;&#39;a, str&gt;</code> for \xe2\x80\xa6ClUse a DFA. Warning: DFAs typically use a large amount of \xe2\x80\xa6BeA DFA implementation of Aho-Corasick.CmA hybrid NFA/DFA (also called a \xe2\x80\x9clazy DFA\xe2\x80\x9d) for regex \xe2\x80\xa6CkA one-pass DFA for executing a subset of anchored regex \xe2\x80\xa6CeA day is usually 24 hours, but some days may have \xe2\x80\xa6AfDimension description.AmCreate a new dimension value.AnDimension type of the producernDimension typeBfThe <code>/</code> operator (division)AeMatrix MultiplicationAnThe \xe2\x80\x9cany character\xe2\x80\x9d class.CjA type describing the different flavors of <code>.</code>.n<code>.</code>CkAn enum indicating whether a particular datetime  is in \xe2\x80\xa6A`<code>dyn</code>CgSets the offset to the size of this object plus the \xe2\x80\xa6ClMatch the end of text. Specifically, this matches at the \xe2\x80\xa60kAn end tag.ChPseudo-token used for peeking the end of a parse stream.BoSet of environment variables to configure from.CkThe error was caused by prematurely reaching the end of \xe2\x80\xa6BkThe era corresponding to a particular year.AhContains the error value00BkAn error that visiting an AST might return.BkAn error that visiting an HIR might return.222222CbThe exponential distribution <code>Exp(\xce\xbb)</code>.CiA 32-bit floating point number stored in a given byte \xe2\x80\xa6ClA 32-bit floating point number stored in big-endian byte \xe2\x80\xa6CjA 32-bit floating point number stored in little-endian \xe2\x80\xa6CkA 32-bit floating point number stored in network-endian \xe2\x80\xa6CjA 32-bit floating point number stored in native-endian \xe2\x80\xa6CiA 64-bit floating point number stored in a given byte \xe2\x80\xa6ClA 64-bit floating point number stored in big-endian byte \xe2\x80\xa6CjA 64-bit floating point number stored in little-endian \xe2\x80\xa6CkA 64-bit floating point number stored in network-endian \xe2\x80\xa6CjA 64-bit floating point number stored in native-endian \xe2\x80\xa6DjWrapper around the <code>float_cmp::approx_eq!()</code> macro for easy \xe2\x80\xa6A`<code>for</code>ClThe offset for a particular civil datetime and time zone \xe2\x80\xa6ChA high-level intermediate representation (HIR) for a \xe2\x80\xa6CeA 16-bit signed integer stored in a given byte order.ChA 16-bit signed integer stored in big-endian byte order.CkA 16-bit signed integer stored in little-endian byte order.CiA 16-bit signed integer stored in network-endian byte \xe2\x80\xa6CkA 16-bit signed integer stored in native-endian byte order.CeA 32-bit signed integer stored in a given byte order.ChA 32-bit signed integer stored in big-endian byte order.CkA 32-bit signed integer stored in little-endian byte order.CiA 32-bit signed integer stored in network-endian byte \xe2\x80\xa6CkA 32-bit signed integer stored in native-endian byte order.CeA 64-bit signed integer stored in a given byte order.ChA 64-bit signed integer stored in big-endian byte order.CkA 64-bit signed integer stored in little-endian byte order.CiA 64-bit signed integer stored in network-endian byte \xe2\x80\xa6CkA 64-bit signed integer stored in native-endian byte order.ChAn integer literal: <code>1</code> or <code>1u16</code>.CmUnary operator for retrieving the multiplicative inverse, \xe2\x80\xa6AoCreate a zero-dimensional indexAazero-dimensionialAnCreate a one-dimensional indexoone-dimensionalAnCreate a two-dimensional indexotwo-dimensionalB`Create a three-dimensional indexAathree-dimensionalAoCreate a four-dimensional indexA`four-dimensionalAoCreate a five-dimensional indexA`five-dimensionalAnCreate a six-dimensional indexosix-dimensionalAiArray index type (signed)BoKey used to access stored values in a slot map.CiA <code>let</code> guard: <code>let Some(x) = opt</code>.A`<code>let</code>CfA Rust literal such as a string or integer or boolean.EbA literal in place of an expression: <code>1</code>, <code>&quot;foo&quot;</code>.BbA literal pattern: <code>0</code>.CjA trait encapsulating the operations required of a logger.AbThe maximum value.0AnThe maximum possible duration.BdThe maximum representable timestamp.BiThe maximum representable Gregorian date.BmThe maximum representable Gregorian datetime.BhThe minimum representable ISO week date.BeThe maximum representable time value.BfThe maximum possible time zone offset.CbMaximum number representable by <code>Self</code>.AhThe maximum index value.99AeThe maximum duration.CmThe minimum possible duration. Or the \xe2\x80\x9cmost negative\xe2\x80\x9d \xe2\x80\xa6BdThe minimum representable timestamp.BiThe minimum representable Gregorian date.BmThe minimum representable Gregorian datetime.BhThe maximum representable ISO week date.BeThe minimum representable time value.BfThe minimum possible time zone offset.DlA <code>Distribution</code> which maps sampled values to type <code>S</code>Df<code>Map</code> is an iterator that transforms the elements of an \xe2\x80\xa6C`The input contained a map that was not expected.BaRepresents a JSON key/value type.0hMax-heapCdMarker for Max sorted <code>SortedLinkedList</code>.hMin-heapCdMarker for Min sorted <code>SortedLinkedList</code>.EaA module or module declaration: <code>mod m</code> or <code>mod m { ... }</code>.A`<code>mod</code>BlThe <code>*</code> operator (multiplication)A`<code>mut</code>C`A contiguous NFA implementation of Aho-Corasick.CcA noncontiguous NFA implementation of Aho-Corasick.CeA byte oriented Thompson non-deterministic finite \xe2\x80\xa6BhThe <code>-</code> operator for negationCaThe <code>!</code> operator for logical inversionn<code>!</code>EhThe base trait for numeric types, covering <code>0</code> and <code>1</code> values, \xe2\x80\xa6BbA constant <code>Complex</code> 1.DiThe multiplicative identity element of <code>Self</code>, <code>1</code>.BbA level lower than all log levels.CeFinds all occurrences of a single byte in a haystack.00D`Defines a multiplicative identity element for <code>Self</code>.oOne byte range.CkA pattern in a local binding, function signature, match \xe2\x80\xa6BoBinary operator for raising a value to a power.0DaA raw pointer type: <code>*const T</code> or <code>*mut T</code>.A`<code>pub</code>BmMPMC queue with a capability for 16 elements.BmMPMC queue with a capability for 32 elements.BmMPMC queue with a capability for 64 elements.A`<code>raw</code>CmThis structure conceptually represents a half-line (which \xe2\x80\xa60DkRed: #1 (foreground code <code>31</code>, background code <code>41</code>).00A`<code>ref</code>BlA typed reference derived from a byte slice.BeThe <code>%</code> operator (modulus)De<code>Rev</code> is an iterator that produces elements in reverse \xe2\x80\xa6Ak24-bit ANSI RGB color codes00AmUser-level interface for RNGsAlAn <code>svg</code> element.csvgAgA sequence of literals.CeThe input contained a sequence that was not expected.CfWhen encountered, store the associated value(s) in \xe2\x80\xa600BoThe <code>&lt;&lt;</code> operator (shift left)Ae<code>&lt;&lt;</code>C`The <code>&gt;&gt;</code> operator (shift right)Ae<code>&gt;&gt;</code>AlA UTF-8-encoded fixed string0EiThe input contained a <code>&amp;str</code> or <code>String</code> that was not expected.CeA UTF-8 string literal: <code>&quot;foo&quot;</code>.BiThe <code>-</code> operator (subtraction)C`Return the full circle constant <code>\xcf\x84</code>.CaTab, spelled <code>\\t</code> (<code>\\x09</code>).CmAn escaped tab character (usually escaped as <code>\\t</code>)fA tag.0CkOne half of an iterator pair where both return the same \xe2\x80\xa6BeA try-expression: <code>expr?</code>.A`<code>try</code>CaFinds all occurrences of two bytes in a haystack.00AkTwo successive byte ranges.CgA 16-bit unsigned integer stored in a given byte order.CjA 16-bit unsigned integer stored in big-endian byte order.CjA 16-bit unsigned integer stored in little-endian byte \xe2\x80\xa6CkA 16-bit unsigned integer stored in network-endian byte \xe2\x80\xa6CjA 16-bit unsigned integer stored in native-endian byte \xe2\x80\xa6CgA 32-bit unsigned integer stored in a given byte order.CjA 32-bit unsigned integer stored in big-endian byte order.CjA 32-bit unsigned integer stored in little-endian byte \xe2\x80\xa6CkA 32-bit unsigned integer stored in network-endian byte \xe2\x80\xa6CjA 32-bit unsigned integer stored in native-endian byte \xe2\x80\xa6CgA 64-bit unsigned integer stored in a given byte order.CjA 64-bit unsigned integer stored in big-endian byte order.CjA 64-bit unsigned integer stored in little-endian byte \xe2\x80\xa6CkA 64-bit unsigned integer stored in network-endian byte \xe2\x80\xa6CjA 64-bit unsigned integer stored in native-endian byte \xe2\x80\xa6CkThe offset corresponding to UTC. That is, no offset at all.AbThe UTC time zone.AeComplete web address.00AkA <code>use</code> element.cuseCnA use declaration: <code>use std::collections::HashMap</code>.A`<code>use</code>BkType returned by <code>load_consume</code>.BaA fixed capacity <code>Vec</code>CnRun an anchored search. This means that a match must begin \xe2\x80\xa6AaDST is in effect.1BoSee <code>multizip</code> for more information.CkLock step function application across several arrays or \xe2\x80\xa6F`<code>Zip</code> is an iterator that zips up <code>a</code> and <code>b</code> into a single \xe2\x80\xa6C`Build an ioctl number for an argumentless ioctl.CcReturns the absolute value of this signed duration.CkReturns a new span that is the absolute value of this span.AiAbsolute of each element.EgComputes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> \xe2\x80\xa6CmComputes the absolute value of <code>self</code>. Returns \xe2\x80\xa6AlComputes the absolute value.0221BkAdd the given pattern to this set to match.BfBuild a <code>char</code> out of bytesAoAdd a point to the given point.0nAppend a node.000000000000000000000000000000000000000000000000000000000000nAdd a command.fPanics0ClTest whether the predicate holds for all elements in the \xe2\x80\xa6BkContains architecture independent routines.CkTests if every element of the iterator matches a predicate.00000CnTests that every item in the parallel iterator matches the \xe2\x80\xa6CfCreate new storage for the offsets of all matching \xe2\x80\xa6BoInclude the producer <code>p</code> in the Zip.0000ClTest whether the predicate holds for any elements in the \xe2\x80\xa6CkTests if at least one element of the iterator matches a \xe2\x80\xa600000DiSearches for <strong>some</strong> item in the parallel iterator that \xe2\x80\xa6EdLike <code>std::sync::Arc</code> but backed by a memory <code>Pool</code> rather \xe2\x80\xa6BfAdds an argument to this group by nameCdAdds an argument to the list of valid possibilities.BoCreate an <code>Arg</code> from a usage string.021CoConvert a value to another, using the <code>as</code> operator.CcDefines an abstract syntax for regular expressions.oThe actual ast.BhThe regular expression under repetition.BeThe regular expression in this group.B`Bin Packing Problem (BPP) moduleE`Create a new <code>Complex&lt;f32&gt;</code> with arguments that can convert \xe2\x80\xa6E`Create a new <code>Complex&lt;f64&gt;</code> with arguments that can convert \xe2\x80\xa6CfReturns the collision detection engine for this layoutCcLexicographically compares the elements of this \xe2\x80\xa6BcThe cosine of <code>x</code> (f64).BdCosine of each element (in radians).BmComputes the cosine of a number (in radians).00DgEquivalent to <code>days()</code>, but reads better for singular units.0BhReturns the day for this zoned datetime.BjSet the day field on a <code>Zoned</code>.BeReturns the parsed day, if available.AnReturns the day for this date.BiSet the day field on a <code>Date</code>.BbReturns the day for this datetime.BmSet the day field on a <code>DateTime</code>.AgDecrements self by one.nDecrement by 1CeProvides direct access to a DFA implementation of \xe2\x80\xa6CjA module for building and searching with deterministic \xe2\x80\xa6CkToggle whether a fully compiled DFA should be available \xe2\x80\xa6BiTypes and routines specific to lazy DFAs.CgSet the lazy DFA compilation configuration for this \xe2\x80\xa6ClReturn the shape of the array in its \xe2\x80\x9cpattern\xe2\x80\x9d form, \xe2\x80\xa6AjScaler division of a point0BnReturns the dot product of the two points: \xe2\x80\xa60CbCompute the dot product of one-dimensional arrays.DkPerform dot product or matrix multiplication of arrays <code>self</code>\xe2\x80\xa6DiPerform the matrix multiplication of the row vector <code>self</code> \xe2\x80\xa6DiPerform matrix multiplication of rectangular arrays <code>self</code> \xe2\x80\xa6AlCreate a \xe2\x80\x9cdot\xe2\x80\x9d AST item.BmReturns an HIR expression for <code>.</code>.ClReturns whether daylight saving time is enabled for this \xe2\x80\xa60BgReturn the end position of this search.BaThe ending position of the match.BfThe end offset of the span, exclusive.Cnend index; negative are counted from the back of the axis; \xe2\x80\xa60CjReturns the byte offset of the end of the match in the \xe2\x80\xa60432BdThe inclusive end of the byte range.AdThe end byte offset.AfThe end of this range.AmReturn the end of this range.0AnEnd of byte range (inclusive).C`Check for remaining elements after passing a \xe2\x80\xa60AnFinish serializing a sequence.AkFinish serializing a tuple.BbFinish serializing a tuple struct.BcFinish serializing a tuple variant.AiFinish serializing a map.AlFinish serializing a struct.BdFinish serializing a struct variant.DfThe <code>Deserializer::end</code> method should be called after a \xe2\x80\xa6CnChecks whether the cursor is currently pointing at the end \xe2\x80\xa6BnCreate a new \xe2\x80\x9cend of input\xe2\x80\x9d haystack unit.ChCreate a unit that represents the \xe2\x80\x9cend of input\xe2\x80\x9d \xe2\x80\xa6AdError function (f64)BiThe underlying cache error that occurred.BbExponential, base <em>e</em> (f64)Ch<code>e^x</code> of each element (exponential function).CjReturns <code>e^(self)</code>, (the exponential function).00CjExtension traits to provide parsing methods on foreign \xe2\x80\xa6DcCreate an identity matrix of size <code>n</code> (square 2D array).AhFused multiply add (f64)Do<strong>Note:</strong> this does <em>not</em> exhaust the <code>Iterator</code>AkFormatting for log records.CkConfigurable support for printing and parsing datetimes \xe2\x80\xa6BlFormat this value as an identifier fragment.BfShows the original regular expression.000CjFormat an explanation of what data was being expected. \xe2\x80\xa6BaDisplay a JSON value as a string.CnCalculates the Greatest Common Divisor (GCD) of the number \xe2\x80\xa6AnGreatest Common Divisor (GCD).BcAlias for <code>Rng::random</code>.0DfThe <code>geo</code> crate provides geospatial primitive types and \xe2\x80\xa6AiLookup a piece of context0AmDirectly accesses this matrixChGets a reference to the value associated with this entryCjReturns a reference to the value corresponding to the key.CiReturns a reference to the value corresponding to the keyCfReturns an iterator over a subsection of the iterator.DgReturns a <code>TimeZone</code> corresponding to the IANA time zone \xe2\x80\xa6CnA convenience function for performing a time zone database \xe2\x80\xa6BnGet a reference of a element through the view.EhReturn a reference to the element at <code>index</code>, or return <code>None</code> \xe2\x80\xa6ClConvert a mutable array view to a mutable reference of a \xe2\x80\xa6AlGets the weight at an index.DgReturns the <code>Match</code> associated with the capture group at \xe2\x80\xa6CiReturns the start and end byte offsets of the capture \xe2\x80\xa610DiReturn the underlying <code>usize</code> value. The returned value is \xe2\x80\xa6BmGet the equivalence class for the given byte.CcReturn a reference to the lazily initialized value.CkGet a value from the pool. The caller is guaranteed to have>BkGets a reference to the value in the entry.CnIndex into a JSON array or map. A string index can be used \xe2\x80\xa6CjReturns a reference to the value corresponding to the key.000202DgReturns a reference to the inner value if the <code>Once</code> has \xe2\x80\xa6BgBorrows the element at the given index.BhGets a copy of the inner <code>T</code>.CnReturns the value as a primitive type, possibly performing \xe2\x80\xa600000000000CdThe match semantics for the automaton that was used.0CnDefines a high-level intermediate (HIR) representation for \xe2\x80\xa6CkContains the faster iteration, slower insertion/removal \xe2\x80\xa6FjIterate over <code>Arg</code> and <code>ArgGroup</code> <code>Id</code>s via <code>ArgMatches::ids</code>.0AgIncrements self by one.nIncrement by 1AkReturns <code>1/self</code>ChReturns the multiplicative inverse of <code>self</code>.CiZeroth order of the Bessel function of the first kind \xe2\x80\xa6CkFirst order of the Bessel function of the first kind (f32).CjInteger order of the Bessel function of the first kind \xe2\x80\xa6CkGets a reference to the key that this entity corresponds toBfGet the key associated with this entryBjReturns a reference to this entry\xe2\x80\x99s key.CgGets a reference to the key that would be used when \xe2\x80\xa6BiGets a reference to the key in the entry.AkReturns this entry\xe2\x80\x99s key.CjGets the key that would be used when inserting a value \xe2\x80\xa61101CeReturns the latitude/vertical component of the point.0CmCalculates the Lowest Common Multiple (LCM) of the number \xe2\x80\xa6AmLowest Common Multiple (LCM).B`Returns the length of this span.BaReturns the length of this match.CeReturns the number of patterns added to this builder.BaReturns the number of parameters.BiReturns the number of tasks in the deque.0BiReturns the number of tasks in the queue.BoNumber of geometries in this GeometryCollection0CfReturns the number of elements currently in the deque.BmReturns the current fill level of the buffer.C`Return the number of key-value pairs in the map.BjReturns the number of elements in the set.BjReturns the number of elements in this mapBfReturns the length of the binary heap.BkReturns the number of elements in the queue00CaReturn the total number of elements in the array.BoLength in count of elements of the current axisjThe lengthAmReturns the number of indicesAnReturns the number of weights.CkProduces an exact count of how many items this iterator \xe2\x80\xa6CmReturns the total number of capture groups. This includes \xe2\x80\xa6BlReturns the length, in bytes, of this match.ClReturns the total number of capture groups (even if they \xe2\x80\xa6C`Returns the total number of regexes in this set.CmThe total number of regexes in the set that created these \xe2\x80\xa643210B`Returns the length of this span.BaReturns the length of this match.CkReturns the total number of pattern identifiers in this \xe2\x80\xa6CnReturns the total number of look-around assertions in this \xe2\x80\xa6CcThe length of the haystack that exceeded the limit.BoReturns the number of codepoints in this range.BjReturns the number of bytes in this range.3CjReturns the number of literals in this sequence if the \xe2\x80\xa6BlReturns the length of this literal in bytes.CcReturns the number of byte ranges in this sequence.BjReturns the number of elements in the map.BoReturns the number of elements in the slot map.00CdReturns the number of elements in the secondary map.0BkThe number of elements stored in the vectorAmReturns the number of fields.CnReturns the number of syntax tree nodes in this punctuated \xe2\x80\xa6BdThe left hand side of the operation.ChReturns the longitude/horizontal component of the point.0A`Logs the record.BnThe natural logarithm of <code>x</code> (f64).AmA lightweight logging facade.AmLogs the <code>Record</code>.AkThe standard logging macro.CjLogarithm of each element with respect to an arbitrary \xe2\x80\xa6CjReturns the logarithm of the number with respect to an \xe2\x80\xa600CoAdapt a <code>TypedValueParser</code> from one value to another00DhMap <code>f</code> over the contained value and return the result in the0DkMakes a new <code>MappedMutexGuard</code> for a component of the locked \xe2\x80\xa60DiMakes a new <code>MappedReentrantMutexGuard</code> for a component of \xe2\x80\xa60DhMake a new <code>MappedRwLockReadGuard</code> for a component of the \xe2\x80\xa6DiMake a new <code>MappedRwLockWriteGuard</code> for a component of the \xe2\x80\xa610DkCall <code>f</code> by reference on each element and create a new array \xe2\x80\xa6BiMap sampled values to type <code>S</code>006DjApplies <code>map_op</code> to each item of this iterator, producing a \xe2\x80\xa6BeA map of String to serde_json::Value.D`Returns the maximum <code>Coord</code> of the <code>Rect</code>.0BiReturn the maximum value of the iterable.DgGroups elements from the <code>GroupingMap</code> source by key and \xe2\x80\xa6BgReturns the most verbose logging level.BnReturns the most verbose logging level filter.BgReturns the maximum of the two numbers.0000CmComputes the maximum of all the items in the iterator. If \xe2\x80\xa6BdThe maximum range of the repetition.D`Returns the minimum <code>Coord</code> of the <code>Rect</code>.0BiReturn the minimum value of the iterable.7BgReturns the minimum of the two numbers.0000CmComputes the minimum of all the items in the iterator. If \xe2\x80\xa6BdThe minimum range of the repetition.CiCreate a new error object from a printable error message.B`Scaler multiplication of a point0lReturns NaN.BcReturns the <code>NaN</code> value.10CdReturns a point with the x and y components negated.0DgPerform an elementwise negation of <code>self</code> and return the \xe2\x80\xa6DfPerform an elementwise negation of reference <code>self</code> and \xe2\x80\xa6CiCreate a new Aho-Corasick automaton using the default \xe2\x80\xa6ChCreate a new builder for configuring an Aho-Corasick \xe2\x80\xa6BmCreate a new error value with the given kind.CnCreate a new value that is represented by a \xe2\x80\x9csmall index.\xe2\x80\xa6CiCreate a new search configuration for the given haystack.C`Create a new match from a pattern ID and a span.CaCreate a new default configuration. A default \xe2\x80\xa6CiCreate a new builder for constructing a multi-pattern \xe2\x80\xa6CnA convenience function for constructing a searcher from an \xe2\x80\xa65CcCreate a new Aho-Corasick DFA using the default \xe2\x80\xa6CiCreate a new builder for configuring an Aho-Corasick DFA.CnCreate a new Aho-Corasick contiguous NFA using the default \xe2\x80\xa6:CiCreate a new Aho-Corasick noncontiguous NFA using the \xe2\x80\xa6;BeRuntime control over styling behaviorChOnly pass printable data to the inner <code>Write</code>mInitial stateAlSee <code>strip_bytes</code>11AbNo effects enabled0AcCreate a new ParserBnCreate a new error object from any error type.CaCreate a new <code>Arg</code> with a unique name.CcCreate a <code>ArgGroup</code> using a unique name.CbCreates a new instance of an <code>Command</code>.BjCreate an error with a pre-defined messageBaCustom parser for argument valuesCbCreate a <code>PossibleValue</code> with its name.nCreate a rangeAfCreate an empty bufferCcImplementation for <code>ValueParser::string</code>CfImplementation for <code>ValueParser::os_string</code>CeImplementation for <code>ValueParser::path_buf</code>AoParse an <code>ValueEnum</code>DkVerify the value is from an enumerated set of <code>PossibleValue</code>\xe2\x80\xa6BeSelect full range of <code>i64</code>BeSelect full range of <code>u64</code>CaImplementation for <code>ValueParser::bool</code>DdParse false-like string values, everything else is <code>true</code>AmParse bool-like string valuesAmParse non-empty string valuesAbNo effects enabled0?CaCreate a new <code>Arg</code> with a unique name.CcCreate a <code>ArgGroup</code> using a unique name.CbCreates a new instance of an <code>Command</code>.CbCreate a <code>PossibleValue</code> with its name.nCreate a rangeAfCreate an empty bufferCcImplementation for <code>ValueParser::string</code>CfImplementation for <code>ValueParser::os_string</code>CeImplementation for <code>ValueParser::path_buf</code>AoParse an <code>ValueEnum</code>DkVerify the value is from an enumerated set of <code>PossibleValue</code>\xe2\x80\xa6BeSelect full range of <code>i64</code>BeSelect full range of <code>u64</code>CaImplementation for <code>ValueParser::bool</code>DdParse false-like string values, everything else is <code>true</code>AmParse bool-like string valuesAmParse non-empty string valuesAbNo effects enabled0BjCreate an error with a pre-defined messagegExampleAmCreates a new injector queue.DeAllocates <code>value</code> on the heap and returns a new atomic \xe2\x80\xa6DdAllocates <code>value</code> on the heap and returns a new owned \xe2\x80\xa6AhCreates a new collector.CcThe new value, which the operation failed to store.0BcCreates a new <code>Backoff</code>.CfPads and aligns a value to the length of a cache line.ClCreates a new atomic cell initialized with <code>val</code>.BbCreates a new <code>Parker</code>.BiCreates a new sharded reader-writer lock.CmCreates a new wait group and returns the single reference \xe2\x80\xa6BmInitializes the filter builder with defaults.AjCreate a new filtered log.BjInitializes the log builder with defaults.BkGet a default set of environment variables.CdCreates a dispatch, which will initially do nothing.BdCreate a new custom transform matrixBbReturn an empty GeometryCollectionAkCreates a new line segment.BoReturns a LineString with the given coordinatesCkReturns a MultiLineString with the given LineStrings as \xe2\x80\xa6CfReturns a MultiPoint with the given Points as elementsCjReturns a MultiPolygon with the given Polygons as elementsAdCreates a new point.EhCreate a new <code>Polygon</code> with the provided exterior <code>LineString</code> \xe2\x80\xa6CdCreates a new rectangle from two corner coordinates.BkInstantiate Self from the raw content valueCkCreates and returns a Coordinate w.r.t. the given argument.CeCreates and returns a Ray w.r.t. the given arguments.;:98765432ChCreate a new geodesic line from an initial point and \xe2\x80\xa6BjCreate a new PolygonArea using a Geodesic.An<code>const</code> constructorDeConstructs a new, empty deque with a fixed capacity of <code>N</code>B`Constructs a new history buffer.BgCreates an empty <code>IndexMap</code>.BfCreates an empty <code>IndexSet</code>BgCreates an empty <code>LinearMap</code>EgConstructs a new, empty <code>String</code> with a fixed capacity of <code>N</code> \xe2\x80\xa6DfConstructs a new, empty vector with a fixed capacity of <code>N</code>BiCreates an empty BinaryHeap as a $K-heap.AhCreates a new empty poolBaConstructs a new <code>Arc</code>AfCreates an empty queueDbCreates an empty queue with a fixed capacity of <code>N - 1</code>CnThis is a cheap operation; you don\xe2\x80\x99t need to worry about \xe2\x80\xa6DmCreates a new <code>SPSurrogate</code> from a <code>SPolygon</code> and a \xe2\x80\xa6CeCreate a new simple polygon from a set of points, \xe2\x80\xa6CdCreates a new instance with the given configuration.CnCreates a new bin with the given id, container, stock, and \xe2\x80\xa6DfCreates a new <code>SignedDuration</code> from the given number of \xe2\x80\xa6ClCreate a new default configuration for rounding a signed \xe2\x80\xa6CmCreates a new span representing a zero duration. That is, \xe2\x80\xa6CnCreate a new default configuration for rounding a span via \xe2\x80\xa6CiCreates a new instant in time represented as a timestamp.CmCreate a new default configuration for computing the span \xe2\x80\xa6DkCreate a new default configuration for rounding a <code>Timestamp</code>\xe2\x80\xa6DgCreates a new <code>Zoned</code> value from a specific instant in a \xe2\x80\xa62DeCreate a new default configuration for rounding a <code>Zoned</code>.ChCreates a new parser for the \xe2\x80\x9cfriendly\xe2\x80\x9d duration \xe2\x80\xa6CiCreates a new printer for the \xe2\x80\x9cfriendly\xe2\x80\x9d duration \xe2\x80\xa6CjCreate a new Temporal datetime parser with the default \xe2\x80\xa6CkCreate a new Temporal datetime printer with the default \xe2\x80\xa60CgCreate a new Temporal span printer with the default \xe2\x80\xa6DnCreate a new default <code>Config</code> that uses <code>DefaultCustom</code>.CdCreate a new instance of this default customization.CbCreate a new instance of this POSIX customization.CjCreate a new RFC 2822 datetime parser with the default \xe2\x80\xa6CkCreate a new RFC 2822 datetime printer with the default \xe2\x80\xa6DhCreates a new <code>Date</code> value from its component year, month \xe2\x80\xa6>DfCreates a new <code>DateTime</code> value from its component year, \xe2\x80\xa6?DhCreate a new default configuration for rounding a <code>DateTime</code>.CeCreate a new ISO week date from it constituent parts.DjCreates a new <code>Time</code> value from its component hour, minute, \xe2\x80\xa6CmCreate a new default configuration for computing the span \xe2\x80\xa6DdCreate a new default configuration for rounding a <code>Time</code>.CjCreate a new default configuration for rounding a time \xe2\x80\xa6CgCreates a new mutex in an unlocked state ready for use.ClCreates a new reentrant mutex in an unlocked state ready \xe2\x80\xa6DlCreates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.BiConstruct new <code>RecordBuilder</code>.BmConstruct a new <code>MetadataBuilder</code>.CjReturns an iterator over all occurrences of the needle \xe2\x80\xa600ClCreate a new searcher that finds occurrences of the byte \xe2\x80\xa6CkCreate a new searcher that finds occurrences of the two \xe2\x80\xa6CmCreate a new searcher that finds occurrences of the three \xe2\x80\xa6CjCreate a new prefilter that reports possible locations \xe2\x80\xa6CcCreate a new pair of offsets from the given needle.CjCreate a new Rabin-Karp forward searcher for the given \xe2\x80\xa6CjCreate a new Rabin-Karp reverse searcher for the given \xe2\x80\xa6DkCreate a new Shift-Or forward searcher for the given <code>needle</code>\xe2\x80\xa6CiCreate a searcher that finds occurrences of the given \xe2\x80\xa60CnCreate a new searcher that finds occurrences of the needle \xe2\x80\xa600CiCreate a new pair searcher. The searcher returned can \xe2\x80\xa61110BiCreate a new finder for the given needle.CaCreate a new reverse finder for the given needle.CbCreate a new finder builder with default settings.BfCreate a new cell with the given valueCgCreate a new <code>Slice</code> with the given extents.BnReturns a new <code>SliceInfo</code> instance.BaCreate a new <code>Complex</code>CiFor a given n, iterate over all binomial coefficients \xe2\x80\xa6BcCreate a <code>NotNan</code> value.DdReturns an empty <code>TokenStream</code> containing no token trees.DgCreates a new <code>Group</code> with the given delimiter and token \xe2\x80\xa6DfCreates a new <code>Punct</code> from the given character and spacing.EfCreates a new <code>Ident</code> with the given <code>string</code> as well as the \xe2\x80\xa6DhConstruct a new <code>Bernoulli</code> with the given probability of \xe2\x80\xa6DjCreate a new <code>Choose</code> instance which samples uniformly from \xe2\x80\xa6ClConstruct self, with inclusive lower bound and exclusive \xe2\x80\xa6DgCreate a new <code>Uniform</code> instance, which samples uniformly \xe2\x80\xa6EeCreates a new a <code>WeightedIndex</code> <code>Distribution</code> using the valuesDjCreate a new <code>ReseedingRng</code> from an existing PRNG, combined \xe2\x80\xa6DkCreate a <code>StepRng</code>, yielding an arithmetic sequence starting \xe2\x80\xa6DhCreate a new <code>BlockRng</code> from an existing RNG implementing \xe2\x80\xa60DgConstruct an object representing the <code>Beta(alpha, beta)</code> \xe2\x80\xa68EhConstruct a new <code>Binomial</code> with the given shape parameters <code>n</code> \xe2\x80\xa6DgConstruct a new <code>Cauchy</code> with the given shape parameters \xe2\x80\xa6BnCreate a new chi-squared distribution with \xe2\x80\xa6DiConstruct a new <code>Dirichlet</code> with the given alpha parameter \xe2\x80\xa6EdConstruct a new <code>Exp</code> with the given shape parameter <code>lambda</code>.DbCreate a new <code>FisherF</code> distribution, with the given \xe2\x80\xa6EgConstruct a new <code>Frechet</code> distribution with given <code>location</code>, \xe2\x80\xa6DiConstruct an object representing the <code>Gamma(shape, scale)</code> \xe2\x80\xa6EhConstruct a new <code>Geometric</code> with the given shape parameter <code>p</code> \xe2\x80\xa6EeConstruct a new <code>Gumbel</code> distribution with given <code>location</code> \xe2\x80\xa6DjConstructs a new <code>Hypergeometric</code> with the shape parameters \xe2\x80\xa6DfConstruct a new <code>InverseGaussian</code> distribution with the \xe2\x80\xa6BkConstruct, from mean and standard deviationDgCreate a new <code>Uniform</code> instance, which samples uniformly \xe2\x80\xa6CgConstruct, from (log-space) mean and standard deviationDhConstruct a new <code>NormalInverseGaussian</code> distribution with \xe2\x80\xa6DiConstruct a new Pareto distribution with given <code>scale</code> and \xe2\x80\xa6DmConstruct a PERT distribution with defined <code>min</code>, <code>max</code>DgConstruct a new <code>Poisson</code> with the given shape parameter \xe2\x80\xa6BjConstruct, from location, scale and shape.DiCreate a new Student t-distribution with <code>\xce\xbd</code> (nu) degrees \xe2\x80\xa6EfSet up the Triangular distribution with defined <code>min</code>, <code>max</code> \xe2\x80\xa6EgConstruct a new <code>Weibull</code> distribution with given <code>scale</code> and \xe2\x80\xa6EcConstruct a new <code>Zeta</code> distribution with given <code>s</code> parameter.E`Construct a new <code>Zipf</code> distribution for a set with <code>n</code> \xe2\x80\xa6ClConstruct self, with inclusive lower bound and exclusive \xe2\x80\xa6BnCreates a new <code>WeightedAliasIndex</code>.DeCreates a new <code>WeightedTreeIndex</code> from a slice of weights.EeCreates a new a <code>WeightedIndex</code> <code>Distribution</code> using the valuesCmDeprecated in favor of <code>ThreadPoolBuilder::build</code>.CnCreates and returns a valid rayon thread pool builder, but \xe2\x80\xa610C`Creates and return a valid rayon thread pool \xe2\x80\xa6CmCreate a new builder with a default configuration for the \xe2\x80\xa60CkCompiles a regular expression. Once compiled, it can be \xe2\x80\xa6CjCreate a new regex set with the given regular expressions.2210CiCreate a new search configuration for the given haystack.ChCreate a new half match from a pattern ID and a byte \xe2\x80\xa6C`Create a new match from a pattern ID and a span.CjCreate a new set of pattern identifiers with the given \xe2\x80\xa6BmCreate a new error value with the given kind.DfBuilds a <code>Regex</code> from a single pattern string using the \xe2\x80\xa6CiCreates a new <code>Cache</code> for use with this regex.CkCreate a new configuration object for a <code>Regex</code>.ClCreates a new builder for configuring and constructing a \xe2\x80\xa6CfParse the given regular expression using a default \xe2\x80\xa6BjCreate a new cache for the given lazy DFA.CdReturn a new default lazy DFA builder configuration.CbCreate a new lazy DFA builder with the default \xe2\x80\xa6ChParse the given regular expression using the default \xe2\x80\xa6CdCreate a new cache for the given <code>Regex</code>.CjCreate a new regex builder with the default configuration.C`Return a new default one-pass DFA configuration.CfCreate a new one-pass DFA builder with the default \xe2\x80\xa64BmCreate a new <code>onepass::DFA</code> cache.BnCreate a new builder for hand-assembling NFAs.CiReturn a new default Thompson NFA compiler configuration.ChCreate a new NFA builder with its default configuration.<BjReturn a new default PikeVM configuration.CkCreate a new PikeVM builder with its default configuration.:BgCreate a new <code>PikeVM</code> cache.BiReturn a new default regex configuration.ClCreate a new BoundedBacktracker builder with its default \xe2\x80\xa6=CcCreate a new <code>BoundedBacktracker</code> cache.CgCreate a new fallible non-overlapping matches iterator.BiCreate a new default start configuration.BjReturn a new default syntax configuration.CkCreate a new <code>NonMaxUsize</code> from the given value.AiCreate a new small index.CnCreate a new value that is represented by a \xe2\x80\x9csmall index.\xe2\x80\xa60CiCreates a new group info from a sequence of patterns, \xe2\x80\xa6CiCreates a new default matcher for look-around assertions.CkCreate a new prefilter from a sequence of needles and a \xe2\x80\xa6DjCreate a new <code>Lazy</code> value that is initialized via the given \xe2\x80\xa6CjCreate a new pool. The given closure is used to create \xe2\x80\xa6CiCreate a new parser builder with a default configuration.CaCreate a new parser with a default configuration.BkCreate a new span with the given positions.CaCreate a new position with the given information.32AeCreate a new printer.BmCreate a new class from a sequence of ranges.CkCreate a new Unicode scalar value range for a character \xe2\x80\xa61BnCreate a new byte range for a character class.CdCreate a new extractor with a default configuration.ClReturns a sequence of exact literals from the given byte \xe2\x80\xa65CdCreate a new translator builder with a default c \xe2\x80\xa6ChCreate a new translator using the default configuration.ChCreate a new iterator over UTF-8 byte ranges for the \xe2\x80\xa6AlCreates a new, empty r-tree.CgCreate a new GeomWithData struct using the provided \xe2\x80\xa6BfCreates a new line between two points.D`Creates a new <code>PointWithData</code> with the provided data.CnThis is a cheap operation; you don\xe2\x80\x99t need to worry about \xe2\x80\xa6CiCreate a new borrowed deserializer from the given string.BoCreate a new deserializer from the given bytes.CnCreate a new borrowed deserializer from the given borrowed \xe2\x80\xa6CiConstruct a new <code>MapDeserializer&lt;I, E&gt;</code>.CiConstruct a new <code>SeqDeserializer&lt;I, E&gt;</code>.ClConstruct a new <code>SeqAccessDeserializer&lt;A&gt;</code>.ClConstruct a new <code>MapAccessDeserializer&lt;A&gt;</code>.CmConstruct a new <code>EnumAccessDeserializer&lt;A&gt;</code>.AfMakes a new empty Map.CgCreate a JSON deserializer from one of the possible \xe2\x80\xa6CnCreate a JSON stream deserializer from one of the possible \xe2\x80\xa6CkCreate a JSON input source to read from a std::io input \xe2\x80\xa6CiCreate a JSON input source to read from a slice of bytes.CgCreate a JSON input source to read from a UTF-8 string.AnCreates a new JSON serializer.CiConstruct a pretty printer formatter that defaults to \xe2\x80\xa6BmConstructs a new, empty <code>SlotMap</code>.CaConstruct a new, empty <code>DenseSlotMap</code>.C`Constructs a new, empty <code>HopSlotMap</code>.CbConstructs a new, empty <code>SecondaryMap</code>.ChConstructs a new, empty <code>SparseSecondaryMap</code>.AiConstruct an empty vectorCjCreates a new barrier that can block a given number of \xe2\x80\xa6ChCreates a new lazy value with the given initializing \xe2\x80\xa6ClCreates a new <code>Mutex</code> wrapping the supplied data.D`Creates a new <code>SpinMutex</code> wrapping the supplied data.B`Creates a new <code>Once</code>.CbCreates a new spinlock wrapping the supplied data.nCreate a node.00AbCreate an element.1111111111111111111111111111111111111111111111111111111111111AhCreate a data attribute.A`Create a parser.A`Create an error.DcUsually the <code>ParseStream::error</code> method will be used \xe2\x80\xa6EfCreates a new <code>Ident</code> with the given <code>string</code> as well as the \xe2\x80\xa6fPanicsCcInterpret a Syn literal from a proc-macro2 literal.DiCreates a <code>TokenBuffer</code> containing all the tokens from the \xe2\x80\xa6BeCreates an empty punctuated sequence.CnCreates a punctuated pair out of a syntax tree node and an \xe2\x80\xa6AcCreate a new ParserDjCreates a new <code>Duration</code> from the specified number of whole \xe2\x80\xa6BfConstructs a new <code>Unalign</code>.CmConstructs a new value, possibly performing an endianness \xe2\x80\xa600000000000CdProvides direct access to NFA implementations of \xe2\x80\xa6CnProvides non-deterministic finite automata (NFA) and regex \xe2\x80\xa6DhPerform an elementwise unary not of <code>self</code> and return the \xe2\x80\xa6DgPerform an elementwise unary not of reference <code>self</code> and \xe2\x80\xa6BoReturns the current system time as a timestamp.CkReturns the current system time in this system\xe2\x80\x99s time \xe2\x80\xa6BnReturns an instant corresponding to \xe2\x80\x9cnow\xe2\x80\x9d.CcReturns the system time corresponding to \xe2\x80\x9cnow\xe2\x80\x9d.BjReturns a single coordinate of this point.CdReturns the multiplicative identity, <code>1</code>.EaReturns the multiplicative identity element of <code>Self</code>, <code>1</code>.AhPins the current thread.A`Pins the handle.BoPole of inaccessibility represented as a circleAkPops a task from the queue.CiRemoves the last character from the string buffer and \xe2\x80\xa6CmRemoves the last element from a vector and returns it, or \xe2\x80\xa6CoRemoves the <em>top</em> (greatest if max-heap, smallest if \xe2\x80\xa6CfRemoves the peeked value from the heap and returns it.BcPops the first element in the list.BhThis will pop the element from the list.DiRemoves the last weight and returns it, or <code>None</code> if it is \xe2\x80\xa6ClRemove an item from the end of the vector and return it, \xe2\x80\xa6CkRemoves the last punctuated pair from this sequence, or \xe2\x80\xa6ClReturns <code>x</code> to the power of <code>y</code> (f64).DiRaises self to the power of <code>exp</code>, using exponentiation by \xe2\x80\xa6ClRaises a value to the power of exp, using exponentiation \xe2\x80\xa6ChReturns <code>self</code> to the power <code>rhs</code>.0ChPass bytes as part of a device control string to the \xe2\x80\xa6CcConsumes this guard and puts it back into the pool.B`Consume all following arguments.AkCreate an unformatted error10BhReturns the underlying raw mutex object.0CeReturns the underlying raw reader-writer lock object.CaUnsafe functions that mirror the API of the C \xe2\x80\xa6BiIterate <code>iterable</code> in reverse.CnProduces a new iterator with the elements of this iterator \xe2\x80\xa6BeThe right hand side of the operation.BnSmallRng is a fast, non-cryptographic PRNG \xe2\x80\xa60BhAccess a fast, pre-initialized generatorBoReturn an array view of row <code>index</code>.CiExecutes the main loop for this thread. This will not \xe2\x80\xa60Algithub\xe2\x80\x82crates-io\xe2\x80\x82docs-rsAnSequence-related functionalityBoGeneric data structure serialization framework.BoSerialize a Rust data structure into JSON data.ClEnable or disable the specified effects depending on the \xe2\x80\xa600BmSet the equivalence class for the given byte.AdAssign an attribute.000000000000000000000000000000000000000000000000000000000000CkSets the inner <code>T</code>, dropping the previous value.ClUpdates the value in place as a primitive type, possibly \xe2\x80\xa600000000000BaThe sine of <code>x</code> (f64).BbSine of each element (in radians).BkComputes the sine of a number (in radians).00BbStrip Packing Problem (SPP) moduleCcReturn standard deviation of elements in the array.BcParallel iterator types for stringsBfSubtract a point from the given point.0CkThe expression inside the capturing group, which may be \xe2\x80\xa6AnThe expression being repeated.CnReturns the amount of time elapsed from another instant to \xe2\x80\xa6DgGroups elements from the <code>GroupingMap</code> source by key and \xe2\x80\xa6BlReturn the sum of all elements in the array.BmSums all values in slice <code>values</code>.0BbSums up the items in the iterator.CdAll logic for creating SVG from <code>Layout</code>sAkAn SVG composer and parser.Algithub\xe2\x80\x82crates-io\xe2\x80\x82docs-rsBjReturns the tag stored within the pointer.0iThe tags.BdThe tangent of <code>x</code> (f64).BeTangent of each element (in radians).BnComputes the tangent of a number (in radians).00ClSplit into an iterator pair that both yield all elements \xe2\x80\xa6DkGet random <code>u32</code> from the system\xe2\x80\x99s preferred random number \xe2\x80\xa6DkGet random <code>u64</code> from the system\xe2\x80\x99s preferred random number \xe2\x80\xa6BiReturn variance of elements in the array.CoParallel iterator types for vectors (<code>Vec&lt;T&gt;</code>)CjCreates a <code>crate::geometry</code> from a WKT literal.ChReturns a tuple that contains the x/horizontal &amp; \xe2\x80\xa6000CjZeroth order of the Bessel function of the second kind \xe2\x80\xa6CiFirst order of the Bessel function of the second kind \xe2\x80\xa6CkInteger order of the Bessel function of the second kind \xe2\x80\xa6CbConverts the arguments to iterators and zips them.EeIterates over tuples <code>(A, B)</code>, where the items <code>A</code> are from \xe2\x80\xa6CjIterates tuples, repeating the element with items from \xe2\x80\xa6CbAn n-dimensional axis aligned bounding box (AABB).BhAvailable 4-bit ANSI color palette codes00BnSigned and unsigned planar area of a geometry.CgParse a set of arguments into a user-defined container.0BeGenerates the <code>Args</code> impl.CgUse colors if the output device appears to support themCmEnables colored output only when the output is going to a \xe2\x80\xa601CaTry to print styles, but don\xe2\x80\x99t force the issue.CjSets the sign format based on other configuration options.CmAutomatically detect whether a heuristic prefilter should \xe2\x80\xa6Aa<code>auto</code>CmAn iterator over the length and stride of each axis of an \xe2\x80\xa6nAn axis index.CbBell, spelled <code>\\a</code> (<code>\\x07</code>).C`The Beta distribution <code>Beta(\xce\xb1, \xce\xb2)</code>.lA blob node.DlBlue: #4 (foreground code <code>34</code>, background code <code>44</code>).00nA single value0CjThe input contained a boolean value that was not expected.AjRepresents a JSON boolean.0CkA boolean literal: <code>true</code> or <code>false</code>.BnSupport both anchored and unanchored searches.AhBoth values are present.BjA byte literal: <code>b&#39;f&#39;</code>.n<code>R</code>DaA nul-terminated C-string literal: <code>c&quot;foo&quot;</code>.CfA function call expression: <code>invoke(a, b)</code>.BkA cast expression: <code>foo as f64</code>.B`Rounds toward positive infinity.CnThe input contained a <code>char</code> that was not expected.BnA character literal: <code>&#39;a&#39;</code>.DlCyan: #6 (foreground code <code>36</code>, background code <code>46</code>).00CcThe type of data that can be allocated on this poolAoThe data behind the Arc pointerAkArray representation trait.ClThe error was caused by input data that was semantically \xe2\x80\xa6AaA data attribute.CfThe storage of a struct, enum or union data structure.CkA representation of a civil date in the Gregorian calendar.CgA type returned by the <code>diff_with</code> function.BkFold is complete and will return this value0BlLine segment between two <code>Point</code>sAgThe array element type.BgThe element type of the trailing slice.Aa<code>else</code>CbThe input contained an enum that was not expected.DeAn enum definition: <code>enum Foo&lt;A, B&gt; { A(A), B(B) }</code>.Aa<code>enum</code>o<code>==</code>CjThe standard exponential distribution <code>Exp(1)</code>.AbA Rust expression.BoExpression, with or without trailing semicolon.CnA state that cannot be transitioned out of. This is useful \xe2\x80\xa6BdA complete file of Rust source code.BjTypes which may be filled with random datanA single flag.AiA single flag in a group.ClThe offset for a particular civil datetime and time zone \xe2\x80\xa6Dd<code>Fold</code> is an iterator that applies a function over an \xe2\x80\xa6AlFour successive byte ranges.CiA glob import in a <code>use</code> item: <code>*</code>.BmSee <code>core::hash::Hash</code> for detailsCjWhen encountered, display <code>Command::print_help</code>00BcRepresents a hole in the container.AmAn hour is always 60 minutes.CaThe smallest whole integer unit allowed is hours.CfA 128-bit signed integer stored in a given byte order.CiA 128-bit signed integer stored in big-endian byte order.CiA 128-bit signed integer stored in little-endian byte \xe2\x80\xa6CjA 128-bit signed integer stored in network-endian byte \xe2\x80\xa6CiA 128-bit signed integer stored in native-endian byte \xe2\x80\xa6BdInitial value for an unlocked mutex.nInitial value.1CbInitial value for an unlocked <code>RwLock</code>.BmInitialization constant of <code>Once</code>.AlNo available work was found.0CfAn impl block providing trait or associated items: \xe2\x80\xa6Aa<code>impl</code>AeThe \xe2\x80\x9cinfo\xe2\x80\x9d level.BoCorresponds to the <code>Info</code> log level.AjThe type for initializers.AfInitialized type stateAdItem to be produced.BcThe element produced per iteration.0BlResults element type, e.g. <code>u32</code>.CiThe type of item that the parallel iterator will produce.CmThe type of item that the parallel iterator will produce. \xe2\x80\xa6CmThe type of item that will be produced; this is typically \xe2\x80\xa6CnThe type of item that this parallel iterator produces. For \xe2\x80\xa622CkThe type of item that will be produced by this producer \xe2\x80\xa6BkThe type of item returned by this producer.CiAn item, which can be a single literal, range, nested \xe2\x80\xa6BcThe type of the array\xe2\x80\x99s elements.CiThings that can appear directly inside of a module or \xe2\x80\xa6AcAn item definition.AmIterator for the linked list.BeAn iterator over the items of a queueBjAn iterator over the elements of an array.BlAn iterator over a <code>Distribution</code>0C`The parallel iterator type that will be created.ChThe type of the parallel iterator that will be returned.BjThe type of iterator that will be created.CiThe draining parallel iterator type that will be created.0DiA parallel iterator over a reference to the <code>Some</code> variant \xe2\x80\xa6CiParallel iterator over an immutable reference to a resultCaParallel iterator over immutable items in a sliceCmParallel iterator over an immutable reference to a B-Tree \xe2\x80\xa6CmParallel iterator over an immutable reference to a binary \xe2\x80\xa61CkParallel iterator over an immutable reference to a hash mapCkParallel iterator over an immutable reference to a hash setCmParallel iterator over an immutable reference to a linked \xe2\x80\xa6CfParallel iterator over an immutable reference to a \xe2\x80\xa6CgParallel iterator over a range, implemented for all \xe2\x80\xa6CnParallel iterator over an inclusive range, implemented for \xe2\x80\xa6BoAn iterator over a serde_json::Map\xe2\x80\x99s entries.CoAn iterator over the key-value pairs in a <code>SlotMap</code>.DdAn iterator over the key-value pairs in a <code>DenseSlotMap</code>.DbAn iterator over the key-value pairs in a <code>HopSlotMap</code>.DdAn iterator over the key-value pairs in a <code>SecondaryMap</code>.BmAn iterator over the key-value pairs in a \xe2\x80\xa6CmAn iterator over borrowed values of type <code>&amp;T</code>.BlAn iterator over a serde_json::Map\xe2\x80\x99s keys.CdAn iterator over the keys in a <code>SlotMap</code>.CiAn iterator over the keys in a <code>DenseSlotMap</code>.CgAn iterator over the keys in a <code>HopSlotMap</code>.CiAn iterator over the keys in a <code>SecondaryMap</code>.CoAn iterator over the keys in a <code>SparseSecondaryMap</code>.BjThe binary heap kind: min-heap or max-heapBjThe linked list kind: min-list or max-listAlReturn <code>ln(2.0)</code>.AiThis is the last element.EaA lazily initialized value that implements <code>Deref</code> for <code>T</code>.CiA value which is initialized on the first access. See \xe2\x80\xa6CaA value which is initialized on the first access.BnA leaf node, only containing the r-tree objectAoA value of type <code>L</code>.0CfOnly the left value of type <code>A</code> is present.1CkGeneric helper for libm functions, abstracting over f32 \xe2\x80\xa6CjA line segment made up of exactly two <code>Coord</code>s.0BlA line defined by a start and and end point.AlA <code>line</code> element.AdDraw straight lines.dlineAlA <code>link</code> element.dlinkBoA structured list within an attribute, like \xe2\x80\xa6CkA conditional epsilon transition satisfied via some sort ofAhA look-around assertion.CdThe high-level intermediate representation for a \xe2\x80\xa6CkA look-around assertion. A look-around match always has \xe2\x80\xa6CmA strategy that rapidly spins, without telling the CPU to \xe2\x80\xa6BnConditionless loop: <code>loop { ... }</code>.Aa<code>loop</code>AlA <code>mask</code> element.dmaskCeThe literal is written as an escape because it is \xe2\x80\xa6BoContent of a compile-time structured attribute.AnEstablish a new current point.Aa<code>move</code>DjFor fixed-size dimension representations (e.g. <code>Ix2</code>), this \xe2\x80\xa6DhAn identifier imported by a <code>use</code> item: <code>HashMap</code>.CiUnfortunate implementation detail required to use the \xe2\x80\xa6BlA node in the <code>SortedLinkedList</code>.gA node.CeNo match was found. Since false negatives are not \xe2\x80\xa6Dj<code>ContextKind</code> is self-sufficient, no additional information \xe2\x80\xa60BkThe hazard is entirely absent from the nodeAcNo rotation allowedBeDoes not insert any ASCII whitespace.BkNever used a prefilter in substring search.Ah<code>\xe2\x88\x85 ... \xe2\x88\x85</code>CeNo capture states are compiled into the Thompson NFA.AmRepresents a JSON null value.0CfIterator adaptor for the <code>once()</code> function.CkA primitive that provides lazy one-time initialization. \xe2\x80\xa6CgA primitive that provides lazy one-time initialization.AiThis is the only element.BiAn existing layout, identified by its keyo<code>|=</code>o<code>||</code>CkA pair of byte offsets into a needle to use as a predicate.DdA single syntax tree node of type <code>T</code> followed by its \xe2\x80\xa6AlA <code>path</code> element.dpathCbA path at which a named item is exported (e.g. \xe2\x80\xa6DjA path like <code>std::mem::replace</code> possibly containing generic \xe2\x80\xa6DkA path prefix of imports in a <code>use</code> item: <code>std::...</code>.DhA path pattern like <code>Color::Red</code>, optionally qualified with aDjA path like <code>std::slice::Iter</code>, optionally qualified with a \xe2\x80\xa6CfTypes that can be parsed by looking at just one token.DaA perl character class, e.g., <code>\\d</code> or <code>\\W</code>.CoThe PERT distribution <code>PERT(min, max, mode, shape)</code>.BcLogs will be sent to a custom pipe.n<code>+</code>AgA lock-free memory poolAnA global singleton memory poolAdPool of Arc pointersDdA thread safe pool that works in an <code>alloc</code>-only context.Aa<code>priv</code>CdThe search saw a \xe2\x80\x9cquit\xe2\x80\x9d byte at which it was \xe2\x80\xa6CjAn error that occurs when a starting configuration\xe2\x80\x99s \xe2\x80\xa6ClTrait used by the deserializer for iterating over input. \xe2\x80\xa6CnA trait for real number types that do not necessarily have \xe2\x80\xa6DgAn <em>axis-aligned</em> bounded 2D rectangle whose area is defined \xe2\x80\xa60AfAxis-aligned rectangleCnThe dots in a tuple or slice pattern: <code>[0, 1, ..]</code>.CgThe number of bytes that a single value uses in memory.0CiThe number of bytes that a single small index uses in \xe2\x80\xa611BkSeed type, which is restricted to types \xe2\x80\xa60n<code>;</code>CnWhen set, a sign is only written when the span or duration \xe2\x80\xa6BlThe conversion source was of incorrect size.0000ClAn affine transformation which skews a geometry, sheared \xe2\x80\xa6Eg<code>Skip</code> is an iterator that skips over the first <code>n</code> elements. \xe2\x80\xa6BjA representation of a range in a haystack.ClA span of time represented via a mixture of calendar and \xe2\x80\xa6CgA region of source code, along with macro expansion \xe2\x80\xa6CfA representation of a span reported by a regex engine.ClSpan represents the position information of a single AST \xe2\x80\xa6CnA strategy that rapidly spins while informing the CPU that \xe2\x80\xa6n<code>*</code>BkA statement, usually ending in a semicolon.AlA <code>stop</code> element.dstopE`<code>Take</code> is an iterator that iterates over the first <code>n</code> \xe2\x80\xa6lA text node.AlA <code>text</code> element.dtextgA text.C`A representation of civil \xe2\x80\x9cwall clock\xe2\x80\x9d time.A`A type of a tag.C`The possible types that a Rust value could have.CmA generic type parameter: <code>T: Into&lt;String&gt;</code>.CdA type predicate in a <code>where</code> clause: \xe2\x80\xa6AaA type alias: \xe2\x80\xa6DgA foreign type in an <code>extern</code> block: <code>type void</code>.CdAn associated type within the definition of a trait.BhAn associated type within an impl block.CaA type ascription pattern: <code>foo: f64</code>.A`A type argument.AnA particular type is returned.Aa<code>type</code>ChA 128-bit unsigned integer stored in a given byte order.CkA 128-bit unsigned integer stored in big-endian byte order.CkA 128-bit unsigned integer stored in little-endian byte \xe2\x80\xa6ClA 128-bit unsigned integer stored in network-endian byte \xe2\x80\xa6CkA 128-bit unsigned integer stored in native-endian byte \xe2\x80\xa6ChThe requisite parameters for testing for approximate \xe2\x80\xa6CiA trait for floating point numbers which computes the \xe2\x80\xa6DaA unary operator: <code>*</code>, <code>!</code>, <code>-</code>.CbA way to refer to a single calendar or clock unit.CkUnit represents a single unit of haystack for DFA based \xe2\x80\xa6DaThe input contained a unit <code>()</code> that was not expected.CfUnit struct or unit variant such as <code>None</code>.C`Combine single vectors into a multi-lane vector.ClA vector composed of two elements, which may be words or \xe2\x80\xa6CmA vector composed of four elements, which may be words or \xe2\x80\xa6nBorrowed data.AeThe \xe2\x80\x9cwarn\xe2\x80\x9d level.BoCorresponds to the <code>Warn</code> log level.ChA week is 7 days that either begins on Sunday or Monday.CaA pattern that matches any value: <code>_</code>.A`Word characters.Ai<code>[0-9A-Za-z_]</code>CjA Gregorian calendar year. It usually has 365 days for \xe2\x80\xa6oThe zero value.0AhA duration of zero time.BaThe first day of the zeroth year.00BmThe offset corresponding to no offset at all.BbA constant <code>Complex</code> 0.DcThe additive identity element of <code>Self</code>, <code>0</code>.AcRepresentation of 0BmElement of <code>Self</code> equivalent to 0.1AeThe zero index value.887oThe value zero.00000000000CkDefines an additive identity element for <code>Self</code>.BkThe Zeta distribution <code>Zeta(s)</code>.ChThe Zipf (Zipfian) distribution <code>Zipf(n, s)</code>.ClThe \xe2\x80\x9cZulu\xe2\x80\x9d offset, corresponding to UTC in a context \xe2\x80\xa6BmBuild an ioctl number for an read-only ioctl.BnBuild an ioctl number for an write-only ioctl.oArccosine (f64)CjComputes the arccosine of a number. Return value is in \xe2\x80\xa600CmAn unconditional epsilon transition to another NFA state. \xe2\x80\xa60BfDisplay using ANSI Escape Code styling0ChA module with low-level architecture dependent routines.CmCalculate the area of the surface of a <code>Geometry</code>.BmGet the area of the geodesic in square metersCiThe area of the contour of the container, excluding holesAdArea of its interiorCcReturns this envelope\xe2\x80\x99s area. Must be at least 0.BmAdds multiple arguments to this group by nameCkAdds multiple arguments to the list of valid possibilities.10AaThe message body.AfSet <code>args</code>.D`Create a zero-dimensional array with the element <code>x</code>.DbCreate a one-dimensional array with elements from <code>xs</code>.DbCreate a two-dimensional array with elements from <code>xs</code>.DdCreate a three-dimensional array with elements from <code>xs</code>.mArcsine (f64)ChComputes the arcsine of a number. Return value is in \xe2\x80\xa600BbThe alternate regular expressions.BfThe concatenation regular expressions.A`Arctangent (f64)CkComputes the arctangent of a number. Return value is in \xe2\x80\xa600BjAuto-adapt for the stream\xe2\x80\x99s capabilitiesDkAlgorithms for the <code>x86_64</code> target using 256-bit vectors via \xe2\x80\xa6CkReturn an iterator over the length and stride of each axis.AgAxis identifier (index)CjArray zip macro: lock step function application across \xe2\x80\xa60ClProvides a reference to the back element, or None if the \xe2\x80\xa6AkReturn early with an error.CgExternal representation of the item in the base library0BaThe base of this integer literal.AlThe bounding box of the nodelBounding boxBgSet of bins available to pack the itemsAfSet of bins to be usedCmThe underlying representation this set is exposed to make \xe2\x80\xa60AnApply <code>bold</code> effect00Bl<code>bool</code> parser for argument values0EhIf <code>Both</code>, return <code>Some</code> containing the left and right values. \xe2\x80\xa6CmTemporarily yields the mutex to a waiting thread if there \xe2\x80\xa60000DkTemporarily yields the <code>RwLock</code> to a waiting thread if there \xe2\x80\xa600AmThe quit byte that was found.CiThe \xe2\x80\x9cquit\xe2\x80\x9d byte that was observed that caused the \xe2\x80\xa6DjIf this literal was written as a <code>\\x</code> hex escape, then this \xe2\x80\xa6CjReturns a logger which simply calls the given function \xe2\x80\xa6CjCalls the given parser function to parse a syntax tree \xe2\x80\xa6BeGenerates tests for given set of dataCmCast the raw pointer of the raw array view to a different \xe2\x80\xa6000BhCast from one machine scalar to another.BfCompute the cube root of the argument.AkCubic root of each element.CkReturns the truncated principal cube root of an integer \xe2\x80\x9300B`Take the cubic root of a number.00jCeil (f64)ChThe smallest integer less than or equal to each element.CkReturns the smallest integer greater than or equal to a \xe2\x80\xa60000Cf<strong>Command Line Argument Parser for Rust</strong>AnClip a 1-D geometry with self.CjReturns the complex conjugate. i.e. <code>re - i im</code>DmThe <em>core</em> part of the RNG, implementing the <code>generate</code> \xe2\x80\xa60BcThe cosine of <code>x</code> (f32).AgHyperbolic cosine (f64)AkHyperbolic cosine function.00BdThe cost of using a bin of this type0BoTotal cost of all the bins used in the solutionCaThis configures CRLF mode for the entire pattern.CbThis configures CRLF mode for all of the patterns.10CfEnable or disable the \xe2\x80\x9cCRLF mode\xe2\x80\x9d flag by default.C`Enable or disable the CRLF mode flag by default.DaEnable or disable the CRLF mode flag (<code>R</code>) by default.CkData to be associated with the geometry being stored in \xe2\x80\xa6BaAny data associated with a point.CaGets the <code>KeyData</code> stored in this key.ChReturns the civil date component of this zoned datetime.DcSet the year, month and day fields via the <code>Date</code> given.CcReturns the civil date in this <code>Pieces</code>.DfCreates a new <code>Date</code> value in a <code>const</code> context.BlReturns the date component of this datetime.3CmConverts this ISO week date to a Gregorian <code>Date</code>.CeCreate a new span from this integer in units of days.CiSet the number of days on this span. The value may be \xe2\x80\xa6CdReturn a view of the diagonal elements of the array.CaDrops the object pointed to by the given pointer.CkThe dropping of the MutexGuard will release the lock it \xe2\x80\xa6BbComplementary error function (f64)AdError function (f32)AkPrints the error and exits.0AiExponential, base 2 (f64)Ba<code>2^x</code> of each element.AnReturns <code>2^(self)</code>.00BbExponential, base <em>e</em> (f32)B`Absolute value (magnitude) (f64)ClReturns an HIR expression that can never match anything. \xe2\x80\xa6AiPositive difference (f64)BhEfficient, configurable logging in Rust.CgWhether or not to write the source file path in the \xe2\x80\xa6BoReturns a file logger using a custom separator.BgThe source file containing the message.AeSet <code>file</code>DjFill <code>dest</code> with random bytes from the system\xe2\x80\x99s preferred \xe2\x80\xa6EbPerform an elementwise assigment to <code>self</code> from element <code>x</code>.CmFill any type implementing <code>Fill</code> with random dataAjFill self with random data11ClReturns the location of the first match according to the \xe2\x80\xa6CnReturn the first occurrence of any of the patterns in this \xe2\x80\xa6CiReturns the byte index of the first character of this \xe2\x80\xa6CjReturn the first occurrence of the needle in the given \xe2\x80\xa6CmReturn the first occurrence of one of the needle bytes in \xe2\x80\xa60EgReturn the first occurrence of the <code>needle</code> in the <code>haystack</code> \xe2\x80\xa6CfReturn the first occurrence of the needle given to \xe2\x80\xa6DdReturns the first occurrence of <code>needle</code> in the given \xe2\x80\xa6333CaExecute a search using SSE2 vectors and routines.444CaExecute a search using AVX2 vectors and routines.CjReturns the index of the first occurrence of the given \xe2\x80\xa6ClReturns the index of the first occurrence of this needle \xe2\x80\xa6CnThis routine searches for the first match of this regex in \xe2\x80\xa60CjExecutes a leftmost search and returns the first match \xe2\x80\xa6CnReturns the start and end offset of the leftmost match. If \xe2\x80\xa6CmExecutes an anchored leftmost forward search, and returns \xe2\x80\xa6DjExecutes a leftmost forward search and returns a <code>Match</code> if \xe2\x80\xa6DkRun this prefilter on <code>haystack[span.start..end]</code> and return \xe2\x80\xa6DkConvert <code>Either&lt;L, R&gt;</code> to <code>Either&lt;R, L&gt;</code>.0EgConvert <code>EitherOrBoth&lt;A, B&gt;</code> to <code>EitherOrBoth&lt;B, A&gt;</code>.1AkFloating multiply add (f32)CnReturn the greater of two arguments or, if either argument \xe2\x80\xa6CmReturn the lesser of two arguments or, if either argument \xe2\x80\xa6DhCalculate the remainder of <code>x / y</code>, the precise result of \xe2\x80\xa6BkPerform a fold operation over the iterable.DgGroups elements from the <code>GroupingMap</code> source by key and \xe2\x80\xa6CkTraverse the array elements and apply a fold, returning \xe2\x80\xa6CnApply a fold function to all elements of the input arrays, \xe2\x80\xa600000CkParallel fold is similar to sequential fold except that theCmForks a parse stream so that parsing tokens out of either \xe2\x80\xa6BbReturns a memory block to the poolAoReturns the argument unchanged.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ClReturns a new atomic pointer pointing to <code>owned</code>.1CjReturns a new atomic pointer pointing to <code>raw</code>.CjReturns a new atomic pointer pointing to <code>ptr</code>.CgReturns a new owned pointer pointing to <code>b</code>.44CcReturns a new pointer pointing to <code>raw</code>.55555555555555555555555555555555CkCreates an output logger forwarding all messages to the \xe2\x80\xa66CjCreates an output logger which will panic with message \xe2\x80\xa6CmCreates an output logger which writes all messages to the \xe2\x80\xa6CiCreates an output logger which writes all messages to \xe2\x80\xa6031319999999999999999999999999999999FaConvert a <code>Vec</code> of <code>Points</code> (or <code>Vec</code> of things which can be \xe2\x80\xa6DbConvert a single <code>Point</code> (or something which can be \xe2\x80\xalCreate a one-dimensional array from a vector (no copying \xe2\x80\xa6CiCreate a one-dimensional array from a boxed slice (no \xe2\x80\xa6ClCreate a one-dimensional clone-on-write view of the data \xe2\x80\xa6CdCreate a read-only clone-on-write view of the array.BkCreate a read-only array view of the array.CmCreate a one-dimensional read-only array view of the data \xe2\x80\xa6CmCreate a two-dimensional read-only array view of the data \xe2\x80\xa60BlCreate a read-write array view of the array.CnCreate a one-dimensional read-write array view of the data \xe2\x80\xa6CnCreate a two-dimensional read-write array view of the data \xe2\x80\xa60AoReturns the argument unchanged.00000EeCreate a <code>Shape</code> from <code>dimension</code>, using the default memory \xe2\x80\xa6111111EdCreate a new <code>Zip</code> from the input array or other producer <code>p</code>.2222222222222222222222222222222222222CmCreates a number from another value that can be converted \xe2\x80\xahThe line\xe2\x80\x99s start point44444444444444444444444444444444444444444444DjConvert 32-bit floating point number to <code>Value::Number</code>, or \xe2\x80\xa6CdConvert <code>()</code> to <code>Value::Null</code>.6DjConvert 64-bit floating point number to <code>Value::Number</code>, or \xe2\x80\xa6BlConvert boolean to <code>Value::Bool</code>.CjConvert <code>String</code> to <code>Value::String</code>.CcConvert string slice to <code>Value::String</code>.CkConvert copy-on-write string to <code>Value::String</code>.CjConvert <code>Number</code> to <code>Value::Number</code>.CmConvert map (with string keys) to <code>Value::Object</code>.ChConvert a <code>Vec</code> to <code>Value::Array</code>.BmConvert a slice to <code>Value::Array</codeeInfallibly discards the alignment error from this \xe2\x80\xa6AoReturns the argument unchanged.EcInfallibly extracts the <code>SizeError</code> from this <code>CastError</code> \xe2\x80\xa6111DiHint whether this <code>Consumer</code> would like to stop processing \xe2\x80\xa6DgHint whether this <code>Folder</code> would like to stop processing \xe2\x80\xa6BlCreate a full set of look-around assertions.0BnGet a reference to the container\xe2\x80\x99s geometry.BbIncreases the capacity of the pool0BfRe-allocate to set the capacity to \xe2\x80\xa6CdFeeds this value into the given <code>Hasher</code>.Cc<strong>heck</strong> is a case conversion library.DfSets the description of the argument for short help (<code>-h</code>).BgSets the help description of the value.10BlDo not display the argument in help message.DjSpecifies that this <code>subcommand</code> should be hidden from help \xe2\x80\xa6CaHides this value from help and shell completions.210D`The key of the hazard in the hazard map in <code>CDEngine</code>CkInvoked when a final character arrives in first part of \xe2\x80\xa6DhEquivalent to <code>hours()</code>, but reads better for singular units.0ChReturns the \xe2\x80\x9chour\xe2\x80\x9d component of this zoned datetime.BkSet the hour field on a <code>Zoned</code>.BfReturns the parsed hour, if available.CbReturns the \xe2\x80\x9chour\xe2\x80\x9d component of this datetime.BnSet the hour field on a <code>DateTime</code>.BnReturns the \xe2\x80\x9chour\xe2\x80\x9d component of this time.BjSet the hour field on a <code>Time</code>.BaLogs a message at the info level.BiInitializes a with the given initializer.DeAllocates <code>value</code> on the heap and returns a new atomic \xe2\x80\xa6DdAllocates <code>value</code> on the heap and returns a new owned \xe2\x80\xa6CaInitializes the global logger with an env logger.ChInitializes the global logger with the built env logger.AmInitializes this memory block0BaCalls <code>U::from(self)</codeoA specific itemAlIterate over enabled effectsCjReturns an iterator over all parameters and subparameters.11BfBorrow the inner value as an iterator.BcReturns an iterator over the deque.CnReturn an iterator over the key-value pairs of the map, in \xe2\x80\xa6CkReturn an iterator over the values of the set, in their \xe2\x80\xa6CiAn iterator visiting all key-value pairs in arbitrary \xe2\x80\xa6CmReturns an iterator visiting all values in the underlying \xe2\x80\xa6BeGet an iterator over the sorted list.C`Iterates from the front of the queue to the back7BmIterate through all supported logging levels.BoIterate through all supported filtering levels.CjReturns an iterator over all occurrences of the needle \xe2\x80\xa6CjReturns an iterator over all occurrences of one of the \xe2\x80\xa60111111BcProducers, iterables and iterators.CkReturn an iterator of references to the elements of the \xe2\x80\xa6DcIterate over the indices as a sequence of <code>usize</code> valuesCaTraits for writing parallel programs using an \xe2\x80\xa6?CnReturns an iterator over all capture groups. This includes \xe2\x80\xa6ClReturns an iterator over the indices of the regexes that \xe2\x80\xa610ClReturns an iterator over all pattern identifiers in this \xe2\x80\xa6CiGeneric helpers for iteration of matches from a regex \xe2\x80\xa6ClReturns an iterator over all equivalence classes in this \xe2\x80\xa6CmReturns an iterator of possible spans for every capturing \xe2\x80\xa6CnReturns an iterator over all of the look-around assertions \xe2\x80\xa6CaReturn an iterator over all ranges in this class.01CjReturns an iterator over all elements contained in the \xe2\x80\xa6BmGets an iterator over the entries of the map.CiAn iterator visiting all key-value pairs in arbitrary \xe2\x80\xa60000DfGet an iterator over the borrowed <code>Field</code> items in this \xe2\x80\xa6CjReturns an iterator over borrowed syntax tree nodes of \xe2\x80\xa6Algithub\xe2\x80\x82crates-io\xe2\x80\x82docs-rsCjCreate an iterator running multiple iterators in lockstep.CkCalculates the Jaro similarity between two strings. The \xe2\x80\xa6CnJiff is a datetime library for Rust that encourages you to \xe2\x80\xa6CfWaits for the thread to finish and returns its result.DiCombine all iterator elements into one <code>String</code>, separated \xe2\x80\xa60DhCreate a new span encompassing <code>self</code> and <code>other</code>.CcReturns a span covering the entire delimited group.DfTakes two closures and <em>potentially</em> runs them in parallel. \xe2\x80\xa6EeExecute <code>oper_a</code> and <code>oper_b</code> in the thread pool and return \xe2\x80\xa610CoConstruct a <code>serde_json::Value</code> from a JSON literal.CkReturn an iterator over the keys of the map, in their orderC`An iterator visiting all keys in arbitrary orderBjGets an iterator over the keys of the map.CiAn iterator visiting all keys in arbitrary order. The \xe2\x80\xa60000CjReturns the kind of the Aho-Corasick automaton used by \xe2\x80\xa6BoChoose the type of underlying automaton to use.CaReturns a reference to the underlying error kind.BiType of error for programmatic processing0CjReturns the \xe2\x80\x9ckind\xe2\x80\x9d of this annotation. The kind is \xe2\x80\xa6C`Return the <code>ErrorKind</code> of this error.3AnReturn the type of this error.AiThe kind of this literal.AgThe kind of Perl class.AhThe kind of ASCII class.AjThe kind of Unicode class.CkThe type of this set. A set is either a normal union of \xe2\x80\xa6AoThe type of this set operation.ClThe assertion kind, e.g., <code>\\b</code> or <code>^</code>.AfThe type of operation.AgThe kind of this group.AfThe kind of this item.:BoReturns a reference to the underlying HIR kind.DhSet the kind of literal sequence to extract from an <code>Hir</code> \xe2\x80\xa6BaKronecker product of 2D matrices.CmThis arg is the last, or final, positional argument (i.e. \xe2\x80\xa60AkGet the last key-value pairAbGet the last valueClReturns a reference to the last element of the array, or \xe2\x80\xa6BjBorrows the last element in this sequence.CgA lazily initialized value for safe sharing between \xe2\x80\xa6BoSynchronization primitives for lazy evaluation.ClLeaks the mutex guard and returns a mutable reference to \xe2\x80\xa6ClLeak the lock guard, yielding a mutable reference to the \xe2\x80\xa60CdLeak the lock guard, yielding a reference to the \xe2\x80\xa610ElConvert the left side of <code>Either&lt;L, R&gt;</code> to an <code>Option&lt;L&gt;</code>.0EmIf <code>Left</code>, or <code>Both</code>, return <code>Some</code> with the left value. \xe2\x80\xa61Chlibc - Raw FFI bindings to platforms\xe2\x80\x99 system librariesAalibm in pure RustDhThe geometry associated with this type. Use a <code>Line</code> with theCbReturn a <code>Line</code> representation of self.B`The line containing the message.AeSet <code>line</code>BlThe line number, starting at <code>1</code>.CfOne-based line number at which the error was detected.CdLoads a <code>Shared</code> from the atomic pointer.BcLoads a value from the atomic cell.CcGet exclusive access to the <code>AutoStream</code>0CdGet exclusive access to the <code>StripStream</code>0CmAcquires this mutex, blocking the current thread until it \xe2\x80\xa6CmAcquires a mutex, blocking the current thread until it is \xe2\x80\xa6CkAcquires this mutex, blocking if it\xe2\x80\x99s held by another \xe2\x80\xa6CkAcquires a reentrant mutex, blocking the current thread \xe2\x80\xa6DkLocks the <code>Mutex</code> and returns a guard that permits access to \xe2\x80\xa6DeLocks the <code>SpinMutex</code> and returns a guard that permits \xe2\x80\xa6BmThe base 2 logarithm of <code>x</code> (f64).BaBase 2 logarithm of each element.BkReturns the base 2 logarithm of the number.00BnThe natural logarithm of <code>x</code> (f32).CeSets the long version of the argument without the \xe2\x80\xa60CkThe look-around assertion that must be satisfied before \xe2\x80\xa6CkTypes and routines for working with look-around assertions.BoCreates a look-around assertion HIR expression.EhCall <code>f</code> by <strong>v</strong>alue on each element and create a new array \xe2\x80\xa6CjReturns the arithmetic mean x\xcc\x85 of all elements in the \xe2\x80\xa6CgReturns the mean (<code>\xce\xbc</code>) of the distribution.ClFern supports logging most things by default, except for \xe2\x80\xa6CnProvides a regex matcher that composes several other regex \xe2\x80\xa6CmFacility for interpreting structured content inside of an \xe2\x80\xa6AlMock random number generatorAfSet the rounding mode.00000000000BlThe anchored mode given that is unsupported.0ChA fixed capacity Multiple-Producer Multiple-Consumer \xe2\x80\xa6DbLike <code>new</code>, but panics if the given value is not valid.CjCreate a new match from a pattern ID and a byte offset \xe2\x80\xa61ChCreate a new half match from a pattern ID and a byte \xe2\x80\xa61DkLike <code>SmallIndex::new</code>, but panics if the given index is not \xe2\x80\xa633An(Re)Sets the program\xe2\x80\x99s name.0BaSets the name for the new thread.AhThe name of the instance0BiGets the string that was specified by \xe2\x80\xa60DjReturns the <code>Match</code> associated with the capture group named \xe2\x80\xa60AaThe capture name.BgThe property name (which may be empty).1BfThe name of the capture, if it exists.CbReturns the number of dimensions (number of axes).CcReturn the number of dimensions (axes) in the arrayDiCreates a <code>TokenBuffer</code> containing all the tokens from the \xe2\x80\xa6CmAdvance the cursor, returning the next <code>ParsedArg</code>BlThe next representable number above this oneCkReturns the next weekday, wrapping around at the end of \xe2\x80\xa6BmThe identifier of the state to transition to.CnThe state to transition to if the look-around assertion is \xe2\x80\xa6BlThe state to transition to, unconditionally.jThe nodes.ChReturns a database for which all time zone lookups fail.CnReturns the Euclidean norm (i.e. magnitude, or L2 norm) of \xe2\x80\xa6BbReturns a new null atomic pointer.AkReturns a new null pointer.CnCreates a new key that is always invalid and distinct from \xe2\x80\xa6ChCreates a parallel iterator that produces an element \xe2\x80\xa6CcSynchronization primitives for one-time evaluation.CdCreate an array with ones, shape <code>shape</code>.CkReturns a span for the opening punctuation of the group \xe2\x80\xa6A`Open a document.CiReturns the pair of offsets (into the needle) used to \xe2\x80\xa600CeBlocks the current thread until the token is made \xe2\x80\xa6AaThe path element.CjReturns the path that identifies the interpretation of \xe2\x80\xa6CgReturns the path that begins this structured meta item.FdThe <code>Foo&lt;&amp;&#39;a T&gt;</code> in <code>for&lt;&#39;a&gt; Foo&lt;&amp;&#39;a T&gt;</code>BfReturn the next <code>ParsedArg</code>CoReturns the <em>top</em> (greatest if max-heap, smallest if \xe2\x80\xa6AjPeek at the first element.CmReturns a reference to the item in the front of the queue \xe2\x80\xa6CfReturns the item in the front of the queue without \xe2\x80\xa6DiWorks exactly like <code>.next()</code> with the only difference that \xe2\x80\xa6EdWorks exactly like the <code>peek</code> method in <code>std::iter::Peekable</code>.CmReturns whether the next token in the parse stream is one \xe2\x80\xa6ClLooks at the next token in the parse stream to determine \xe2\x80\xa60EaLike <code>Once::get</code>, but will spin if the <code>Once</code> is in the \xe2\x80\xa6CfA heap-less, interrupt-safe, lock-free memory pool (*)AjA thread safe memory pool.BdSquare (two powers) of each element.ClReturns <code>x</code> to the power of <code>y</code> (f32).AlFloat power of each element.BiRaise a number to a floating point power.BfRaise a number to a real number power.1AnInteger power of each element.CcRaises <code>self</code> to a signed integer power.BcRaise a number to an integer power.0000CfRaises <code>self</code> to an unsigned integer power.C`The previous representable number below this oneAmPushes a task into the queue.0DkAppends the given <code>char</code> to the end of this <code>String</code>.CjAppends an <code>item</code> to the back of the collectionBdPushes an item onto the binary heap.CjPushes an element to the linked list and sorts it into \xe2\x80\xa6BkAppend an array to the array along an axis.0B`Appends a new weight at the end.AnPush a new item in this union.AlAdd a new range to this set.0BkPush a literal to the end of this sequence.AmAppend an item to the vector.CnAppends a syntax tree node onto the end of this punctuated \xe2\x80\xa6DjCreate a new \xe2\x80\x9cquit\xe2\x80\x9d error. The given <code>byte</code> corresponds \xe2\x80\xa6BfAdd a \xe2\x80\x9cquit\xe2\x80\x9d byte to the lazy DFA.BfUtilities for random number generationClReturn the heuristic frequency rank of the given byte. A \xe2\x80\xa6BiReturns the \xe2\x80\x9crank\xe2\x80\x9d of the given byte.CnLocks with shared read access, blocking the current thread \xe2\x80\xa6DhLocks this <code>RwLock</code> with shared read access, blocking the \xe2\x80\xa6CkLocks this rwlock with shared read access, blocking the \xe2\x80\xa6A`Read a document.AoReads a copy of <code>T</code>.DgRound <code>x</code> to the nearest integer, breaking ties toward even.BeRandom number generators and adaptersAoReturns the tree\xe2\x80\x99s root node.CjReturn a producer and iterable that traverses over the \xe2\x80\xa6CkSaves the current state of the layout to be potentially \xe2\x80\xa6CmCreates a snapshot of the current state of the problem as \xe2\x80\xa60A`Save a document.AnAdjust the cursor\xe2\x80\x99s positionBaThe sine of <code>x</code> (f32).BlThe hyperbolic sine of <code>x</code> (f64).AiHyperbolic sine function.00CfCompute the size of the dimension (number of elements)0CbReturn the size of the shape in number of elements0C`Return a the number of element tuples in the ZipBkReturns the number of objects in an r-tree.BoReturns the number of items the array can hold.DkSkew a <code>Geometry</code> by shearing it at angles along the x and y \xe2\x80\xa6ClAn affine transformation which skews a geometry, sheared \xe2\x80\xa6Ch<strong>Create</strong> an affine transform for skewing.DaCreates an iterator that skips the first <code>n</code> elements.CnThe slot index for this capture. Every capturing group has \xe2\x80\xa6ChReturns the starting slot corresponding to the given \xe2\x80\xa6CbSorts this sequence of literals lexicographically.AmSet the span for this search.B`Returns the span for this match.DjReturns a span of this error, if available. <strong>Note</strong>: the \xe2\x80\xa6DfReturns the span of this tree, delegating to the <code>span</code> \xe2\x80\xa6CmReturns the span for the delimiters of this token stream, \xe2\x80\xa6C`Returns the span for this punctuation character.BlReturns the span of this <code>Ident</code>.BkReturns the span encompassing this literal.CeSpan associated with this <code>IdentFragment</code>.087BmReturn the span at which this error occurred.BmReturn the span of this abstract syntax tree.BlReturn the span of this character class set.CaReturn the span of this character class set item.DhThe span of this comment, including the beginning <code>#</code> and \xe2\x80\xa6AmThe span of this alternation.AoThe span of this concatenation.AiThe span of this literal.AgThe span of this class.000AgThe span of this range.DjThe span of the items in this operation. e.g., the <code>a-z0-9</code> \xe2\x80\xa6DdThe span of this operation. e.g., the <code>a-z--[h-p]</code> in \xe2\x80\xa6AkThe span of this assertion.AkThe span of this operation.EhThe span of this operator. This includes things like <code>+</code>, <code>*?</code> \xe2\x80\xa6AgThe span of this group.AnThe span of this capture name.CcThe span of these flags, including the grouping \xe2\x80\xa6B`The span of this group of flags.AfThe span of this item.BmReturn the span at which this error occurred.BaThe source location of the error.BlReturns the span of this <code>Ident</code>.EhReturns the <code>Span</code> of the current token, or <code>Span::call_site()</code>\xe2\x80\xa6DkReturns the <code>Span</code> of the next token in the parse stream, or \xe2\x80\xa6DfReturns a <code>Span</code> covering the complete contents of this \xe2\x80\xa6AnBacks off in a lock-free loop.CmThis crate provides spin-based versions of the primitives \xe2\x80\xa6AhA na\xc3\xafve spinning mutex.CkFixed capacity Single Producer Single Consumer (SPSC) queueBhThe square root of <code>x</code> (f64).AlSquare root of each element.CmReturns the truncated principal square root of an integer \xe2\x80\xa600BaTake the square root of a number.00DkAlgorithms for the <code>x86_64</code> target using 128-bit vectors via \xe2\x80\xa6Ckstep size in elements; the default is 1, for every element.0CgSpeculatively parses tokens from this parse stream, \xe2\x80\xa6CiReturns a slice of this kind\xe2\x80\x99s sub-expressions, if any.CjIterate over the entire iterator and add all the elements.EgStores a <code>Shared</code> or <code>Owned</code> pointer into the atomic pointer, \xe2\x80\xa6DiStores <code>val</code> into the atomic cell and returns the previous \xe2\x80\xa6DeSwap elements at indices <code>index1</code> and <code>index2</code>.AlSwap value with another cellBbThread synchronization primitives.DkConsumes the iterator and return an iterator of the last <code>n</code> \xe2\x80\xa6BoTakes the value of the atomic cell, leaving \xe2\x80\xa6DbCreates an iterator that yields the first <code>n</code> elements.DhTakes only <code>n</code> repeats of the element, similar to the generalEeTakes the value out of the <code>Value</code>, leaving a <code>Null</code> in its \xe2\x80\xa6BdThe tangent of <code>x</code> (f32).BoThe hyperbolic tangent of <code>x</code> (f64).AlHyperbolic tangent function.00ChReturns the civil time component of this zoned datetime.CnSet the hour, minute, second, millisecond, microsecond and \xe2\x80\xa6CcReturns the civil time in this <code>Pieces</code>.DfCreates a new <code>Time</code> value in a <code>const</code> context.BlReturns the time component of this datetime.3AmLower triangular of an array.AmUpper triangular of an array.CnCreates a time zone from TZif binary data, whose format is \xe2\x80\xa6CiGet a reference of a element through the view without \xe2\x80\xa6BjPerform <em>unchecked</em> array indexing.1ClConvert a mutable array view to a mutable reference of a \xe2\x80\xa6CnThe number of representable values or ULPs (Units of Least \xe2\x80\xa6BbSet the ulps value for this marginCbWhether to enable UTF-8 mode during search or not.CnWhen disabled, the builder will permit the construction of \xe2\x80\xa6CjConverts ranges of Unicode scalar values to equivalent \xe2\x80\xa6CnWhen disabled, translation will permit the construction of \xe2\x80\xa60CmThis module provides a conceptual structure of points and \xe2\x80\xa6CkHelper functions which do not belong to any specific module00CmA collection of modules that provide APIs that are useful \xe2\x80\xa6BdReturn a read-only view of the arrayCmDrops this reference and waits until all other references \xe2\x80\xa6CdBlocks the current thread until all threads have \xe2\x80\xa6CcSpins until the <code>Once</code> contains a value.BaLogs a message at the warn level.DhEquivalent to <code>weeks()</code>, but reads better for singular units.0CfReturns the week component of this ISO 8601 week date.CmTypes and routines that support the wire format of finite \xe2\x80\xa6DjCreate a builder for constructing a new <code>DateTime</code> from the \xe2\x80\xa6DiCreate a builder for constructing a <code>Date</code> from the fields \xe2\x80\xa61DiCreate a builder for constructing a <code>Time</code> from the fields \xe2\x80\xa6FeReturns a new repetition with the same <code>min</code>, <code>max</code> and <code>greedy</code> \xe2\x80\xa6DhEquivalent to <code>years()</code>, but reads better for singular units.0BiReturns the year for this zoned datetime.BkSet the year field on a <code>Zoned</code>.BfReturns the parsed year, if available.AoReturns the year for this date.BjSet the year field on a <code>Date</code>.BcReturns the year for this datetime.BnSet the year field on a <code>DateTime</code>.CfReturns the year component of this ISO 8601 week date.kZero marginBnReturns the additive identity, <code>0</code>.DkReturns the additive identity element of <code>Self</code>, <code>0</code>.BhOverwrites <code>self</code> with zeros.AiThe alignment of pointer.Ah<code>[0-9A-Za-z]</code>FgE.g. <code>+</code> is <code>Alone</code> in <code>+ =</code>, <code>+ident</code> or <code>+()</code>.Ae<code>[A-Za-z]</code>Ac<code>&amp;=</code>BeAn array that owns its data uniquely.AhRepresents a JSON array.0DhTypes that can be used as the backing store for a <code>SmallVec</code>.CfA slice literal expression: <code>[a, b, c, d]</code>.BmA fixed size array type: <code>[T; n]</code>.Ah<code>[\\x00-\\x7F]</code>EaAn ASCII character class, e.g., <code>[:alnum:]</code> or <code>[:punct:]</code>.BkAn async block: <code>async { ... }</code>.Ab<code>async</code>BlAn await expression: <code>fut.await</code>.Ab<code>await</code>DgA binary operator: <code>+</code>, <code>+=</code>, <code>&amp;</code>.BhThe <code>|</code> operator (bitwise or)DmBlack: #0 (foreground code <code>30</code>, background code <code>40</code>).00Ab<code>[ \\t]</code>BjA braced block containing Rust statements.BfA blocked scope: <code>{ ... }</code>.Ad<code>{ ... }</code>Ao<code>{</code>\xe2\x80\xa6<code>}</code>DiA <code>break</code>, with an optional label to break and an optional \xe2\x80\xa6Ab<code>break</code>BlParallel iterator over the bytes of a stringCkA set of characters represented by arbitrary bytes (one \xe2\x80\xa6EkThe input contained a <code>&amp;[u8]</code> or <code>Vec&lt;u8&gt;</code> that was not \xe2\x80\xa6CjRepresents mutable scratch space used by regex engines \xe2\x80\xa6ClAn error that occurs when cache inefficiency has dropped \xe2\x80\xa6BlA cache represents a partially computed DFA.CgA cache represents a partially computed forward and \xe2\x80\xa6DeA cache represents mutable state that a one-pass <code>DFA</code> \xe2\x80\xa6DhA cache represents mutable state that a <code>PikeVM</code> requires \xe2\x80\xa6DkA cache represents mutable state that a <code>BoundedBacktracker</code> \xe2\x80\xa6n<code>^</code>BeIterator of a chain of source errors.Ek<code>Chain</code> is an iterator that joins <code>b</code> after <code>a</code> in one \xe2\x80\xa6CaParallel iterator over the characters of a stringBoAn iterator for the elements in a single chunk.CmThe high-level intermediate representation of a character \xe2\x80\xa6CdA single character class that matches any of the \xe2\x80\xa6AhEnd the current subpath.Al<code>[\\x00-\\x1F\\x7F]</code>CkA property set to a specific value using a colon, e.g., \xe2\x80\xa6n<code>:</code>AjAny ANSI color code scheme00n<code>,</code>BjA const block: <code>const { ... }</code>.ClA const generic parameter: <code>const LENGTH: usize</code>.CeA constant item: <code>const MAX: u16 = 65535</code>.ChAn associated constant within the definition of a trait.BlAn associated constant within an impl block.4BnA const expression. Must be inside of a block.Ab<code>const</code>CiA lightweight struct used to store coordinates on the \xe2\x80\xa60AmA two dimensional coordinate.EcWhen encountered, increment a <code>u8</code> counter starting from <code>0</code>.00Ab<code>crate</code>CgInterface for types that can be processed to detect \xe2\x80\xa6AfThe \xe2\x80\x9cdebug\xe2\x80\x9d level.C`Corresponds to the <code>Debug</code> log level.CeAn iterator adaptor that removes repeated duplicates.CcA dense representation of a state with multiple \xe2\x80\xa6BdA fixed capacity double-ended queue.BmThe <code>*</code> operator for dereferencingA`Decimal numbers.Ab<code>[0-9]</code>CjDraining parallel iterator that moves a range out of a \xe2\x80\xa6CkDraining parallel iterator that moves out of a binary heap,ClDraining parallel iterator that moves out of a hash map, \xe2\x80\xa6ClDraining parallel iterator that moves out of a hash set, \xe2\x80\xa63CdDraining parallel iterator that moves a range of \xe2\x80\xa6BmA draining iterator for <code>SlotMap</code>.CbA draining iterator for <code>DenseSlotMap</code>.C`A draining iterator for <code>HopSlotMap</code>.CbA draining iterator for <code>SecondaryMap</code>.ChA draining iterator for <code>SparseSecondaryMap</code>.DgAn iterator that removes the items from a <code>SmallVec</code> and \xe2\x80\xa6AnNor argument values, or a flag0BlThe queue was empty at the time of stealing.EfSome geometries, like a <code>MultiPoint</code> or <code>GeometryCollection</code> \xe2\x80\xa6AbError: empty sliceCgIterator adaptor for the <code>empty()</code> function.BgAn empty regex that matches everything.nAn empty item.CkThe empty regular expression, which matches everything, \xe2\x80\xa6mAn empty tag.CmMatch the end of a line or the end of text. Specifically, \xe2\x80\xa60AoA view into an entry in the mapClA view into a single entry in a map, which may either be \xe2\x80\xa6DhA view into a single entry in a <code>SecondaryMap</code>, which may \xe2\x80\xa6DjA view into a single entry in a <code>SparseSecondaryMap</code>, which \xe2\x80\xa6DhA property set to a specific value, e.g., <code>\\p{scx=Katakana}</code>.DcThe <code>Error</code> type, a wrapper around a dynamic error type.BbCommand Line Argument Parser Error000CeA small and <code>no_std</code> compatible error typeBfAn error that can occur in this crate.AfThe \xe2\x80\x9cerror\xe2\x80\x9d level.C`Corresponds to the <code>Error</code> log level.BnThe type returned in the event of a RNG error.EbError type returned from <code>Uniform::new</code> and <code>new_inclusive</code>.AeInvalid weight errors210ChAn error that occurred during parsing or compiling a \xe2\x80\xa6CnThis error type encompasses any error that can be returned \xe2\x80\xa6CmAn error that occurred while parsing a regular expression \xe2\x80\xa6EdAn error that can occur while translating an <code>Ast</code> to a <code>Hir</code>.ClThe error type that can be returned if some error occurs \xe2\x80\xa6CkThe error type when some error occurs during serialization.EcThe <code>Error</code> trait allows <code>Deserialize</code> implementations to \xe2\x80\xa622222ClA minimal representation of all possible errors that can \xe2\x80\xa6DgTrait used by <code>Serialize</code> implementations to generically \xe2\x80\xa63DfMust match the <code>Error</code> type of our <code>Serializer</code>.000000CkThis type represents all possible errors that can occur \xe2\x80\xa60iAn error.0CkError returned when a Syn parser cannot parse the input \xe2\x80\xa60iAn event.BdA field of a struct or enum variant.DhAccess of a named struct field (<code>obj.k</code>) or unnamed tuple \xe2\x80\xa6Ab<code>final</code>AjThis is the first element.AaA group of flags.BiA set of flags, e.g., <code>(?is)</code>.BhGeneric trait for floating point numbers0ClA floating point number, f32 or f64, that can be written \xe2\x80\xa6EfThe input contained a floating point <code>f32</code> or <code>f64</code> that was \xe2\x80\xa6DfA floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.B`Rounds toward negative infinity.DeAn argument in a function signature: the <code>n: usize</code> in \xe2\x80\xa6CaThe Gamma distribution <code>Gamma(k, \xce\xb8)</code>.Ab<code>[!-~]</code>DmGreen: #2 (foreground code <code>32</code>, background code <code>42</code>).00BoAn iterator for the elements in a single group.AiA delimited token stream.C`A token stream surrounded by bracket delimiters.AmA grouped regular expression.0AiA <code>g</code> element.agCdAn expression contained within invisible delimiters.DmA braced group of imports in a <code>use</code> item: <code>{A, B, C}</code>.BmA type contained within invisible delimiters.AdNone-delimited groupBmA guard that keeps the current thread pinned.ChA word of Rust code, which may be a keyword or legal \xe2\x80\xa6nAn identifier.1CjA type parameter or const generic parameter in precise \xe2\x80\xa6BhA pattern that binds a new variable: \xe2\x80\xa6AnAn <code>image</code> element.eimageoA single index.DgA type that can be used to index into a <code>serde_json::Value</code>.BkThe index of an unnamed tuple struct field.CoA square bracketed indexing expression: <code>vector[2]</code>.DgThe inferred value of a const generic argument, denoted <code>_</code>.CnIndication that a type should be inferred by the compiler: \xe2\x80\xa6CdThe configuration and the haystack to use for an \xe2\x80\xa6ClThe parameters for a regex search including the haystack \xe2\x80\xa6BiThe parsed float value resulted in a NaN.CiA word-sized signed integer stored in a given byte order.BbCreate a dynamic-dimensional indexAcdynamic-dimensionalH`E.g. <code>+</code> is <code>Joint</code> in <code>+=</code> or <code>&#39;</code> is <code>Joint</code> in <code>&#39;#</code>.CcThe total number of values that can be represented.0CkThe total number of values that can be represented as a \xe2\x80\xa611AmReturn <code>ln(10.0)</code>.EaA lifetime labeling a <code>for</code>, <code>while</code>, or <code>loop</code>.BoSee <code>.lanes()</code> for more information.BbThe later time is always selected.CnAn enum representing the available verbosity levels of the \xe2\x80\xa6BhParallel iterator over lines in a stringDhA local <code>let</code> binding: <code>let x: u64 = s.parse()?;</code>.AfA local (let) binding.Ab<code>[a-z]</code>CoA macro invocation: <code>println!(&quot;{}&quot;, mac)</code>.DgA macro invocation expression: <code>format!(&quot;{}&quot;, q)</code>.D`A macro invocation, which includes <code>macro_rules!</code> \xe2\x80\xa6BjA macro invocation within an extern block.CdA macro invocation within the definition of a trait.BhA macro invocation within an impl block.AlA macro in pattern position.BiA macro invocation in statement position.AmA macro in the type position.Ab<code>macro</code>CjAn iterator adapter to apply a transformation within a \xe2\x80\xa6CkA representation of a match reported by an Aho-Corasick \xe2\x80\xa6CgA confirmed match was found. Callers do not need to \xe2\x80\xa6CcRepresents a single match of a regex in a haystack.0CgA representation of a match reported by a regex engine.CkA match state. There is at least one such occurrence of \xe2\x80\xa6EjA <code>match</code> expression: <code>match n { Some(n) =&gt; {}, None =&gt; {} }</code>.Ab<code>match</code>CmAn iterator adaptor that merges the two base iterators in \xe2\x80\xa6n<code>-</code>CmA Gregorian calendar month. It usually has one of 28, 29, \xe2\x80\xa6CmA mutual exclusion primitive useful for protecting shared \xe2\x80\xa6CkA primitive that synchronizes the execution of multiple \xe2\x80\xa6CgA lock that provides mutually exclusive data access \xe2\x80\xa6ClA spin-based lock providing mutually exclusive access to \xe2\x80\xa6ClThe time zone annotation is a name, usually an IANA time \xe2\x80\xa6CmA binary property, general category or script. The string \xe2\x80\xa6CfNamed fields of a struct or struct variant such as \xe2\x80\xa6BgA named field like <code>self.x</code>.BgNanosecond precision (9 decimal digits)AbNever emit colors.ClDisables colored output no matter if the output is going \xe2\x80\xa601AcNever print styles.AoThe never type: <code>!</code>.DcThe literal is written as an octal escape, e.g., <code>\\141</code>.kArray orderCjAn interface over the operating-system\xe2\x80\x99s random data \xe2\x80\xa60AlA UTF-8-encoded fixed string0ClNone of the hints below apply. Disables shell completion \xe2\x80\xa600ChA message stating what uncategorized thing the input \xe2\x80\xa6AoAn owned heap-allocated object.kOwned data.E`An iterator over borrowed pairs of type <code>Pair&lt;&amp;T, &amp;P&gt;</code>.ClLogger which will panic whenever anything is logged. The \xe2\x80\xa6CaA parenthesized expression: <code>(a + b)</code>.BnA parenthesized pattern: <code>(A | B)</code>.CbA parenthesized type equivalent to the inner type.Ao<code>(</code>\xe2\x80\xa6<code>)</code>ClAn error that occurred while translating concrete syntax \xe2\x80\xa6CjParsing interface implemented by all types that can be \xe2\x80\xa6CaA pattern that matches any one of a set of cases.AkA single point in 2D space.0BlA Point in 2D space with x and y coordinatesCcDefines a point type that is compatible with rstar.AlThe envelope\xe2\x80\x99s point type.n<code>#</code>Ab<code>[ -~]</code>FmA <code>Punct</code> is a single punctuation character like <code>+</code>, <code>-</code> or <code>#</code>.EfA single punctuation character (<code>+</code>, <code>,</code>, <code>$</code>, etc.).Al<code>[!-/:-@\\[-</code>{-~]`DeThe explicit Self type in a qualified path: the <code>T</code> in \xe2\x80\xa6CjA statically allocated single producer single consumer \xe2\x80\xa6BdAn escaped quote <code>&quot;</code>BgAn n-dimensional r-tree data structure.AmA range between two literals.Ab<code>{m,n}</code>GaA range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.BdA range pattern: <code>1..=2</code>.CgA compiled regular expression for searching Unicode \xe2\x80\xa60CiA regex matcher that works by composing several other \xe2\x80\xa6ChA regular expression that uses hybrid NFA/DFAs (also \xe2\x80\xa6AiReset terminal formattingAcReset builder value101BhThe steal operation needs to be retried.AoA value of type <code>R</code>.0CgOnly the right value of type <code>B</code> is present.1CkProvides methods to compute an integer\xe2\x80\x99s square root, \xe2\x80\xa6CjAn affine transformation which scales a geometry up or \xe2\x80\xa6AmA scope for spawning threads.CkRepresents a fork-join scope which can be used to spawn \xe2\x80\xa60BiA contiguous array shape of n dimensions.Af<code>&lt;&lt;=</code>CjThis writes out a short but not minimal label for each \xe2\x80\xa6Af<code>&gt;&gt;=</code>n<code>/</code>AoA slice (range with step size).DcA range with step size. <code>end</code> is an exclusive index. \xe2\x80\xa6DkA dynamically sized slice pattern: <code>[a, b, ref i @ .., y, z]</code>\xe2\x80\xa6CaA dynamically sized slice type: <code>[T]</code>.EfSpace, spelled <code>\\ </code> (<code>\\x20</code>). Note that this can only appear \xe2\x80\xa6kWhitespace.Aj<code>[\\t\\n\\v\\f\\r ]</code>Dh<code>Split</code> is a parallel iterator using arbitrary data and a \xe2\x80\xa6CfParallel iterator over slices separated by a predicateChParallel iterator over substrings separated by a patternCkAn iterator over all substrings delimited by a regex match.0CkYields all substrings delimited by a regular expression \xe2\x80\xa6DfA <code>T</code> that has been split into two possibly-overlapping \xe2\x80\xa6C`Sets the offset to the provided number of bytes.CnMatch the beginning of text. Specifically, this matches at \xe2\x80\xa60lA start tag.AbA state in an NFA.BgPossible outcomes of a steal operation.ClRepresents a rectangular container with fixed height and \xe2\x80\xa6AaANSI Text styling00AmA <code>style</code> element.estyleAb<code>super</code>AmA <code>tspan</code> element.etspanCcFinds all occurrences of three bytes in a haystack.00AmThree successive byte ranges.n<code>~</code>AmA <code>title</code> element.etitleCjA type-macro that expands to the name of the Rust type \xe2\x80\xa6CdMarker trait for types that represent single tokens.AfThe \xe2\x80\x9ctrace\xe2\x80\x9d level.C`Corresponds to the <code>Trace</code> log level.ClA trait definition: <code>pub trait Iterator { ... }</code>.Ab<code>trait</code>CmRounds toward zero, chopping off any fractional part of a \xe2\x80\xa6BnA tuple expression: <code>(a, b, c, d)</code>.BeA tuple pattern: <code>(a, b)</code>.BmA tuple type: <code>(A, B, C, String)</code>.CaA function argument accepted by pattern and type.CdA unary operation: <code>!x</code>, <code>*x</code>.CdAn alternation such that there exists an epsilon \xe2\x80\xa6AaA union of items.DfA union definition: <code>union Foo&lt;A, B&gt; { x: A, y: B }</code>.Ab<code>union</code>Ab<code>[A-Z]</code>nA usage string0CkA word-sized unsigned integer stored in a given byte order.AgOverwrite builder valueAgArgument\xe2\x80\x99s value type10BeThe type produced by using this seed.BcThe value produced by this visitor.B`Represents any valid JSON value.0AhA value of an attribute.Ab<code>where</code>BnA while loop: <code>while expr { ... }</code>.Ab<code>while</code>DmWhite: #7 (foreground code <code>37</code>, background code <code>47</code>).00AbLocked writer typeC`A trait for printing datetimes or spans into \xe2\x80\xa6DaResult of <code>yield_now()</code> or <code>yield_local()</code>.0BlA yield expression: <code>yield expr</code>.Ab<code>yield</code>CbAn iterator which iterates two other iterators \xe2\x80\xa6DkAn <code>IndexedParallelIterator</code> that iterates over two parallel \xe2\x80\xa6BbA time zone aware instant in time.BmBuild an ioctl number for a read-write ioctl.DfSets the program\xe2\x80\x99s description for the short help (<code>-h</code>).0oArccosine (f32)AoInverse hyperbolic cosine (f64)BcInverse hyperbolic cosine function.00CdThe offset corresponding to the later time in a gap.CgThe offset corresponding to the earlier time in a fold.CdAdd an alias, which functions as a hidden long flag.BgSets a hidden alias to this subcommand.CeSets a <em>hidden</em> alias for this argument value.210BcClaims a memory block from the pool0BkApply an alternative formatter to the error0DiBuilds this logger and instantiates it as the global <code>log</code> \xe2\x80\xa6BkApply the current transform to a coordinateEjCreate an <strong><code>Array</code></strong> with one, two, three, four, five, or six \xe2\x80\xa600ChParallel iterator types for arrays (<code>[T; N]</code>)ClIf this unit is not an \xe2\x80\x9cend of input\xe2\x80\x9d sentinel, then \xe2\x80\xa6mArcsine (f32)AmInverse hyperbolic sine (f64)BaInverse hyperbolic sine function.00AgArctangent of y/x (f64)FeComputes the four quadrant arctangent of <code>self</code> (<code>y</code>) and <code>other</code>\xe2\x80\xa600A`Arctangent (f32)B`Inverse hyperbolic tangent (f64)BdInverse hyperbolic tangent function.00BeContains the slot map implementation.CnCreates a cursor referencing the first token in the buffer \xe2\x80\xa6AoApply <code>blink</code> effect00CnThe <code>BlockRngCore</code> trait and implementation helpersCkBuild an Aho-Corasick automaton using the configuration \xe2\x80\xa6ClBuild a searcher from the patterns added to this builder \xe2\x80\xa6ChBuild an Aho-Corasick DFA from the given iterator of \xe2\x80\xa6CgBuild an Aho-Corasick contiguous NFA from the given \xe2\x80\xa6CjBuild an Aho-Corasick noncontiguous NFA from the given \xe2\x80\xa6CoPrepare for introspecting on all included <code>Command</code>s0AcBuild a log filter.AdBuild an env logger.CoCreate a new <code>Zoned</code> from the fields set on this \xe2\x80\xa6CnCreate a new <code>Date</code> from the fields set on this \xe2\x80\xa6DbCreate a new <code>DateTime</code> from the fields set on this \xe2\x80\xa6CnCreate a new <code>Time</code> from the fields set on this \xe2\x80\xa6CcInvoke the builder and return a <code>Record</code>BgReturns a <code>Metadata</code> object.D`Creates a new <code>ThreadPool</code> initialized using this \xe2\x80\xa60CmDeprecated in favor of <code>ThreadPoolBuilder::build</code>.DiCompiles the pattern given to <code>RegexBuilder::new</code> with the \xe2\x80\xa6DiCompiles the patterns given to <code>RegexSetBuilder::new</code> with \xe2\x80\xa610CiBuilds a <code>Regex</code> from a single pattern string.BhBuild a lazy DFA from the given pattern.BeBuild a regex from the given pattern.BlBuild a one-pass DFA from the given pattern.CiAssemble a <code>NFA</code> from the states added so far.CiCompile the given regular expression pattern into an NFA.CcBuild a <code>PikeVM</code> from the given pattern.CoBuild a <code>BoundedBacktracker</code> from the given pattern.CiBuild a parser from this configuration with the given \xe2\x80\xa60CcBuild a translator using the current configuration.CmSearch for regex matches in <code>&amp;[u8]</code> haystacks.CnAccepts a replacement byte string and interpolates capture \xe2\x80\xa6CjA possibly non-sized field containing a sequence of bytes.AjGets the underlying bytes.oCube root (f32)jCeil (f32)BkGeneral matrix multiplication (complex f32)CjAn iterator of the chain of source errors contained by \xe2\x80\xa6AnAdds a child to this dispatch.ClTakes two iterables and creates a new iterator over both \xe2\x80\xa6ChChain zero or more iterators together into one sequence.CiTakes two iterators and creates a new iterator over both.CnReturns an error if and only if Unicode word boundary data \xe2\x80\xa6CdFacilities for dealing with inexact dates and times.CkLimit the values for each element, similar to NumPy\xe2\x80\x99s \xe2\x80\xa6BjA value bounded by a minimum and a maximum0BeClamps a value between a min and max.10CkCreates a class HIR expression. The class may either be \xe2\x80\xa6AjReset all effects in-place00BfClears the deque, removing all values.CgClears the buffer, replacing every element with the \xe2\x80\xa6CkRemove all key-value pairs in the map, while preserving \xe2\x80\xa6BdClears the set, removing all values.BlClears the map, removing all key-value pairsCjTruncates this <code>String</code>, removing all contents.BgClears the vector, removing all values.BeDrops all items from the binary heap.CdClear this set such that it contains no pattern IDs.AcClear this builder.BgClear this <code>Captures</code> value.BdClears the map, removing all values.CjClears the slot map. Keeps the allocated memory for reuse.00ClClears the secondary map. Keeps the allocated memory for \xe2\x80\xa60BdRemove all elements from the vector.CmClears the sequence of all values and punctuation, making \xe2\x80\xa6BcReturns a copy of the atomic value.ChCreates another reference to the same garbage collector.EgClose the <code>LineString</code>. Specifically, if the <code>LineString</code> has \xe2\x80\xa60CkReturns a span for the closing punctuation of the group \xe2\x80\xa6BjAdd a <code>Command::Close</code> command.AjSets when to color output.0CdCreates a <code>Coord</code> from the given scalars.0AgHyperbolic cosine (f64)CjCounts all occurrences of this byte in the given haystack.00CeCounts the number of items in this parallel iterator.BbLogs a message at the debug level.ClRemove duplicates from sections of consecutive identical \xe2\x80\xa6CjDeduplicate adjacent equivalent literals in this sequence.BgRemoves consecutive duplicate elements.CjDelay initialization for parts of the <code>Command</code>0CnStores a function so that it can be executed at some point \xe2\x80\xa6CgMacro to create a <code>ScopeGuard</code> (always run).CcCalculate the difference in coordinates (\xce\x94x, \xce\x94y).0BkContains the dense slot map implementation.AoDereferences the given pointer.AiDereferences the pointer.BcGeneral matrix multiplication (f64)ChGenerating random samples from probability distributionsCnReturns a draining iterator over all elements contained in \xe2\x80\xa6CiClears the slot map, returning all key-value pairs in \xe2\x80\xa60000CjCreates a draining iterator that removes the specified \xe2\x80\xa6CgInternal method used to define the behavior of this \xe2\x80\xa6DfReturns the four edges that make up <code>self</code>, in the same \xe2\x80\xa6BcReturns an empty GeometryCollectionAkReturns an empty LineStringB`Returns an empty MultiLineStringAkReturns an empty MultiPointAmReturns an empty MultiPolygonAiReturns an empty Polygon.543210BhCreates a transformation with no effect.CbCreates a parallel iterator that produces nothing.AmCreate a new empty regex set.0ClCreates a new set of equivalence classes where all bytes \xe2\x80\xa6CfCreate new storage for only tracking which pattern \xe2\x80\xa6BmThis creates an empty <code>GroupInfo</code>.BnCreate an empty set of look-around assertions.AoCreate an \xe2\x80\x9cempty\xe2\x80\x9d AST item.B`Returns an empty HIR expression.BbCreate a new class with no ranges.03AjReturns an empty sequence.ChCreates a cursor referencing a static empty TokenStream.BjReturns an entry for the corresponding keyCmGets the given key\xe2\x80\x99s corresponding entry in the map for \xe2\x80\xa6DjGets the given key\xe2\x80\x99s corresponding <code>Entry</code> in the map for \xe2\x80\xa60DfReturn <code>true</code> if both iterables produce equal sequences \xe2\x80\xa6BbComplementary error function (f32)oError reportingC`Custom error message for post-parsing validationmError heading210BbLogs a message at the error level.CbWhen serializing or deserializing JSON goes wrong.ClReport that the attribute\xe2\x80\x99s content did not conform to \xe2\x80\xa6CjTriggers an error at the current position of the parse \xe2\x80\xa600BaTypes related to error reporting.CgReturns a new exact literal containing the bytes given.CjCalculates 10 raised to the power of <code>x</code> (f64).AiExponential, base 2 (f32)BjExponential, base <em>e</em>, of x-1 (f64)CnItems which do not have a correspondence to any API in the \xe2\x80\xa6B`Absolute value (magnitude) (f32)AiPositive difference (f32)AlGet the first key-value pairAcGet the first valueCmReturns a reference to the first element of the array, or \xe2\x80\xa6BkBorrows the first element in this sequence.BhReturns a time zone with a fixed offset.AnCreate a \xe2\x80\x9cflags\xe2\x80\x9d AST item.CiIf this group is non-capturing, then this returns the \xe2\x80\xa6AmThe actual sequence of flags.kFloor (f64)CgThe largest integer less than or equal to each element.CkReturns the largest integer less than or equal to a number.0000CmClears up the thread-local cache of deferred functions by \xe2\x80\xa6AmFlushes any buffered records.0CnReturn the greater of two arguments or, if either argument \xe2\x80\xa6CmReturn the lesser of two arguments or, if either argument \xe2\x80\xa6DhCalculate the remainder of <code>x / y</code>, the precise result of \xe2\x80\xa6BlAccumulator of the elements in the iterator.CjForces the evaluation of this lazy value and returns a \xe2\x80\xa6BdThe fractional part of each element.BhReturns the fractional part of a number.0000CmProvides a reference to the front element, or None if the \xe2\x80\xa6CnThe name of the <code>ArgGroup</code> the argument belongs to.CaAdds an <code>ArgGroup</code> to the application.10AnCreate a \xe2\x80\x9cgroup\xe2\x80\x9d AST item.DdIf the cursor is pointing at a <code>Group</code> with the given \xe2\x80\xa6EhCreate a new <code>ScopeGuard</code> owning <code>v</code> and with deferred closure \xe2\x80\xa6CfCreate a new span from this integer in units of hours.CjSet the number of hours on this span. The value may be \xe2\x80\xa6CkCalculate the length of the hypotenuse of a right-angle \xe2\x80\xa600AdName of the variant.AjName of the field, if any.DfThe <code>example</code> in <code>macro_rules! example { ... }</code>.DgIf the cursor is pointing at a <code>Ident</code>, returns it along \xe2\x80\xa6DaHelper functions for implementing <code>RngCore</code> functions.DgCreates a <code>Zoned</code> value by attaching a time zone for the \xe2\x80\xa6CgReturn a new zoned datetime with precisely the same \xe2\x80\xa6DhConverts a civil date to a <code>Zoned</code> datetime by adding the \xe2\x80\xa6DhConverts a civil datetime to a <code>Zoned</code> datetime by adding \xe2\x80\xa6AaGet the raw valueDlSpecifies the index of a positional argument <strong>starting at</strong> 1.101CbReturns an adapted iterator for the current index.BnGet a reference of a element through the view.0ClConvert a mutable array view to a mutable reference of a \xe2\x80\xa6AmReturn the index of the axis.BbLow-level API for sampling indicesCaReturn the value at the given <code>index</code>.BeGet the index into the result buffer.0ChOur index amongst the broadcast threads (ranges from \xe2\x80\xa6CeGets the index of this thread in the pool, within \xe2\x80\xa610AbThe capture index.BaThe capture index of the capture.EeIndex into a <code>serde_json::Value</code> using the syntax <code>value[0]</code> orAnA list of holes in the polygonDeReturns the current <code>Input</code> associated with this iterator.000CmReturns the current <code>Input</code> used by this iterator.0CmReturns the current <code>Input</code> used by this searcher.11BdReport whether this is running in CIB`True iff this is wound clockwiseCnReturns true if this error was caused by a failure to read \xe2\x80\xa6iAll itemsBhThe items to be packed and their demandsAkSet of items to be produced10BnThe sequence of items that make up this union.CmA sequence of flag items. Each item is either a flag or a \xe2\x80\xa6CmReturn a producer and iterable that traverses over all 1D \xe2\x80\xa6CaDisambiguates this timestamp according to the \xe2\x80\xa6CfDisambiguates this zoned datetime according to the \xe2\x80\xa6ChWhether or not to write the level in the default format.CjSets the overarching level filter for this logger. All \xe2\x80\xa6CnThe level of the node in the tree, 0 being the bottom-most \xe2\x80\xa6BcThe verbosity level of the message.BaSet <code>Metadata::level</code>.1AnSetter for <code>level</code>.DkReturn an iterator yielding one <code>Line</code> for each line segment \xe2\x80\xa60BkParsing and inspecting Rust literal tokens.DhReturns <code>ln(1+n)</code> (natural logarithm) more accurately than if00BnThe base 10 logarithm of <code>x</code> (f64).BbBase 10 logarithm of each element.BlReturns the base 10 logarithm of the number.00C`The natural logarithm of 1+<code>x</code> (f64).BmThe base 2 logarithm of <code>x</code> (f32).BbReturns the AABB\xe2\x80\x99s lower corner.BgReturns the rectangle\xe2\x80\x99s lower corner.DmCreate an iterator that merges elements in <code>i</code> and <code>j</code>.CgReturn an iterator adaptor that merges the two base \xe2\x80\xa6CfExtends <code>self</code> to contain another envelope.DfEquivalent to <code>months()</code>, but reads better for singular \xe2\x80\xa60BjReturns the month for this zoned datetime.BlSet the month field on a <code>Zoned</code>.BgReturns the parsed month, if available.B`Returns the month for this date.BkSet the month field on a <code>Date</code>.BdReturns the month for this datetime.BoSet the month field on a <code>DateTime</code>.CnReturns a reference to the original <code>Mutex</code> object.BnLocks that have the same behaviour as a mutex.DhReturn the number of columns (length of <code>Axis(1)</code>) in the \xe2\x80\xa6CiOnly pass printable data to the inner <code>Write</code>.DeReturn the number of rows (length of <code>Axis(0)</code>) in the \xe2\x80\xa6CbThis configures octal mode for the entire pattern.CcThis configures octal mode for all of the patterns.10BgWhether to support octal syntax or not.00BaThe outer boundary of the polygonCmReturns an iterator over the contents of this sequence as \xe2\x80\xa6AjPanics the current thread.CkParse from <code>std::env::args_os()</code>, exit on error.AhParse the argument value1100AmParses the directives string.DfParses a Temporal ISO 8601 datetime string into a <code>Pieces</code>.EeParse the given <code>input</code> according to the given <code>format</code> string.0ClParse an RFC 2822 datetime string into a <code>Zoned</code>.CkParses the input as a bool literal. Returns an error if \xe2\x80\xa6CkParses the input as a byte literal. Returns an error if \xe2\x80\xa6ClParses the input as a (raw) byte string literal. Returns \xe2\x80\xa6CmParses the input as a character literal. Returns an error \xe2\x80\xa6ClParses the input as a floating point literal. Returns an \xe2\x80\xa6ClParses the input as an integer literal. Returns an error \xe2\x80\xa6CjParses the input as a (raw) string literal. Returns an \xe2\x80\xa6BiParses the given input as a Rust literal.CkA convenience routine for parsing a pattern into an HIR \xe2\x80\xa6CkA convenience routine for parsing a regex using default \xe2\x80\xa6CkParse the regular expression into a high level intermediateCaThis module provides a regular expression parser.CjParse the regular expression into an abstract syntax tree.AgParse a data attribute.lParse a tag.CnParsing interface for parsing a token stream into a syntax \xe2\x80\xa6CkParse tokens of source code into the chosen syntax tree \xe2\x80\xa6ClParse a syntax tree node from the content of this string \xe2\x80\xa6DcParses a syntax tree node of type <code>T</code>, advancing the \xe2\x80\xa62BkAdd a transition from one state to another.CcLooks at the second-next token in the parse stream.CbLooks at the third-next token in the parse stream.lSet of piersAcNo terminal styling0ChCreates a <code>Point</code> from the given coordinates.CbReturns the \xe2\x80\x9cstarting point\xe2\x80\x9d of the given ray.1lSet of polesC`Creates a time zone from a POSIX TZ rule string.AnPrints to <code>stdout</code>.CaDraw a character to the screen and update states.EdPrints formatted and colored error to <code>stdout</code> or <code>stderr</code> \xe2\x80\xa60DgThis module provides a regular expression printer for <code>Ast</code>.DiPrint the given <code>Ast</code> to the given writer. The writer must \xe2\x80\xa6DgThis module provides a regular expression printer for <code>Hir</code>.1ClEnabled variants of the 2D irregular Cutting and Packing \xe2\x80\xa6DgIf the cursor is pointing at a <code>Punct</code>, returns it along \xe2\x80\xa6CmBorrows the punctuation from this punctuated pair, unless \xe2\x80\xa6Algithub\xe2\x80\x82crates-io\xe2\x80\x82docs-rsA`The whole point.CmLike <code>Input::span</code>, but accepts any range instead.AmReturns this span as a range.BbReturns the match span as a range.AjNarrow the supported range000EcReturn an iterator of floats from <code>a</code> to <code>b</code> (exclusive), \xe2\x80\xa6DkCreate a one-dimensional array with elements from <code>start</code> to \xe2\x80\xa6CkParallel iterator types for ranges, the type for values \xe2\x80\xa6CgReturns the range over the starting and ending byte \xe2\x80\xa60765CmRayon is a data-parallelism library that makes it easy to \xe2\x80\xa6ChReturns if there are any items to dequeue. When this \xe2\x80\xa6CmReturns if there is any space to enqueue a new item. When \xe2\x80\xa6CkThe reciprocal (inverse) of each element, <code>1/x</code>.ClTake the reciprocal (inverse) of a number, <code>1/x</code>.CjReturns the reciprocal (multiplicative inverse) of the \xe2\x80\xa6110CjThis crate provides routines for searching strings for \xe2\x80\xa6D`Returns the <code>Regex</code> value that created this iterator.0BeA lazy DFA backed <code>Regex</code>.CiStrategies that determine the behaviour of locks when \xe2\x80\xa6CePerform the relaxing operation during a period of \xe2\x80\xa6BoUnpins and then immediately re-pins the thread.B`Resets the <code>Backoff</code>.BkResets the internal cache of this database.ClReset the number of available results. This will force a \xe2\x80\xa60CkReset this cache such that it can be used for searching \xe2\x80\xa600000CiReturn the last occurrence of the needle in the given \xe2\x80\xa6ClReturn the last occurrence of one of the needle bytes in \xe2\x80\xa60EfReturn the last occurrence of the <code>needle</code> in the <code>haystack</code> \xe2\x80\xa6EhReturns the last occurrence of <code>needle</code> in the given <code>haystack</code>\xe2\x80\xa6222222CiReturns the index of the last occurrence of the given \xe2\x80\xa6CnReturns the index of the last occurrence of this needle in \xe2\x80\xa6EmConvert the right side of <code>Either&lt;L, R&gt;</code> to an <code>Option&lt;R&gt;</code>.0EoIf <code>Right</code>, or <code>Both</code>, return <code>Some</code> with the right value. \xe2\x80\xa61DgRound <code>x</code> to the nearest integer, breaking ties toward even.CnReturns a new signed duration that is rounded according to \xe2\x80\xa6C`Returns a new span that is balanced and rounded.DfRounds this timestamp according to the <code>TimestampRound</code> \xe2\x80\xa6DgRounds this zoned datetime according to the <code>ZonedRound</code> \xe2\x80\xa6DdRounds this datetime according to the <code>DateTimeRound</code> \xe2\x80\xa6DjRounds this time according to the <code>TimeRound</code> configuration \xe2\x80\xa6CkReturns a new offset that is rounded according to the givenDhRound <code>x</code> to the nearest integer, breaking ties away from \xe2\x80\xa6BdThe nearest integer of each element.CkReturns the nearest integer to a number. Round half-way \xe2\x80\xa60000BhAn n-dimensional r*-tree implementation.CdScale a <code>Geometry</code> up or down by a factorCaScale a geometry from it\xe2\x80\x99s bounding box center.Di<strong>Create</strong> a new affine transform for scaling, scaled by \xe2\x80\xa6CmReturns a new rectangle with the same centroid but scaled \xe2\x80\xa6CjMultiplies <code>self</code> by the scalar <code>t</code>.BfReturns the scale of the distribution.BiCreates a new scope for spawning threads.CiWhether the entity induced a hazard within the entire \xe2\x80\xa6DjCreates a \xe2\x80\x9cfork-join\xe2\x80\x9d scope <code>s</code> and invokes the closure \xe2\x80\xa6CjCreates a scope that executes within this thread pool. \xe2\x80\xa610eSerdeBmSets the x/horizontal component of the point.0BkSets the y/vertical component of the point.0BcGeneral matrix multiplication (f32)AgThe shape of the hazardDhThe shape of the <code>Item</code> after it has been transformed and \xe2\x80\xa6AaShape of the itemAfShape of the containerAnThe polygon shape of this zoneBiReturn the shape of the array as a slice.BfReturns the shape of the distribution.CfSets the short version of the argument without the \xe2\x80\xa60DfReturns the four sides that make up <code>self</code>, in the same \xe2\x80\xa6DgThis routine is identical to <code>Timestamp::until</code>, but the \xe2\x80\xa6DiThis routine is identical to <code>Zoned::until</code>, but the order \xe2\x80\xa6DkThis routine is identical to <code>Date::until</code>, but the order of \xe2\x80\xa6DfThis routine is identical to <code>DateTime::until</code>, but the \xe2\x80\xa6DkThis routine is identical to <code>Time::until</code>, but the order of \xe2\x80\xa6DcReturns the number of days from <code>other</code> to this weekday.CnReturns the span of time since the other offset given from \xe2\x80\xa6BlThe hyperbolic sine of <code>x</code> (f32).BbReturn a sliced view of the array.AiDistributions over slicesBbParallel iterator types for slicesAnCalculate the slope (\xce\x94y/\xce\x94x).0CjReturns the underlying slots, where each slot stores a \xe2\x80\xa6CmReturns the starting and ending slot corresponding to the \xe2\x80\xa6AgSpawns a scoped thread.BoSpawns a scoped thread with this configuration.CmPuts the task into the Rayon thread pool\xe2\x80\x99s job queue in \xe2\x80\xa6DjSpawns a job into the fork-join scope <code>self</code>. This job will \xe2\x80\xa6CnSpawns an asynchronous task in this thread pool. This task \xe2\x80\xa6210CkCreate a new span using the given position as the start \xe2\x80\xa6CeAn iterator over substrings of this string slice, \xe2\x80\xa6CcSplits a queue into producer and consumer endpointsBiSplit the <code>Zip</code> evenly in two.00000DkThe <code>split</code> function takes arbitrary data and a closure that \xe2\x80\xa6CkSplit midway into a new producer if possible, otherwise \xe2\x80\xa6ClReturns an iterator of substrings of the haystack given, \xe2\x80\xa60CgReturns an iterator of spans of the haystack given, \xe2\x80\xa6BhThe square root of <code>x</code> (f32).B`Stack arrays along the new axis.0BiReturn the start position of this search.BcThe starting position of the match.BhThe start offset of the span, inclusive.CkCreate a new overlapping state that begins at the start \xe2\x80\xa6Ckstart index; negative are counted from the back of the axis0ClReturns the byte offset of the start of the match in the \xe2\x80\xa605432BfThe inclusive start of the byte range.CaProvides helpers for dealing with start state \xe2\x80\xa6CkThis method is called before beginning traversal of the \xe2\x80\xa60AfThe start byte offset.AhThe start of this range.22AoReturn the start of this range.0B`Start of byte range (inclusive).BfANSI escape code parsing state machineClInternal state that will be passed to the closure on the \xe2\x80\xa6ClReturn a reference to the NFA state corresponding to the \xe2\x80\xa6AmSteals a task from the queue.0AeStatements in a blockCdThe number of copies of this bin available to be use0EcStores a <code>Shared</code> or <code>Owned</code> pointer into the atomic pointer.BmStores <code>val</code> into the atomic cell.BhPlanar sweep algorithm and related utilsBoThe hyperbolic tangent of <code>x</code> (f32).AlThe theme to use for the svgDgConvert <code>self</code> to big endian from the target\xe2\x80\x99s endianness.EeConverts the value of <code>self</code> to an <code>i8</code>. If the value cannot beDbConvert <code>self</code> to little endian from the target\xe2\x80\x99s \xe2\x80\xa6EhConverts the value of <code>self</code> to a <code>u8</code>. If the value cannot be \xe2\x80\xa6CgTokens representing Rust punctuation, keywords, and \xe2\x80\xa6CjReturns a floating point number representing the total \xe2\x80\xa6BbLogs a message at the trace level.BkThe transition from this state to the next.ClRounds the number toward 0 to the closest integral value \xe2\x80\xa6BaThe integer part of each element.BdReturn the integer part of a number.0000CjVisits the values representing the union, i.e. all the \xe2\x80\xa6CkReturns a new set that is the union of this and the one \xe2\x80\xa6AiBuild a set from a union.CnUnion this character class with the given character class, \xe2\x80\xa6CjUnion this byte class with the given byte class, in place.CkReturns a new set of properties that corresponds to the \xe2\x80\xa64CeUnions the <code>other</code> sequence into this one.DkStrips the raw marker <code>r#</code>, if any, from the beginning of an \xe2\x80\xa6CjReturns a span representing the elapsed time from this \xe2\x80\xa60000DfReturns the number of days until <code>other</code> from this weekday.CmReturns the span of time from this offset until the other \xe2\x80\xa6CjUnzips the items of a parallel iterator into a pair of \xe2\x80\xa6BbReturns the AABB\xe2\x80\x99s upper corner.BgReturns the rectangle\xe2\x80\x99s upper corner.mUsage heading0EhSwap elements <em>unchecked</em> at indices <code>index1</code> and <code>index2</code>.AiHighlight suggested usage0CaReturns the actual Boolean value of this literal.CdReturns the byte value that this literal represents.CkReturns the string value this literal represents (where \xe2\x80\xa6CiReturns the character value that this literal represents.CnPerforms the actual string to int conversion to obtain the \xe2\x80\xa6BlReturns the base value, i.e. 2, 8, 10 or 16.3BhThe property value (which may be empty).ClBuilding blocks for deserializing basic values using the \xe2\x80\xa6CkThe Value enum, a loosely typed way of representing any \xe2\x80\xa6CnUsed when parsing <code>key = &quot;value&quot;</code> syntax.CgBorrows the syntax tree node from this punctuated pair.DhExecutes an implementation of <code>Visitor</code> in constant stack \xe2\x80\xa60CfCreate a new span from this integer in units of weeks.CjSet the number of weeks on this span. The value may be \xe2\x80\xa6BkReturns the width of the <code>Rect</code>.0CkLocks with exclusive write access, blocking the current \xe2\x80\xa6BiSee <code>core::hash::Hasher.write</code>CkWrites an element to the buffer, overwriting the oldest \xe2\x80\xa6DhLocks this <code>RwLock</code> with exclusive write access, blocking \xe2\x80\xa6CnLock this rwlock with exclusive write access, blocking the \xe2\x80\xa6AaWrite a document.DcWrites the bytes of <code>t</code> and then forgets <code>t</code>.CmReturns a mutable reference to the x/horizontal component \xe2\x80\xa6000CfCreate a new span from this integer in units of years.CjSet the number of years on this span. The value may be \xe2\x80\xa6CiCreates a dimension of all zeros with the specified ndim.D`Create a new dimension value with <code>n</code> axes, all zerosCeCreate an array with zeros, shape <code>shape</code>.1BkGeneral matrix multiplication (complex f64)CmZones within the container with varying quality. Holes in \xe2\x80\xa6AmTry very hard to emit colors.CkEnables colored output regardless of whether or not the \xe2\x80\xa601AnTry very hard to print styles.AiAlways run on scope exit.AjAn <code>a</code> element.aaAg<code>&amp;&amp;</code>CfWhen encountered, store the associated value(s) in \xe2\x80\xa600Afzero-dimensional arrayAeone-dimensional arrayAetwo-dimensional arrayAgthree-dimensional arrayAffour-dimensional arrayAffive-dimensional arrayAesix-dimensional arrayAidynamic-dimensional arrayCeAn assignment expression: <code>a = compute()</code>.CgAn atomic pointer that can be safely shared between \xe2\x80\xa6ChA bare function type: <code>fn(usize) -&gt; bool</code>.Ac<code>become</code>ClA binary operation: <code>a + b</code>, <code>a += b</code>.BmThe <code>&amp;</code> operator (bitwise and)BiThe <code>^</code> operator (bitwise xor)ChA correctly sized stack allocation for the formatted \xe2\x80\xa6DhA shared or owned string buffer. Implemented for <code>String</code> \xe2\x80\xa6CgSafe API for formatting floating point numbers to text.CfThe Cauchy distribution <code>Cauchy(x\xe2\x82\x80, \xce\xb3)</code>.CfA distribution to uniformly sample elements of a sliceBlAn iterator that yields the Chunk iterators.Da<code>Chunks</code> is an iterator that groups elements of an \xe2\x80\xa6CnParallel iterator over immutable non-overlapping chunks of \xe2\x80\xa6fCircleAnA <code>circle</code> element.fcircleDe<code>Cloned</code> is an iterator that clones the elements of an \xe2\x80\xa6CnA layout that does not yet exist, but can be created by \xe2\x80\x98\xe2\x80\xa6BcInclusive at the beginning and end.BgA concatenation of regular expressions.0AoA concatenation of expressions.CiThe configuration for a packed multiple pattern searcher.ClConfiguration for customizing the behavior of formatting \xe2\x80\xa6CoAn object describing the configuration of a <code>Regex</code>.BoThe configuration used for building a lazy DFA.CcThe configuration used for building a one-pass DFA.CcThe configuration used for a Thompson NFA compiler.CjThe configuration used for building a <code>PikeVM</code>.CjThe configuration used for building a bounded backtracker.CmThe configuration used to determine a DFA\xe2\x80\x99s start state \xe2\x80\xa6CkA common set of configuration options that apply to the \xe2\x80\xa6De<code>Copied</code> is an iterator that copies the elements of an \xe2\x80\xa6CjA cheaply copyable cursor into a <code>TokenBuffer</code>.AmAn opaque message to the user0DgAn interface for customizing <code>strtime</code>-style parsing and \xe2\x80\xa6BhAdds the two dimensions at compile time.n<code>$</code>o<code>..</code>FdThe enum <code>Either</code> with variants <code>Left</code> and <code>Right</code> is a general \xe2\x80\xa600BiThe hazard is present in the entire node.BlDoes the argument match the specified value?0DgRounds away from zero like <code>Ceil</code> for positive spans and \xe2\x80\xa6DkAn <code>if</code> expression with an optional <code>else</code> block: \xe2\x80\xa6BbBin with a stock quantity and costAc<code>extern</code>BmData stored within an enum variant or struct.mA log filter.CkA type alias for a log filter. Returning true means the \xe2\x80\xa6E`<code>Filter</code> takes a predicate <code>filter_op</code> and filters out \xe2\x80\xa6AnA <code>filter</code> element.ffilterCeAn architecture independent \xe2\x80\x9cpacked pair\xe2\x80\x9d finder.CeA forward substring searcher using the Rabin-Karp \xe2\x80\xa6CjA forward substring searcher using the Shift-Or algorithm.CfA forward substring searcher that uses the Two-Way \xe2\x80\xa6CgA \xe2\x80\x9cpacked pair\xe2\x80\x9d finder that uses 128-bit vector \xe2\x80\xa6CgA \xe2\x80\x9cpacked pair\xe2\x80\x9d finder that uses 256-bit vector \xe2\x80\xa6CiA single substring searcher fixed to a particular needle.DkThe <code>Folder</code> trait encapsulates the standard fold operation. \xe2\x80\xa6CjThe type of folder that this consumer can be converted \xe2\x80\xa6DhRepresents a Format error (which is a part of <code>Display</code>). \xe2\x80\xa60DcFormat all iterator elements lazily, separated by <code>sep</code>.CmThe search, based on heuristics, determined that it would \xe2\x80\xa6DiA trait for methods which work for both integers <strong>and</strong> \xe2\x80\xa6BlAn iterator that yields the Group iterators.CdThe Gumbel distribution <code>Gumbel(\xce\xbc, \xce\xb2)</code>.BoSee <code>core::hash::Hasher</code> for detailsC`See <code>core::hash::BuildHasher::Hasher</code>BgKey to identify hazards inside the CDE.CiAny spatial constraint affecting the feasibility of a \xe2\x80\xa6CgSwap foreground and background colors; inconsistent \xe2\x80\xa600CkNot widely supported. Sometimes treated as inverse or blink00FjIterate over <code>Arg</code> and <code>ArgGroup</code> <code>Id</code>s via <code>ArgMatches::ids</code>.0CiJSON input source that reads from a std::io input stream.AmA free-standing function: \xe2\x80\xa6CnAn iterator adaptor that merges an abitrary number of base \xe2\x80\xa6CnKernel trait to provide predicates to operate on different \xe2\x80\xa6Ab<code>&lt;-</code>AlReturn <code>log2(e)</code>.AeNext larger dimensionEoUnique key for each <code>Layout</code> in a <code>BPProblem</code> and <code>BPSolution</code>DhA <code>Layout</code> is a dynamic representation of items that have \xe2\x80\xa6ChAn integer literal: <code>1</code> or <code>1u16</code>.CeA UTF-8 string literal: <code>&quot;foo&quot;</code>.oThe env logger.DkThe total number of elements that were in <code>I</code> along with the \xe2\x80\xa6CkThis type type defines a margin within which two values \xe2\x80\xa6AnA <code>marker</code> element.fmarkerDg<code>MaxLen</code> is an iterator that imposes a maximum length on \xe2\x80\xa6CgA struct or tuple struct field accessed in a struct \xe2\x80\xa6CjAn iterator over all occurrences of a single byte in a \xe2\x80\xa6BhMicrosecond precision (6 decimal digits)BoThis is neither the first nor the last element.BhMillisecond precision (3 decimal digits)Dg<code>MinLen</code> is an iterator that imposes a minimum length on \xe2\x80\xa6ClMore than one element in the iterator, the first element \xe2\x80\xa6CkA minute is always 60 seconds. (Jiff behaves as if leap \xe2\x80\xa6CcThe smallest whole integer unit allowed is minutes.DjFused multiply-add. Computes <code>(self * a) + b</code> with only one \xe2\x80\xa6CaThe Normal distribution <code>N(\xce\xbc, \xcf\x83\xc2\xb2)</code>.DkA wrapper around floats providing an implementation of <code>Eq</code>, \xe2\x80\xa6CfGeneric trait for types implementing basic numeric \xe2\x80\xa6DeThe trait for <code>Num</code> types which also implement numeric \xe2\x80\xa6nA single value0CiRepresents a JSON number, whether integer or floating \xe2\x80\xa6000iA number.AiRepresents a JSON object.0DhThe time zone annotation is an offset. For example, <code>-05:00</code>.BdRepresents a fixed time zone offset.CmA distribution to sample floating point numbers uniformly \xe2\x80\xa60DjThe input contained an <code>Option&lt;T&gt;</code> that was not expected.BcDimensionality of the output array.BbConfiguration for a logger output.BiThe type returned for this type of index.CdThe resulting array storage of the same kind but \xe2\x80\xa6DcThe type of the slices created by <code>.multi_slice_move()</code>.C`The resulting dimension type after broadcasting.AnThe sum of the two dimensions.CnThe type of the reference to the element that is produced, \xe2\x80\xa6AlThe result of the operation.BgThe result after applying the operator.CiThe resulting type after applying the fused multiply-add.11CmThe type of value returned by this callback. Analogous to \xe2\x80\xa6AnThe result of visiting an AST.AnThe result of visiting an HIR.BlA parent node containing several child nodesCfThe Pareto distribution <code>Pareto(x\xe2\x82\x98, \xce\xb1)</code>.AkA thread parking primitive.DeParser for raw <em>VTE</em> protocol which delegates actions to a \xe2\x80\xa6CdParse command-line arguments into <code>Self</code>.CcGenerated parser, usually <code>ValueParser</code>.10CaGenerates the <code>Parser</code> implementation.BmA convenience parser for regular expressions.AlA regular expression parser.iA parser.CnParser that can parse Rust tokens into a particular syntax \xe2\x80\xa6AlA parser for Utf8 CharactersEbA literal in place of an expression: <code>1</code>, <code>&quot;foo&quot;</code>.ClA low level representation of a parsed Temporal ISO 8601 \xe2\x80\xa6CgA virtual machine for executing regex searches with \xe2\x80\xa6o<code>+=</code>BnIterates through a list of <code>Point</code>sBkExtracts only prefix literals from a regex.BlA public visibility level: <code>pub</code>.mQuadtree nodeAb<code>-&gt;</code>FdA wrapper for <code>Rc&lt;RefCell&lt;I&gt;&gt;</code>, that implements the <code>Iterator</code> \xe2\x80\xa6BcThe \xe2\x80\x9cpayload\xe2\x80\x9d of a log message.DeThe trait for <code>Num</code> references which implement numeric \xe2\x80\xa6ClWhen an ambiguous datetime is encountered, this strategy \xe2\x80\xa6CgWhen the offset and time zone are in conflict, this \xe2\x80\xa6CgTopologically relate two geometries based on DE-9IM \xe2\x80\xa6CnAn renamed identifier imported by a <code>use</code> item: \xe2\x80\xa6ChIterator adaptor for the <code>repeat()</code> function.CkAn array literal constructed from one repeated element: \xe2\x80\xa6Bc<code>Result&lt;T, Error&gt;</code>BgShort hand for <code>Result</code> type0CiThe type of result that this consumer will ultimately \xe2\x80\xa6CnThe type of result that will ultimately be produced by the \xe2\x80\xa6EcAlias for a <code>Result</code> with the error type <code>serde_json::Error</code>.0iA result.AkThe result of a Syn parser.0CmA <code>return</code>, with an optional value to be returned.Ac<code>return</code>CiRotate a geometry around a point by an angle, in degrees.AdA reader-writer lockClA lock that provides data access to either one writer or \xe2\x80\xa600CgThe stddev of rotation starts at 2\xc2\xb0 and ends at 0.5\xc2\xb0.AkThe duration of one second.CiA single argument value, the most common case for options0AnReturn <code>sqrt(2.0)</code>.AlScalar used the coordinates.BhThe number type used by this point type.AnA <code>script</code> element.fscriptBfA second is always 1,000 milliseconds.CcThe smallest whole integer unit allowed is seconds.CaA pointer to an object protected by the epoch GC.CnUseful functions for signed numbers (i.e. numbers that can \xe2\x80\xa6G`The input contained a signed integer <code>i8</code>, <code>i16</code>, <code>i32</code> or <code>i64</code> \xe2\x80\xa6CkA state with possibly many transitions represented in a \xe2\x80\xa6DkAn iterator over at most <code>N</code> substrings delimited by a regex \xe2\x80\xa60DiYields at most <code>N</code> spans delimited by a regular expression \xe2\x80\xa6o<code>*=</code>CiA static item: <code>static BIKE: Shed = Shed(42)</code>.EcA foreign static item in an <code>extern</code> block: <code>static ext: u8</code>.Ac<code>static</code>BlA strong, fast (amortized), non-portable RNGChAn adaptive wrapper around the global standard error \xe2\x80\xa6BdLogs will be sent to standard error.CiAn adaptive wrapper around the global standard output \xe2\x80\xa6BeLogs will be sent to standard output.Ef<code>StepBy</code> is an iterator that skips <code>n</code> elements between each \xe2\x80\xa6nA single value0BdA fixed capacity <code>String</code>AiRepresents a JSON string.0CoA struct literal expression: <code>Point { x: 1, y: 1 }</code>.CoA struct definition: <code>struct Foo&lt;A&gt; { x: A }</code>.DfA struct or struct variant pattern: <code>Variant { x, y, .. }</code>.Ac<code>struct</code>AlTerminal styling definitions00CnWhen set, a sign is only written when the span or duration \xe2\x80\xa6BkExtracts only suffix literals from a regex.ChExchange neigboring ranges of bits of the specified sizeAnA <code>symbol</code> element.fsymboloA syntax error.ClThe error was caused by input that was not syntactically \xe2\x80\xa6DmLog target, either <code>stdout</code>, <code>stderr</code> or a custom pipe.DhA trait for enabling concise literals for creating <code>Span</code> \xe2\x80\xa6CmAn iterator that groups the items in tuples of a specific \xe2\x80\xa6Ac<code>typeof</code>CkEquality comparisons between two numbers using both the \xe2\x80\xa6BmSee <code>unfold</code> for more information.AhUninitialized type stateCeAn iterator adapter to filter out duplicate elements.BmAn unsafe block: <code>unsafe { ... }</code>.Ac<code>unsafe</code>ClAn iterator adapter to apply a mutating function to each \xe2\x80\xa6Df<code>Update</code> is an iterator that mutates the elements of an \xe2\x80\xa6DkThe entry corresponding to the key <code>K</code> does not exist in the \xe2\x80\xa6oA vacant Entry.oA vacant entry.0CdIterate over multiple values for an argument via \xe2\x80\xa60BnAn iterator over a serde_json::Map\xe2\x80\x99s values.CfAn iterator over the values in a <code>SlotMap</code>.CkAn iterator over the values in a <code>DenseSlotMap</code>.CiAn iterator over the values in a <code>HopSlotMap</code>.CkAn iterator over the values in a <code>SecondaryMap</code>.DaAn iterator over the values in a <code>SparseSecondaryMap</code>.AbBounds on a weight0CjTests if a geometry is completely within another geometry.CmA vector composed of four words; depending on their size, \xe2\x80\xa6oA worker queue.Ah<code>[0-9A-Fa-f]</code>DnYellow: #3 (foreground code <code>33</code>, background code <code>43</code>).00CdA zero-sized field indicating the alignment we want.AoInverse hyperbolic cosine (f32)CdSpecify how to react to an argument when parsing it.0C`Type for value stored in <code>ArgMatches</code>0DbForce color, no matter what the inner <code>Write</code> supports.Algithub\xe2\x80\x82crates-io\xe2\x80\x82docs-rsCkConstruct an ad-hoc error from a string or existing non-\xe2\x80\xa6BkAppend an array to the array along an axis.0CaFor use by <code>ToTokens</code> implementations.CjMoves all elements from other into self, leaving other \xe2\x80\xa6FcMoves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> \xe2\x80\xa6AdAppend a child node.AaAppend a command.CdA crate that provides facilities for testing the \xe2\x80\xa6ChIf this unit is an \xe2\x80\x9cend of input\xe2\x80\x9d sentinel, then \xe2\x80\xa6KbConverts this <code>NotNan</code><code>&lt;</code><code>f64</code><code>&gt;</code> to a <code>NotNan</code><code>&lt;</code><code>f32</code><code>&gt;</code> while giving up \xe2\x80\xa6DkIf the <code>Value</code> is a number, represent it as f64 if possible. \xe2\x80\xa6CjRepresents the number as f64 if possible. Returns None \xe2\x80\xa6CkReturns the key data as a 64-bit integer. No guarantees \xe2\x80\xa6DjReturn the internal value as a <code>i32</code>. This is guaranteed to \xe2\x80\xa60DkReturn the internal <code>u32</code> of this small index represented as \xe2\x80\xa6BeReturn the internal value as a i32\xe2\x80\xa60DcIf the <code>Value</code> is an integer, represent it as i64 if \xe2\x80\xa6DdIf the <code>Number</code> is an integer, represent it as i64 if \xe2\x80\xa6FfConvert <code>&amp;mut Either&lt;L, R&gt;</code> to <code>Either&lt;&amp;mut L, &amp;mut R&gt;</code>.0DcConverts from <code>&amp;mut EitherOrBoth&lt;A, B&gt;</code> to \xe2\x80\xa61ChReturns a raw pointer to the underlying data in this \xe2\x80\xa6BoReturns a raw pointer to the vector\xe2\x80\x99s buffer.CcReturn a pointer to the first element in the array.1ChConverts the pointer to a raw pointer (without the tag).BdConverts the pointer to a reference.EjConvert <code>&amp;Either&lt;L, R&gt;</code> to <code>Either&lt;&amp;L, &amp;R&gt;</code>.0FlConverts from <code>&amp;EitherOrBoth&lt;A, B&gt;</code> to <code>EitherOrBoth&lt;&amp;A, &amp;B&gt;</code>.BnConvert this finder into its borrowed variant.02BiGet the raw string of the <code>Id</code>CfEnd-user description of the error case, where relevant0BjGet the raw string of the <code>Str</code>2011CeExtracts a string slice containing the entire string.CmReturns the name of this time zone annotation as a string \xe2\x80\xa6CaReturns this time zone name as a borrowed string.AnReturns the literal as string.ClReturns the string representation of the <code>Level</code>.DbReturns the string representation of the <code>LevelFilter</code>.BjReturns the original string of this regex.CcReturns the substring of the haystack that matched.1DfIf the <code>Value</code> is a String, returns the associated str. \xe2\x80\xa6DjReturn the internal value as a <code>u32</code>. This is guaranteed to \xe2\x80\xa60DeReturn the internal <code>u32</code> of this small index. This is \xe2\x80\xa611DjReturn the internal value as a <code>u64</code>. This is guaranteed to \xe2\x80\xa60DhReturn this small index as a <code>u64</code>. This is guaranteed to \xe2\x80\xa611DcIf the <code>Value</code> is an integer, represent it as u64 if \xe2\x80\xa6DdIf the <code>Number</code> is an integer, represent it as u64 if \xe2\x80\xa6AmInverse hyperbolic sine (f32)DlPerform an elementwise assigment to <code>self</code> from <code>rhs</code>.AdAssign an attribute.AgArctangent of y/x (f32)B`Inverse hyperbolic tangent (f32)mAtomic types.BhSets the author(s) for the help message.0CnCreate a zero-dimensional array view borrowing <code>x</code>.CeCreate a one-dimensional array view with elements \xe2\x80\xa6CeCreate a two-dimensional array view with elements \xe2\x80\xa6CbThe offset corresponding to the time before a gap.CgThe offset corresponding to the earlier time in a fold.DfImmutably borrows from an owned value. See <code>Borrow::borrow</code>0CoTrait and lifetime bounds (<code>Clone+Send+&#39;static</code>)CkParse a set of curly braces and expose their content to \xe2\x80\xa6ClThis helper function is used to \xe2\x80\x9cconnect\xe2\x80\x9d a parallel \xe2\x80\xa6AoChange the color to/from bright00ChA stably addressed token buffer supporting efficient \xe2\x80\xa6DjReturns a type that implements <code>Replacer</code>, but that borrows \xe2\x80\xa6000DbEquivalent to C\xe2\x80\x99s <code>void</code> type when used as a pointer.CoReturns the center <code>Coord</code> of the <code>Rect</code>.0BfReturns the envelope\xe2\x80\x99s center point.ClA macro for defining <code>#[cfg]</code> if-else statements.CdThe main macro provided by this crate. See crate \xe2\x80\xa6BnReport the desired choice for the given streamAlUniformly sample one element000ChReturn an <em>iterable</em> that can chunk the iterator.BmSplits an iterator up into fixed-size chunks.FfMaps an <code>Either&lt;&amp;mut L, &amp;mut R&gt;</code> to an <code>Either&lt;L, R&gt;</code> by \xe2\x80\xa6FjMaps an <code>Either&lt;&amp;L, &amp;R&gt;</code> to an <code>Either&lt;L, R&gt;</code> by cloning the \xe2\x80\xa6EgCreate an iterator that clones each element from <code>&amp;T</code> to <code>T</code>.2121CjCreates an iterator which clones all of its elements.  \xe2\x80\xa6CbReturn an array view of column <code>index</code>.CjThe approximate column number, starting at <code>1</code>.ChOne-based column number at which the error was detected.ClCombine all an iterator\xe2\x80\x99s elements into one element by \xe2\x80\xa60AoCreate a \xe2\x80\x9cconcat\xe2\x80\x9d AST item.CcReturns the concatenation of the given expressions.CnA convenience function for calling <code>Config::new()</code>.AhConfiguration of the CDEC`The configuration used to generate the surrogateChReturn a default configuration for a <code>Regex</code>.CfReturn a default configuration for a <code>DFA</code>.BiReturn a default configuration for a DFA.CgReturn a default configuration for an <code>NFA</code>.CiReturn a default configuration for a <code>PikeVM</code>.DeReturn a default configuration for a <code>BoundedBacktracker</code>.DkReturn an iterator yielding the members of a <code>LineString</code> as \xe2\x80\xa60FfMaps an <code>Either&lt;&amp;mut L, &amp;mut R&gt;</code> to an <code>Either&lt;L, R&gt;</code> by \xe2\x80\xa6FjMaps an <code>Either&lt;&amp;L, &amp;R&gt;</code> to an <code>Either&lt;L, R&gt;</code> by copying the \xe2\x80\xa60101CjCreates an iterator which copies all of its elements.  \xe2\x80\xa6DhCollect the items in this iterator and return a <code>HashMap</code> \xe2\x80\xa6BiCreate a cursor for walking the argumentsCiProvides low-level access to the token representation \xe2\x80\xa6EfSet the implementation of <code>Custom</code> to use in <code>strtime</code>-style \xe2\x80\xa6CkRaised when there is general error when deserializing a \xe2\x80\xa6DjUsed when a <code>Serialize</code> implementation encounters any error \xe2\x80\xa6BlAmount of times this item has to be produced0BaThe API design rationale for JiffClThe number of digits that must be used with this literal \xe2\x80\xa6AfCollections of digits.CkThe characters that are considered digits. If there are \xe2\x80\xa6B`Apply <code>dimmed</code> effect00CcSee the documentation for the DirectGeodesic trait.00000FdThe enum <code>Either</code> with variants <code>Left</code> and <code>Right</code> is a general \xe2\x80\xa6CnApply one of two functions depending on contents, unifying \xe2\x80\xa600CkReturn early with an error if a condition is not satisfied.AnThe entity inducing the hazardAjEntity inducing the hazardAnPrints to <code>stderr</code>.DgEscapes all regular expression meta characters in <code>pattern</code>.CeProvides convenience routines for escaping raw bytes.DdEscapes all regular expression meta characters in <code>text</code>.CjCalculates 10 raised to the power of <code>x</code> (f32).DkReturns <code>e^(self) - 1</code> in a way that is accurate even if the \xe2\x80\xa600EaExpands all instances of <code>$ref</code> in <code>replacement</code> to the \xe2\x80\xa60BjExponential, base <em>e</em>, of x-1 (f32)CiAll logic for exporting internal representations into \xe2\x80\xa6BeExports a solution out of the libraryChExports a strip packing solution out of the library. \xe2\x80\xa6ChAdd the given iterator of patterns to this set to match.AmStrip the next slice of bytesBaExtends the vec from an iterator.BkExtend this literal with the literal given.AnContent stored in the variant.AoAdds a directive to the filter.DjReturns the maximum <code>LevelFilter</code> that this filter instance \xe2\x80\xa6DeReturns the maximum <code>LevelFilter</code> that this env logger \xe2\x80\xa6AkAdds filters to the logger.ChSpecify an environment variable to read the filter from.CjAdds a custom filter which can reject messages passing \xe2\x80\xa6BdEverything related to hazard filtersDkApplies <code>filter_op</code> to each item of this iterator, producing \xe2\x80\xa6CmComplete the formatting call that this FormatCallback was \xe2\x80\xa6BjSee <code>core::hash::Hasher.finish</code>CmThis will resort the element into the correct position in \xe2\x80\xa6EgAll implementors of <code>Visitor</code> must provide a <code>finish</code> method, \xe2\x80\xa60kFloor (f32)CmForgets the contents of this memory block without running \xe2\x80\xa6ChFormat the existing message with the Command\xe2\x80\x99s context0CgSets the format function for formatting the log output.CkFormat the <code>Record</code> as configured for outputtingCkSets the formatter of this dispatch. The closure should \xe2\x80\xa6ClFormat all iterator elements, separated by <code>sep</code>.ClPrint an integer into this buffer and return a reference \xe2\x80\xa6CmFormat the given broken down time using the format string \xe2\x80\xa6CkFormat this broken down time using the format string given.CmPrint a floating point number into this buffer and return \xe2\x80\xa6Cn(DO NOT USE, SEE DEPRECATION) Freezes the contents of this \xe2\x80\xa6AlGet the name of the argumentAiGet the name of the group10BnGet the current <code>ColorChoice</code> stateCjSpecifies that an argument can be matched to all child \xe2\x80\xa601CcWhether this operation was applied greedily or not.ChWhether this repetition operator is greedy or not. A \xe2\x80\xa6CoThe names of <code>ArgGroup</code>\xe2\x80\x99s the argument belongs to.DiAdds multiple <code>ArgGroup</code>s to the <code>Command</code> at once.10ClThe grouping. The numbers in this array give the size of \xe2\x80\xa6Ah32-bit hashing machineryCeGeneral Heading style, e.g. <code>help_heading</code>0BlReturns the height of the <code>Rect</code>.0B`Apply <code>hidden</code> effect00CaA module for building and searching with lazy \xe2\x80\xa6CkToggle whether the hybrid NFA/DFA (also known as the \xe2\x80\x9c\xe2\x80\xa6ClStructure used in SIOCGIFCONF request.  Used to retrieve \xe2\x80\xa6CjAll logic for converting external representations into \xe2\x80\xa6BdImports an instance into the libraryCnImports a strip packing instance into the library. Imports \xe2\x80\xa6CnConfigures the amount of spaces to use to indent multiline \xe2\x80\xa6BeReturns the first offset of the pair.BfReturns the second offset of the pair.Ac<code>(A, B)</code>BgInserts the specified effects in-place.AiInsert a piece of context110CfInject arguments before the <code>RawArgs::next</code>CmOverwrites the underlying map\xe2\x80\x99s value with this entry\xe2\x80\x99\xe2\x80\xa6CgInserts this entry into to underlying map, yields a \xe2\x80\xa6BfInserts a key-value pair into the map.AhAdds a value to the set.1DhInserts an element at position <code>index</code> within the vector, \xe2\x80\xa6CiInsert the given pattern identifier into this set and \xe2\x80\xa6ClReturn a new set that is equivalent to the original, but \xe2\x80\xa60BfInserts a new element into the r-tree.5CmSets the value of the entry with the VacantEntry\xe2\x80\x99s key, \xe2\x80\xa6DgSets the value of the entry with the <code>OccupiedEntry</code>\xe2\x80\x99s \xe2\x80\xa6CkInserts a value into the slot map. Returns a unique key \xe2\x80\xa600DiInserts a value into the secondary map at the given <code>key</code>. \xe2\x80\xa6CnSets the value of the entry, and returns the entry\xe2\x80\x99s old \xe2\x80\xa6DjSets the value of the entry with the <code>VacantEntry</code>\xe2\x80\x99s key, \xe2\x80\xa6210DkInsert an element at position <code>index</code>, shifting all elements \xe2\x80\xa6CbInserts an element at position <code>index</code>.B`Apply <code>invert</code> effect00CjReturns true if this configuration indicates that some \xe2\x80\xa6BgTrue iff this is wound counterclockwiseCoReturns true when this value is equal to <code>Dst::Yes</code>.AcAny remaining args?EcReturns true when <code>Look::End</code> is satisfied <code>at</code> the given \xe2\x80\xa6ChReturns true if this error was caused by prematurely \xe2\x80\xa6ClReturns true when this unit represents an \xe2\x80\x9cend of input\xe2\x80\xa6DbReturns true if the <code>Value</code> is a number that can be \xe2\x80\xa6DbReturns true if the <code>Number</code> can be represented by f64.EfReturns true if the <code>Value</code> is an integer between <code>i64::MIN</code> \xe2\x80\xa6EgReturns true if the <code>Number</code> is an integer between <code>i64::MIN</code> \xe2\x80\xa6EhIf the number is <code>NaN</code> (not a number), then <code>true</code> is returned \xe2\x80\xa6BiChecks if the given complex number is NaNE`Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.BoReturns <code>true</code> if the number is NaN.10BoReturns <code>true</code> if the number is odd.EaReturns <code>true</code> if <code>self</code> is equal to the multiplicative \xe2\x80\xa6CnReturns true when this value is equal to <code>Dst::No</code>.DiReturns true if the <code>Value</code> is an integer between zero and \xe2\x80\xa6DjReturns true if the <code>Number</code> is an integer between zero and \xe2\x80\xa6B`Apply <code>italic</code> effect00ClCreate an iterator that merges elements of the contained \xe2\x80\xa6CkReturn an iterator adaptor that flattens an iterator of \xe2\x80\xa6BbLayouts which compose the solutionBkThe layout that was passed to the allocatorBgReturn the length of <code>axis</code>.CbThe natural logarithm of the Gamma function (f64).oLinear algebra.BnThe base 10 logarithm of <code>x</code> (f32).C`The natural logarithm of 1+<code>x</code> (f32).BbReturns a reference to the logger.ChReturn an iterator adaptor that applies the provided \xe2\x80\xa6DgGroups elements from the <code>GroupingMap</code> source by key and \xe2\x80\xa6CnComputes the maximum of all the items in the iterator with \xe2\x80\xa6ChThis library provides heavily optimized routines for \xe2\x80\xa6CeSearch for the first occurrence of a byte in a slice.DkProvides architecture independent implementations of <code>memchr</code>\xe2\x80\xa6CiThis module defines 128-bit vector implementations of \xe2\x80\xa6CiThis module defines 256-bit vector implementations of \xe2\x80\xa6CmThis module provides forward and reverse substring search \xe2\x80\xa6DiReturns the minimal envelope containing <code>self</code> and another \xe2\x80\xa68CnComputes the minimum of all the items in the iterator with \xe2\x80\xa6ChReturn the minimum and maximum elements in the iterator.:DgEquivalent to <code>minutes()</code>, but reads better for singular \xe2\x80\xa60CjReturns the \xe2\x80\x9cminute\xe2\x80\x9d component of this zoned datetime.BmSet the minute field on a <code>Zoned</code>.BhReturns the parsed minute, if available.CdReturns the \xe2\x80\x9cminute\xe2\x80\x9d component of this datetime.C`Set the minute field on a <code>DateTime</code>.C`Returns the \xe2\x80\x9cminute\xe2\x80\x9d component of this time.BlSet the minute field on a <code>Time</code>.CgCreate a new span from this integer in units of months.CkSet the number of months on this span. The value may be \xe2\x80\xa6CaReturns the needle that this finder searches for.0BjReturns a new span that negates this span.BdReturns the negation of this offset.BeNegate this character class in place.AlNegate this character class.AgNegate this byte class.AiCreate a new linked list.EhReturns a new span with <code>offset</code> added to this span\xe2\x80\x99s <code>start</code>\xe2\x80\xa6EhReturns a new match with <code>offset</code> added to its span\xe2\x80\x99s <code>start</code>\xe2\x80\xa6CiOffset by which to inflate or deflate the polygon. If \xe2\x80\xa6CdReturns the time zone offset of this zoned datetime.C`Set the offset to use in the new zoned datetime.BoReturns the offset in this <code>Pieces</code>.AkReturns the numeric offset.BhReturns the parsed offset, if available.DiCreates a new time zone offset in a <code>const</code> context from a \xe2\x80\xa6CnReturns the possibly ambiguous offset that is the ultimate \xe2\x80\xa60CfReturns the offset corresponding to this time zone \xe2\x80\xa6AcReturns the offset.ClThe offset from UTC for the corresponding civil datetime \xe2\x80\xa6<AjThe position of the match.BoThe offset at which the quit byte was observed.ClThe offset at which the search stopped. This corresponds \xe2\x80\xa6DiThe absolute offset of this position, starting at <code>0</code> from \xe2\x80\xa6BcParallel iterator types for optionsCnOrient a <code>Polygon</code>\xe2\x80\x99s exterior and interior rings.CeOrients a Polygon\xe2\x80\x99s exterior and interior rings \xe2\x80\xa6n<code>C</code>CnProvides packed multiple substring search, principally for \xe2\x80\xa6CkParse a proc-macro2 token stream into the chosen syntax \xe2\x80\xa60AhParse the argument value00Bi<code>Command</code> line argument parser0kThe parser.DjMake a parser that is usable with <code>parse_macro_input!</code> in a \xe2\x80\xa6CkAn NFA backed Pike VM for executing regex searches with \xe2\x80\xa6DkReturn an iterator yielding the coordinates of a <code>LineString</code>\xe2\x80\xa60CmReturns the literal prefix that indicates this base, i.e. \xe2\x80\xa6BcReturns the span of a prefix of \xe2\x80\xa6BkCreates a new JSON pretty print serializer.CiGenerate a random value using the thread-local random \xe2\x80\xa6DhReturn a random value via the <code>StandardUniform</code> distribution.0BhReturn the underlying ranges as a slice.0DbCreate a one-dimensional array with elements from <code>xs</code>.DbCreate a two-dimensional array with elements from <code>xs</code>.DdCreate a three-dimensional array with elements from <code>xs</code>.DlReturn an iterator inside a <code>Rc&lt;RefCell&lt;_&gt;&gt;</code> wrapper.AcThe boxed iterator.CgReturns a reference to the most recently written value.DjReturn either value of left, right, or apply a function <code>f</code> \xe2\x80\xa6DgGroups elements from the <code>GroupingMap</code> source by key and \xe2\x80\xa6DjReduces the items in the iterator into one item using <code>op</code>. \xe2\x80\xa6CkReduce two final results into one; this is executed after aBeRelate two geometries based on DE-9IMBgRemoves the specified effects in-place.CfRemove a piece of context, return the old value if any110CdRemoves this entry from the map and yields its valueB`Same as <code>swap_remove</code>DhRemoves a value from the set. Returns <code>true</code> if the value \xe2\x80\xa6CnRemoves a key from the map, returning the value at the key \xe2\x80\xa6DiRemoves and returns the element at position <code>index</code> within \xe2\x80\xa6ClReturn a new set that is equivalent to the original, but \xe2\x80\xa60DkRemoves and returns an element of the r-tree equal (<code>==</code>) to \xe2\x80\xa63ClTakes the value of the entry out of the map, and returns \xe2\x80\xa6CkRemoves a key from the slot map, returning the value at \xe2\x80\xa600CmRemoves a key from the secondary map, returning the value \xe2\x80\xa6CaTakes the value out of the entry, and returns it.10DjRemove and return the element at position <code>index</code>, shifting \xe2\x80\xa6AdRender the ANSI code00CeRender the error message to a <code>StyledStr</code>.1111110DkCreates a parallel iterator that endlessly repeats <code>element</code> \xe2\x80\xa6B`Immediately reseed the generator0CiResizes the Vec in-place so that len is equal to new_len.DcResizes the vector so that its length is equal to <code>len</code>.BcParallel iterator types for resultsCeRetains only the elements specified by the predicate.0000000CeThis is a direct transcript of the sourcecode and \xe2\x80\xa6ClRotate a <code>Geometry</code> by an angle given in degrees.Df<strong>Create</strong> an affine transform for rotation, using an \xe2\x80\xa6BhApplies a rotation to <code>self</code>.DhRound <code>x</code> to the nearest integer, breaking ties away from \xe2\x80\xa6CjReturns a reference to the original reader-writer lock \xe2\x80\xa600ClA lock that provides data access to either one writer or \xe2\x80\xa6BoSamples a transformation from the distribution.CaSample a new value, using the given distribution.0EfGenerate a random value of <code>T</code>, using <code>rng</code> as the source of \xe2\x80\xa6oSample a value.CeSample from distribution, Lemire\xe2\x80\x99s method, unbiased000000000DeRandomly sample exactly <code>amount</code> distinct indices from \xe2\x80\xa6321111111111Dk<strong>Add</strong> an affine transform for scaling, scaled by factors \xe2\x80\xa6CmSearch the layout (i.e. CDE) for a valid placement of the \xe2\x80\xa6CnReturns the start and end offset of the leftmost match. If \xe2\x80\xa6CnExecutes a leftmost forward search and writes the spans of \xe2\x80\xa6DgEquivalent to <code>seconds()</code>, but reads better for singular \xe2\x80\xa60CjReturns the \xe2\x80\x9csecond\xe2\x80\x9d component of this zoned datetime.BmSet the second field on a <code>Zoned</code>.BhReturns the parsed second, if available.CdReturns the \xe2\x80\x9csecond\xe2\x80\x9d component of this datetime.C`Set the second field on a <code>DateTime</code>.C`Returns the \xe2\x80\x9csecond\xe2\x80\x9d component of this time.BlSet the second field on a <code>Time</code>.DgAlong <code>axis</code>, select arbitrary subviews corresponding to \xe2\x80\xa6CgReturns a mpsc::Sender logger using a custom separator.CkReturn an iterator of periodic timestamps determined by \xe2\x80\xa6CjReturn an iterator of periodic dates determined by the \xe2\x80\xa6CnReturn an iterator of periodic datetimes determined by the \xe2\x80\xa6CjReturn an iterator of periodic times determined by the \xe2\x80\xa6CiApply best effort heuristics to shrink the NFA at the \xe2\x80\xa6CkReturns a number that represents the sign of this duration.CkReturns the \xe2\x80\x9csign number\xe2\x80\x9d or \xe2\x80\x9csignum\xe2\x80\x9d of this span.BcReturns the sign of this timestamp.CiReturns the \xe2\x80\x9csign number\xe2\x80\x9d or \xe2\x80\x9csignum\xe2\x80\x9d of this \xe2\x80\xa6AlSign number of each element.CoReturns a number that represents the sign of <code>self</code>.0AoReturns the sign of the number.0111CaBoth the sine and cosine of <code>x</code> (f64).Ce<strong>Add</strong> an affine transform for skewing.AmBacks off in a blocking loop.CeSort all iterator elements into a new iterator in \xe2\x80\xa60DgReturns an iterator of at most <code>limit</code> substrings of the \xe2\x80\xa60DkReturns an iterator of at most <code>limit</code> spans of the haystack \xe2\x80\xa6BjReturns a slice of all states in this NFA.BlCreate an ANSI escape code compatible stderrCbReturns an stderr logger using a custom separator.BlCreate an ANSI escape code compatible stdoutCbReturns an stdout logger using a custom separator.CaHigher-level traits to describe writeable streamsDhReturns the <code>TokenStream</code> of tokens that are delimited in \xe2\x80\xa6BoStride in count of elements of the current axisCnReturns the total stride for every state in this DFA. This \xe2\x80\xa6Bn<code>String</code> parser for argument values0oString literal.CnThis module contains the parallel iterator types for owned \xe2\x80\xa6CiAccepts a replacement string and interpolates capture \xe2\x80\xa6CbThis library implements string similarity metrics.AhDefault terminal styling0C`Sets the <code>Styles</code> for terminal output0BbConfigures the end of line suffix.DkThe optional suffix. Returns <code>&quot;&quot;</code> if the suffix is \xe2\x80\xa6000EoReturns the suffix for this type, e.g. <code>&quot;f32&quot;</code> for <code>Self::F32</code>.1EmReturns the suffix for this type, e.g. <code>&quot;u8&quot;</code> for <code>Self::U8</code>.2EcReturns the suffix of this literal or <code>&quot;&quot;</code> if it doesn\xe2\x80\x99t \xe2\x80\xa6CnConfigure the syntax options when parsing a pattern string \xe2\x80\xa6CgSet the syntax configuration for this builder using \xe2\x80\xa600000CfUtilities for dealing with the syntax of a regular \xe2\x80\xa6CfReturns the system configured time zone, if available.BcSets the target for the log output.CiWhether or not to write the target in the default format.BhThe name of the target of the directive.BaSet <code>Metadata::target</code>1AoSetter for <code>target</code>.AiThe Gamma function (f64).CaThreads that can borrow variables from the stack.BjReturns a handle to the underlying thread.EhConverts the value of <code>self</code> to an <code>f32</code>. Overflows may map to \xe2\x80\xa6EhConverts the value of <code>self</code> to an <code>f64</code>. Overflows may map to \xe2\x80\xa6EgConverts the value of <code>self</code> to an <code>i16</code>. If the value cannot \xe2\x80\xa6EgConverts the value of <code>self</code> to an <code>i32</code>. If the value cannot \xe2\x80\xa6EgConverts the value of <code>self</code> to an <code>i64</code>. If the value cannot \xe2\x80\xa6EeConverts the value of <code>self</code> to a <code>u16</code>. If the value cannot beEeConverts the value of <code>self</code> to a <code>u32</code>. If the value cannot beEeConverts the value of <code>self</code> to a <code>u64</code>. If the value cannot beCmReturn an vector with the elements of the one-dimensional \xe2\x80\xa6CiSerialize the given data structure as a JSON byte vector.0AkTrait this impl implements.DfTraits helpful for using certain <code>Itertools</code> methods in \xe2\x80\xa6ClRounds the number toward 0 to the closest integral value \xe2\x80\xa6CkReturn an iterator that groups the items in tuples of a \xe2\x80\xa6CnAn implementation of the Two-Way substring search algorithm\xe2\x80\xa6CmCreates a new unfold source with the specified closure as \xe2\x80\xa6CbCalled when a device control string is terminated.DfCreate an array with uninitialized elements, shape <code>shape</code>.CmReturn an iterator adaptor that filters out elements that \xe2\x80\xa6AcUnlocks this mutex.CnUnlocks this mutex. The inner mutex may not be unlocked if \xe2\x80\xa6fSafetyCjAtomically makes the token available if it is not already.DhConvert <code>proc_macro2::Span</code> to <code>proc_macro::Span</code>.CkReturn an iterator adaptor that applies a mutating functionAoUpdates the weight at an index.CfMutates each item of this iterator before yielding it.CmUpdates the inner <code>T</code> by calling a function on it.CkReturn an iterator over the values of the map, in their \xe2\x80\xa6CbAn iterator visiting all values in arbitrary orderBlGets an iterator over the values of the map.CkAn iterator visiting all values in arbitrary order. The \xe2\x80\xa60000CdReturns the weight at the given index, if it exists.0EbDetermine whether <code>Geometry</code> <code>A</code> is completely within by \xe2\x80\xa6ClReturns a logger using arbitrary write object and custom \xe2\x80\xa6CeVector algorithms for the <code>x86_64</code> target.DnZips two iterators but <strong>panics</strong> if they are not of the same \xe2\x80\xa6ClCreate an iterator which iterates over both this and the \xe2\x80\xa6DkThe same as <code>Zip</code>, but requires that both iterators have the \xe2\x80\xa6ChThe requisite parameters for testing for approximate \xe2\x80\xa6E`A hack to align a smaller type <code>B</code> with a bigger type <code>T</code>.B`An <code>animate</code> element.ganimateAi256 (8-bit) color support00AgMatches any byte value.CgMatches the UTF-8 encoding of any Unicode scalar value.AbAny existing path.00BfArgument conversion into an array viewAa<code>{m,}</code>ClProvides methods to compute the average of two integers, \xe2\x80\xa6BkPerforms exponential backoff in spin loops.CkA primitive that synchronizes the execution of multiple \xe2\x80\xa60C`Ops that are independent of word size and endianE`A bool literal: <code>true</code> or <code>false</code>. Also see the reference.BiNumbers which have upper and lower boundsAb<code>{m,n}</code>Ad<code>[ ... ]</code>Ao<code>[</code>\xe2\x80\xa6<code>]</code>CgA builder for constructing a packed searcher from a \xe2\x80\xa6BnA builder for configuring an Aho-Corasick DFA.CiA builder for configuring an Aho-Corasick contiguous NFA.CkA builder for configuring an Aho-Corasick noncontiguous \xe2\x80\xa6AkA builder for a log filter.Dl<code>Builder</code> acts as builder for initializing a <code>Logger</code>.D`A builder for configuring and constructing a <code>Regex</code>.CjA builder for constructing a lazy deterministic finite \xe2\x80\xa6C`A builder for a regex based on a hybrid NFA/DFA.AmA builder for a one-pass DFA.CbAn abstraction for building Thompson NFAs by hand.BdA builder for a <code>PikeVM</code>.BdA builder for a bounded backtracker.GgThis is <code>Cow&lt;&#39;static, [u8]&gt;</code> for <code>String</code>, and <code>Cow&lt;&#39;a, [u8]&gt;</code> \xe2\x80\xa6EeA (single) byte literal, e.g. <code>b&#39;k&#39;</code> or <code>b&#39;!&#39;</code>.CeA byte string literal: <code>b&quot;foo&quot;</code>.BoAn empty state that records a capture location.CnThe high-level intermediate representation for a capturing \xe2\x80\xa6CcA capturing group, which contains a sub-expression.o<code>^=</code>EbA character literal, e.g. <code>&#39;g&#39;</code> or <code>&#39;\xf0\x9f\xa6\x8a&#39;</code>.Dd<code>ChunkBy</code> is the storage for the lazy grouping operation.ClParallel iterator over slice in (non-overlapping) chunks \xe2\x80\xa6CnThe result of trying to find the closest spot on an object \xe2\x80\xa6C`A closure expression: <code>|a, b| a + b</code>.AoBuild a command-line interface.00AnA command of a data attribute.CjA comment from a regular expression with an associated \xe2\x80\xa6oA comment node.jA comment.CmThis writes out the shortest possible label for each unit \xe2\x80\xa6BcA complex number in Cartesian form.DaProvides the <code>context</code> method for <code>Result</code>.CmConvert (infalliby) the type of a geometry\xe2\x80\x99s coordinate \xe2\x80\xa6AlCowArray\xe2\x80\x99s representation.CnSets the offset to the current position plus the specified \xe2\x80\xa6AkArray representation trait.CiAn iterator adaptor that removes repeated duplicates, \xe2\x80\xa6Ciexterior ring is oriented counter-clockwise, interior \xe2\x80\xa6AmReturn type is not specified.Ad<code>default</code>CmModify the shape to be strictly smaller than the original \xe2\x80\xa6CmReturn a new linear geometry containing both existing and \xe2\x80\xa6AdPath to a directory.00DeA \xe2\x80\x9clazy\xe2\x80\x9d implementation of <code>std::fmt::Display</code> for \xe2\x80\xa6BdThe earlier time is always selected.AeA set of text effects00kAn element.B`An <code>ellipse</code> element.gellipseCmMatch the end of a line or the end of text. Specifically, \xe2\x80\xa60n<code>$</code>o<code>\\z</code>BiUsed for specifying relative comparisons.A`<code>{m}</code>CiA <code>let</code> guard: <code>let Some(x) = opt</code>.EbA literal in place of an expression: <code>1</code>, <code>&quot;foo&quot;</code>.BeA try-expression: <code>expr?</code>.C`External representation of an <code>Item</code>.AbItem with a demand0CcComes from <code>SortedLinkedList::find_mut</code>.BoThe Fisher F-distribution <code>F(m, n)</code>.Dg<code>FlatMap</code> maps each element to a parallel iterator, then \xe2\x80\xa6Dh<code>Flatten</code> turns each element to a parallel iterator, then \xe2\x80\xa6CaA for loop: <code>for pat in expr { ... }</code>.ClThe Fr\xc3\xa9chet distribution <code>Fr\xc3\xa9chet(\xce\xb1, \xce\xbc, \xcf\x83)</code>.AiSee <code>ChunkBy</code>.D`The underlying kind of an arbitrary <code>Hir</code> expression.ClIterate over indices for where an argument appeared when \xe2\x80\xa60AnIndices producer and iterable.ClModify the shape to be strictly larger than the original \xe2\x80\xa6Dd<code>Inspect</code> is an iterator that calls a function with a \xe2\x80\xa6DlExport the <code>web_time</code> crate\xe2\x80\x99s <code>Instant</code> type for \xe2\x80\xa6CbInstant type used for <code>try_lock_until</code>.0CiA measurement of a monotonically nondecreasing clock. \xe2\x80\xa6DaAn integer that can be written into an <code>itoa::Buffer</code>.EaA module or module declaration: <code>mod m</code> or <code>mod m { ... }</code>.CnA use declaration: <code>use std::collections::HashMap</code>.BlA mutable iterator over the items of a queueCdAn iterator over the elements of an array (mutable).DiA parallel iterator over a mutable reference to the <code>Some</code> \xe2\x80\xa6CfParallel iterator over a mutable reference to a resultBoParallel iterator over mutable items in a sliceCjParallel iterator over a mutable reference to a B-Tree mapChParallel iterator over a mutable reference to a hash mapCkParallel iterator over a mutable reference to a linked listCcParallel iterator over a mutable reference to a \xe2\x80\xa6CfA mutable iterator over a serde_json::Map\xe2\x80\x99s entries.DfA mutable iterator over the key-value pairs in a <code>SlotMap</code>.CdA mutable iterator over the key-value pairs in a \xe2\x80\xa6DkA mutable iterator over the key-value pairs in a <code>HopSlotMap</code>\xe2\x80\xa611DiAn iterator over mutably borrowed values of type <code>&amp;mut T</code>.CmAn iterator that infinitely applies function to value and \xe2\x80\xa6BmThe actual data stored in a <code>Key</code>.CnThe loss LBF assigned to a placing option. Weighted sum of \xe2\x80\xa6AoReturn <code>log10(2.0)</code>.AmReturn <code>log10(e)</code>.AoReturn <code>log2(10.0)</code>.CkA boolean literal: <code>true</code> or <code>false</code>.BjA byte literal: <code>b&#39;f&#39;</code>.DaA nul-terminated C-string literal: <code>c&quot;foo&quot;</code>.BnA character literal: <code>&#39;a&#39;</code>.CaA literal. This is the main type of this library.FeA literal string (<code>&quot;hello&quot;</code>), byte string (<code>b&quot;hello&quot;</code>), \xe2\x80\xa6GgA literal character (<code>&#39;a&#39;</code>), string (<code>&quot;hello&quot;</code>), number (<code>2.3</code>), \xe2\x80\xa6AlA single literal expression.CeA single character literal, which includes escape \xe2\x80\xa6AaA single literal.ChThe high-level intermediate representation of a literal.CaA literalstring that matches exactly these bytes.CoA single literal extracted from an <code>Hir</code> expression.CdLookSet is a memory-efficient set of look-around \xe2\x80\xa6B`A set of look-around assertions.DoMagenta: #5 (foreground code <code>35</code>, background code <code>45</code>).00Dj<code>MapInit</code> is an iterator that transforms the elements of an \xe2\x80\xa6DeAn iterator adapter to apply <code>Into</code> conversion to each \xe2\x80\xa6Dj<code>MapWith</code> is an iterator that transforms the elements of an \xe2\x80\xa6CfParallel iterator over substrings that match a patternCkAn iterator over all non-overlapping matches in a haystack.0CmAn iterator over all occurrences of two possible bytes in \xe2\x80\xa6ClAn iterator over all occurrences of three possible bytes \xe2\x80\xa6CmAn iterator adaptor that merges the two base iterators in \xe2\x80\xa6o<code>-=</code>DcFloating-point element types <code>f32</code> and <code>f64</code>.CkTuple or fixed size arrays that can be used to index an \xe2\x80\xa6CeToken to represent a new axis in a slice description.AgA new axis of length 1.CjAn empty syntax tree node that consumes no tokens when \xe2\x80\xa6CaAn interface for casting between machine scalars.CkA specific numeric offset, including whether the parsed \xe2\x80\xa6CjAn iterator over all occurrences of a single byte in a \xe2\x80\xa600B`Error type of <code>OsRng</code>AdI am an IDLE thread.AdI\xe2\x80\x99m a virtual CPU.C`The hazard is only partially present in the nodeDjA path like <code>std::mem::replace</code> possibly containing generic \xe2\x80\xa6CnThe dots in a tuple or slice pattern: <code>[0, 1, ..]</code>.CaA type ascription pattern: <code>foo: f64</code>.CaA pattern that matches any value: <code>_</code>.o<code>::</code>CfPattern matching friendly form of the dimension value.CmRun an anchored search for a specific pattern. This means \xe2\x80\xa6AoA <code>pattern</code> element.gpatternCjStructure wrapping a mutable reference to the greatest \xe2\x80\xa6CaSee <code>peek_nth()</code> for more information.n<code>%</code>CePerforms actions requested by the <code>Parser</code>DfA trait for either <code>Owned</code> or <code>Shared</code> pointers.CbThe Poisson distribution <code>Poisson(\xce\xbb)</code>.AoA bounded two-dimensional area.0CgPolygon with a single outer boundary and a set of holesAoA <code>polygon</code> element.gpolygonBeGeneric trait for primitive integers.ChA printer for a regular expression abstract syntax tree.CeA printer for a regular expression\xe2\x80\x99s high-level \xe2\x80\xa6ChAn iterator adaptor that iterates over the cartesian \xe2\x80\xa6CnAn iterator adaptor that allows putting back a single item \xe2\x80\xa6CnParallel iterator over immutable non-overlapping chunks of \xe2\x80\xa6EkAddress-of operation: <code>&amp;raw const place</code> or <code>&amp;raw mut place</code>.AfCommand-line argumentsAkArray representation trait.DhThe reducer is the final step of a <code>Consumer</code> \xe2\x80\x93 after a \xe2\x80\xa6ClThe type of reducer that is produced if this consumer is \xe2\x80\xa6CoAn iterator that produces <em>n</em> repetitions of an element.CjIterator adaptor for the <code>repeat_n()</code> function.CmResults type. This is the \xe2\x80\x98block\xe2\x80\x99 an RNG implementing \xe2\x80\xa6BgImplementation-level interface for RNGs0DnThe <code>UniformSampler</code> implementation supporting type <code>X</code>.0BhFull second precision (0 decimal digits)EdWhen encountered, act as if <code>&quot;true&quot;</code> was encountered on the \xe2\x80\xa600DkThe total number of elements that were in <code>J</code> along with the \xe2\x80\xa6Ed<code>SkipAny</code> is an iterator that skips over <code>n</code> elements from \xe2\x80\xa6o<code>/=</code>BjSlot map, storage with stable unique keys.0BfNext smaller dimension (if applicable)BaAn escaped solidus <code>/</code>CdConfiguration for <code>SpanPrinter::spacing</code>.EfWhether a <code>Punct</code> is followed immediately by another <code>Punct</code> \xe2\x80\xa6DkA trait that can provide the <code>Span</code> of the complete contents \xe2\x80\xa6ClThe literal is written as a specially recognized escape, \xe2\x80\xa6AoTypes that can be split in two.CkMatch the beginning of a line or the beginning of text. \xe2\x80\xa60BkThe identifier of a finite automaton state.CnThe identifier of a finite automaton state, represented by \xe2\x80\xa6BcA stealer handle of a worker queue.CaA mock generator yielding very predictable outputCaJSON input source that reads from a UTF-8 string.kMany values0BjAt least one task was successfully stolen.Eg<code>TakeAny</code> is an iterator that iterates over <code>n</code> elements from \xe2\x80\xa6Dg<code>TryFold</code> is an iterator that applies a function over an \xe2\x80\xa6CmAn iterator over all occurrences of two possible bytes in \xe2\x80\xa600DaA raw pointer type: <code>*const T</code> or <code>*mut T</code>.BeA type with no alignment requirement.DlA Unicode character class, e.g., <code>\\pL</code> or <code>\\p{Greek}</code>.n<code>u</code>CiA set of characters represented by Unicode scalar values.BkSample values uniformly between two bounds.000CiDefault value if hint is not specified. Follows shell \xe2\x80\xa600CmUnnamed fields of a tuple struct or tuple variant such as \xe2\x80\xa6BjAn unnamed field like <code>self.0</code>.Ad<code>unsized</code>CiA glob import in a <code>use</code> item: <code>*</code>.DhAn identifier imported by a <code>use</code> item: <code>HashMap</code>.DkA path prefix of imports in a <code>use</code> item: <code>std::...</code>.EgA suffix of an import tree in a <code>use</code> item: <code>Type as Renamed</code> \xe2\x80\xa6DiThe <code>Visitor</code> that will be used to deserialize the content \xe2\x80\xa6A`An enum variant.CkVec4 functions which may not be implemented yet for all \xe2\x80\xa6CkThis writes out the full word of each unit designation. \xe2\x80\xa6CgWhen encountered, display <code>Command::version</code>00Ad<code>virtual</code>CiA trait for visiting an abstract syntax tree (AST) in \xe2\x80\xa6CiA trait for visiting the high-level IR (HIR) in depth \xe2\x80\xa6ChThis trait represents a visitor that walks through a \xe2\x80\xa6BiA representation for the day of the week.CeThe Weibull distribution <code>Weibull(\xce\xbb, k)</code>.DiDetermine and operate on how a <code>LineString</code> is wound. This \xe2\x80\xa6BeClockwise or CounterClockwise windingAlWindow producer and iterableCmParallel iterator over immutable overlapping windows of a \xe2\x80\xa6CiThe positive difference between given number and each \xe2\x80\xa6BgThe positive difference of two numbers.0000B`Gracefully degrade styled outputAhAdvance the parser stateCiReturn the next match for an infallible search if one \xe2\x80\xa6AbAdvance the parserCaAdd aliases, which function as hidden long flags.C`Sets multiple hidden aliases to this subcommand.CnSets multiple <em>hidden</em> aliases for this argument value.210AaANSI Text StylingDhIf the <code>Value</code> is a Boolean, returns the associated bool. \xe2\x80\xa6DeReturns the value of this punctuation character as <code>char</code>.CkReturns a convenient single codepoint representation of \xe2\x80\xa60DeIf the <code>Number</code> is an integer, represent it as i128 if \xe2\x80\xa6CeReturns the number of whole minutes in this duration.DhIf the <code>Value</code> is a Null, returns (). Returns None otherwise.ClReturn the underlying representation of this look-around \xe2\x80\xa60CeReturns the number of whole seconds in this duration.DbReturns the number of <em>whole</em> seconds contained by this \xe2\x80\xa6DeIf the <code>Number</code> is an integer, represent it as u128 if \xe2\x80\xa6CjSynchronization primitive allowing multiple threads to \xe2\x80\xa6D`Calculate the bearing to another <code>Point</code>, in degrees.CjReturns the bearing to another Point in degrees, where \xe2\x80\xa6CiA convenience method for returning a new Aho-Corasick \xe2\x80\xa6ChCreate a packed builder from this configuration. The \xe2\x80\xa6CoA convenience function for calling <code>Builder::new()</code>.CmA convenience method for returning a new Aho-Corasick DFA \xe2\x80\xa633BjDefine <code>Command</code> line arguments0ChCreates a builder that can configure a thread before \xe2\x80\xa6CeCreate a new builder with the default environment \xe2\x80\xa6AfReturns a new builder.0CjReturn a builder for configuring the construction of a \xe2\x80\xa600CkReturn a builder for configuring the construction of a DFA.11CmReturns a time zone database initialized from the bundled \xe2\x80\xa6BaCreates a capture HIR expression.DgGroups elements from the <code>GroupingMap</code> source by key and \xe2\x80\xa6CjCreates a fresh collection containing all the elements \xe2\x80\xa6CjReturn a producer and iterable that traverses over the \xe2\x80\xa6CdAdd another error message to self such that when \xe2\x80\xa6DdBuild a <code>Command</code> that can instantiate <code>Self</code>.CgRequires <code>cargo</code> feature flag to be enabled.10CgThe comment text, starting with the first character \xe2\x80\xa6CnCompares two spans in terms of how long they are. Negative \xe2\x80\xa6CgCreate a new affine transformation by composing two \xe2\x80\xa6CiConsumes the PolygonArea and returns the following tuple:CbConsume next item and return new sequential state.BmWrap the error value with additional context.0CcAdditional information to further qualify the errorDdHighlight all specified contexts, e.g. <code>[default: false]</code>01CdConvert the type of a geometry\xe2\x80\x99s coordinate value.DgReturns the four corners of <code>self</code>, in the same order as \xe2\x80\xa6CmThe value in the atomic pointer at the time of the failed \xe2\x80\xa60CmReturns a logger configuration that does nothing with log \xe2\x80\xa6CmCreate an array with default values, shape <code>shape</code>DkCreates a new lazy value using <code>Default</code> as the initializing \xe2\x80\xa6BbDensify linear geometry componentsCmThe current density of the layout defined as the ratio of \xe2\x80\xa6BjEquivalent to <code>Layout::density</code>B`Some statistics about the layoutClSum of the area of the produced items divided by the sum \xe2\x80\xa60DkReturns the item in the front of the queue, or <code>None</code> if the \xe2\x80\xa600CjSafely print an argument that may contain non-UTF8 contentCmReturns the result of dividing this duration by the given \xe2\x80\xa6CbDivides <code>Duration</code> by <code>f32</code>.1CbDivides <code>Duration</code> by <code>f64</code>.BiSimultaneous integer division and modulusChSimultaneous truncated integer division and modulus. \xe2\x80\xa6CdDeprecated, use <code>is_multiple_of</code> instead.CmWhether the hazard is dynamic, meaning it can change over \xe2\x80\xa6CaDisambiguates this timestamp according to the \xe2\x80\xa6CfDisambiguates this zoned datetime according to the \xe2\x80\xa6A`Set text effects00CfReturns the amount of time elapsed since this instant.CgReturns the difference from this system time to the \xe2\x80\xa6AbThe element nodes.CkDetermines if a log message with the specified metadata \xe2\x80\xa600CaAdds an <code>item</code> to the end of the queue0EhAdds an <code>item</code> to the end of the queue, returns back the <code>item</code>\xe2\x80\xa6CaReplace the epsilon value with the one specified.00CkThe tolerance to use when testing values that are close \xe2\x80\xa600BeSet the epsilon value for this marginBhReturns epsilon, a small positive value.0000BdExecute a C0 or C1 control function.CkThis is a convenience routine for extracting the substrings00ChExecute the extractor and return a sequence of literals.BlThe ordering of the operation when it fails.DjReturns the same as <code>Regex::find</code>, but starts the search at \xe2\x80\xa60CnReturn the first occurrence of any of the patterns in this \xe2\x80\xa6CnExecute a search in the haystack within the span given. If \xe2\x80\xa6BmFlatten the array to a one-dimensional array.DjAn adaptor that flattens parallel-iterable <code>Item</code>s into one \xe2\x80\xa6CaFold <code>Result</code> values from an iterator.CjReturn the underlying lazy DFA responsible for forward \xe2\x80\xa6BhReturn a reference to the forward cache.ChConvert an integer from big endian to the target\xe2\x80\x99s \xe2\x80\xa6DiConverts an <code>i8</code> to return an optional value of this type. \xe2\x80\xa6CkConvert an integer from little endian to the target\xe2\x80\x99s \xe2\x80\xa6DiConverts an <code>u8</code> to return an optional value of this type. \xe2\x80\xa6DcCreate a new \xe2\x80\x9cgave up\xe2\x80\x9d error. The given <code>offset</code> \xe2\x80\xa6CkCalculates the Greatest Common Divisor (GCD) and Lowest \xe2\x80\xa6ClGreatest Common Divisor (GCD) and Lowest Common Multiple \xe2\x80\xa6CkReturns whether the DFA regex engine may be used, as set byCcReturns a mutable reference to the underlying data.CnGets a mutable reference to the value associated with this \xe2\x80\xa6CmReturns a mutable reference to the value corresponding to \xe2\x80\xa60222DgReturn a mutable reference to the element at <code>index</code>, or \xe2\x80\xa61CcGets a mutable reference to the value in the entry.CnMutably index into a JSON array or map. A string index can \xe2\x80\xa6333313155DkReturns a mutable reference to the inner value if the <code>Once</code> \xe2\x80\xa66BoMutably borrows the element at the given index.BjReturns a reference to the underlying NFA.000CkGets the value of a specific option or positional argument.0DhReturn a raw pointer to the element at <code>index</code>, or return \xe2\x80\xa6CjGets an unaligned raw pointer to the inner <code>T</code>.BjIterate over the original argument values.0CcReturns a tuple wihch has values of each component.CiCalculates the number of positions in the two strings \xe2\x80\xa6AiEverything Hazard relatedAnReturns all hazards in the CDEAoThe hazards present in the nodenSize of bufferBnReturns the number of axes in the input array.CkReturns the number of dimensions of the input array for \xe2\x80\xa6EeCreate a new <code>Zip</code> with an index producer and the producer <code>p</code>.CiCreate an iterable of the array shape <code>shape</code>.CiReturns a new inexact literal containing the bytes given.DgApplies <code>inspect_op</code> to a reference to each item of this \xe2\x80\xa6DhExecutes <code>op</code> within the thread pool. Any attempts to use \xe2\x80\xa60AgHighlight invalid usage0CdSee the documentation for the InverseGeodesic trait.0000000DkGenerates the transformation that undoes the effect of <code>self</code>\xe2\x80\xa6CkIf <code>Both</code>, return true. Otherwise, return false.CiReturns true if and only of this unit is a byte value \xe2\x80\xa6ClReturns true if this error was caused by input data that \xe2\x80\xa6CeReturns true if the given ID represents a dead state.CnReturn true if and only if this represents a dead state. A \xe2\x80\xa6CjReturn true if this input has been exhausted, which in \xe2\x80\xa6ElReturn true if <code>self</code> is <code>Done</code>, false if it is <code>Continue</code>.DfReturn true if it is <code>Done</code>, false if <code>Continue</code>CkReturn true if and only if this search can never return \xe2\x80\xa6C`Returns <code>true</code> if the number is even.CjImplementations might return true here if they believe \xe2\x80\xa6BnReturns whether the deque is full (i.e. if \xe2\x80\xa6AoReturns true if the vec is fullBbChecks if the linked list is full.BnReturns <code>true</code> if the queue is fullCnReturn true if and only if this set has the maximum number \xe2\x80\xa6CjReturn true if the value is the <code>Left</code> variant.0DiIf <code>Left</code>, return true. Otherwise, return false. Exclusive \xe2\x80\xa61B`Checks if the variant is a line.AhCan treat as a long-flagChReturns true if this configuration indicates that no \xe2\x80\xa6CaReturns <code>true</code> if the pointer is null.DcReturns true if the <code>Value</code> is a Null. Returns false \xe2\x80\xa6CmChecks if a key is null. There is only a single null key, \xe2\x80\xa6CnReturn true if and only if this represents a quit state. A \xe2\x80\xa6CjSets whether or not the logger will be used in unit tests.CbWhether UTF-8 mode is enabled for this NFA or not.CnReturns true if and only if this character class will only \xe2\x80\xa6CiReturn true if and only if the corresponding HIR will \xe2\x80\xa6DgReturns <code>true</code> iff the array is the view (borrowed) variant.0DhReturns <code>true</code> iff the data is the <code>View</code> variant.BlReturns true if this duration spans no time.CkReturns true if and only if every field in this span is \xe2\x80\xa6CmReturns true if and only if this timestamp corresponds to \xe2\x80\xa6C`Returns true if and only if this offset is zero.EaReturns <code>true</code> if <code>self</code> is equal to the additive identity.CiReturns true if this <code>Duration</code> spans no time.CcID of the type of <code>Item</code> that was placedBbThe id of the item in the instanceBlThe id of the <code>Item</code> to be placedCnCreates a new iterator that infinitely applies function to \xe2\x80\xa6BeKernels to compute various predicatesDkReturns the L1 norm <code>|re| + |im|</code> \xe2\x80\x93 the Manhattan distance \xe2\x80\xa6CcSet the largest units allowed in the span returned.00000BbLayouts which compose the solutionB`Return left value or given value00AjEnable lenient formatting.CbThe natural logarithm of the Gamma function (f32).CbAdd a relative <code>Command::Line</code> command.CcAdd an absolute <code>Command::Line</code> command.CeLiteral command-line syntax, e.g. <code>--help</code>0B`Create a \xe2\x80\x9cliteral\xe2\x80\x9d AST item.CnProvides literal extraction from <code>Hir</code> expressions.BaCreates a literal HIR expression.ClIf this class consists of exactly one element (whether a \xe2\x80\xa6CiIf this class consists of exactly one codepoint, then \xe2\x80\xa6CnIf this class consists of exactly one byte, then return it \xe2\x80\xa6DhIf the cursor is pointing at a <code>Literal</code>, return it along \xe2\x80\xa6DiFraction of <code>n_samples_per_item</code> used for the local search \xe2\x80\xa6FhApply the functions <code>f</code> and <code>g</code> on the value <code>a</code> and <code>b</code> \xe2\x80\xa6DkCall <code>f</code> on a mutable reference of each element and create a \xe2\x80\xa6CkMaps the source value associated with the conversion error.00000000BmWhether the regex at the given index matched.0CcTests if the value is valid for this argument value0CdChecks if this record matches the configured filter.0CfReturns the set of regexes that match in the given \xe2\x80\xa60CkThis follows the matching transition for a particular byte.0EgReturns true if the position <code>at</code> in <code>haystack</code> falls in this \xe2\x80\xa6CiCreate new storage for only the full match spans of a \xe2\x80\xa6EeReturns true when the position <code>at</code> in <code>haystack</code> satisfies \xe2\x80\xa6DkReturns true if and only if a prefix of <code>bytes</code> matches this \xe2\x80\xa6CiReturns true if and only if the given byte is in this \xe2\x80\xa6CdThe maximum number of items that we will process \xe2\x80\xa6BkReturn all maximum elements of an iterator.CmGet an iterator over the fields of a struct or variant as \xe2\x80\xa6CnSearch for the first occurrence of two possible bytes in a \xe2\x80\xa6CnSearch for the first occurrence of three possible bytes in \xe2\x80\xa6CdSearch for the last occurrence of a byte in a slice.CdThe minimum number of items that we will process \xe2\x80\xa6BkReturn all minimum elements of an iterator.ChCreate a new span from this integer in units of minutes.ClSet the number of minutes on this span. The value may be \xe2\x80\xa6CbAdd a relative <code>Command::Move</code> command.CcAdd an absolute <code>Command::Move</code> command.DjFused multiply-add. Computes <code>(self * a) + b</code> with only one \xe2\x80\xa6DePerforms the fused multiply-add operation <code>(self * a) + b</code>11CjReturns the result of multiplying this duration by the \xe2\x80\xa6CeMultiplies <code>Duration</code> by <code>f32</code>.1CeMultiplies <code>Duration</code> by <code>f64</code>.DiAllows one to mutate an <code>Arg</code> after it\xe2\x80\x99s been added to a \xe2\x80\xa60EcThe <code>ndarray</code> crate provides an <em>n</em>-dimensional container for \xe2\x80\xa6DeWhether the class is negated or not. e.g., <code>\\d</code> is not \xe2\x80\xa6DjWhether the class is negated or not. e.g., <code>[[:alpha:]]</code> is \xe2\x80\xa6BeWhether this class is negated or not.DgWhether this class is negated or not. e.g., <code>[a]</code> is not \xe2\x80\xa6EfSame as <code>Ident::new</code>, but creates a raw identifier (<code>r#ident</code>\xe2\x80\xa60AiCreate a new linked list.CiWorks exactly like the <code>next_if</code> method in \xe2\x80\xa6CcAdvance the cursor, returning a raw argument value.AgMutable variant of nth.CmToggle whether a one-pass DFA should be available for use \xe2\x80\xa6CjA DFA that can return spans for matching capturing groups.CgInternal method used to define the behavior of this \xe2\x80\xa6ChIf no task was stolen, attempts another steal operation.FcReturns a tuple consisting of the <code>l</code> and <code>r</code> in <code>Both(l, r)</code>, \xe2\x80\xa6BlThe padding to use when writing unit values.BkReturns the ID of the pattern that matched.00CmReturns the pattern ID associated with this configuration \xe2\x80\xa6CnIf it is known which pattern ID caused this build error to \xe2\x80\xa6CkReturns the identifier of the pattern that matched when \xe2\x80\xa6CiThe original pattern string in which this error occurred.0AlReturn a raw argument value.BcLooks up a value by a JSON Pointer.D`Creates a <code>Polygon</code> containing the given coordinates.0CeDecrement the pointer by 1, and return its new value.CeIncrement the pointer by 1, and return its new value.CjA prelude which re-exports the traits for manipulating \xe2\x80\xa6A`ndarray prelude.BgConvenience re-export of common membersDgThe rayon prelude imports the various <code>ParallelIterator</code> \xe2\x80\xa6BnPrints to <code>stdout</code>, with a newline.DgGroups elements from the <code>GroupingMap</code> source by key and \xe2\x80\xa6C`Return the product of all elements in the array.BiMultiplies all the items in the iterator.BeThe bounding box of the quadtree nodeCjQuality of this zone. Higher qualities are superior. A \xe2\x80\xa6AnThe quality level of this zoneBaReturn the shape of the producer.CiReturn the shape of the array as it\xe2\x80\x99s stored in the \xe2\x80\xa6BcReturn a reference to the dimension0DgReturns a reference to the original <code>ReentrantMutex</code> object.DgCreates a parallel iterator that produces <code>n</code> repeats of \xe2\x80\xa6CkReplaces the leftmost-first match in the given haystack \xe2\x80\xa60DfReserve capacity to grow array along <code>axis</code> by at least \xe2\x80\xa60DkReserves capacity for at least <code>additional</code> more elements to \xe2\x80\xa600DhReserves capacity for at least <code>additional</code> more slots in theDdReserve capacity for <code>additional</code> more elements to be \xe2\x80\xa6Da<em>Note: Reshape is for <code>ArcArray</code> only. Use </em>\xe2\x80\xa6DeResolve a potential conflict between an <code>Offset</code> and a \xe2\x80\xa6CmRestores the CDE to a previous state, as described by the \xe2\x80\xa6CiRestores the layout to a previous state using a snapshot.DgRestores the state of the problem to the given <code>BPSolution</code>.DgRestores the state of the problem to the given <code>SPSolution</code>.CkReturns the reversed ray of the given ray. The returned \xe2\x80\xa6CjReturn the underlying lazy DFA responsible for reverse \xe2\x80\xa6BhReturn a reference to the reverse cache.A`Reverse the NFA.BbReverse the bytes in this literal.BeReverses the ranges in this sequence.CkSupport for printing and parsing instants using the RFC \xe2\x80\xa6Dm<strong>Add</strong> an affine transform for rotation, using an arbitrary \xe2\x80\xa6CfReturn a mutable array view of row <code>index</code>.ChCreate a new span from this integer in units of seconds.ClSet the number of seconds on this span. The value may be \xe2\x80\xa6CcReturns the total number of seconds in this offset.AjThe Self type of the impl.BeSet the day on this broken down time.CfSet the ending offset for the span for this search \xe2\x80\xa60CbSets the latitude/vertical component of the point.0ChForces the length of the vector to <code>new_len</code>.AlSets the length of a vector.CeSets the longitude/horizontal component of the point.0CaSet the <code>Rect</code>\xe2\x80\x99s maximum coordinate.0CaSet the <code>Rect</code>\xe2\x80\x99s minimum coordinate.0FeSets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>\xe2\x80\xa6CfAn implementation of the Shift-Or substring search \xe2\x80\xa6BaShuffle a mutable slice in place.CnSimultaneously computes the sine and cosine of the number, \xe2\x80\xa600CaBoth the sine and cosine of <code>x</code> (f32).ClAn affine transformation which skews a geometry, sheared \xe2\x80\xa6gslotmapCdConfigures the spacing between the units and the \xe2\x80\xa6CfReturns the spacing of this punctuation character, \xe2\x80\xa6DkA trait that can provide the <code>Span</code> of the complete contents \xe2\x80\xa6DeReturns <code>true</code> if the data has spilled into a separate \xe2\x80\xa6CjSplit a rectangle into two rectangles along the X-axis \xe2\x80\xa60CjSplit a rectangle into two rectangles along the Y-axis \xe2\x80\xa60CfRemove axes of length 1 and return the modified array.DeReturns the standard deviation (<code>\xcf\x83</code>) of the distribution.BaCreates a stealer for this queue.DhCreate a new <code>Slice</code> with the given step size (multiplied \xe2\x80\xa6CbCreates an iterator that steps by the given amountCiReturns the total stride for every state in this DFA, \xe2\x80\xa6CjReturns the stride, as a base-2 exponent, required for \xe2\x80\xa6BkReturn the strides of the array as a slice.CfSupport for \xe2\x80\x9cprintf\xe2\x80\x9d-style parsing and formatting.AlThe concrete iterator types.CfTerminal <code>Styles</code> for help and error output0EgReturns a <code>Span</code> that is a subset of <code>self.span()</code> containing \xe2\x80\xa6CcReturns the result of the operation, if successful.BoThe ordering of the operation when it succeeds.AlProvide a general suggestion0AiThe Gamma function (f32).CaExtracts a civil date from this broken down time.EhConverts the value of <code>self</code> to an <code>i128</code>. If the value cannot \xe2\x80\xa6AdTreat as a long-flagCiReturn the capture name for the given index and given \xe2\x80\xa6CaExtracts a civil time from this broken down time.EgConverts the value of <code>self</code> to a <code>u128</code>. If the value cannot \xe2\x80\xa6CeReturns the length of the iterator if one exists. \xe2\x80\xa6CoAdapt a <code>TypedValueParser</code> from one value to another00DkAttempts to make a new <code>MappedMutexGuard</code> for a component of \xe2\x80\xa60DhAttempts to make  a new <code>MappedReentrantMutexGuard</code> for a \xe2\x80\xa60DdAttempts to make  a new <code>MappedRwLockReadGuard</code> for a \xe2\x80\xa6DeAttempts to make  a new <code>MappedRwLockWriteGuard</code> for a \xe2\x80\xa610AkConverts to a string slice.BnDescribes the content of <code>AnyValue</code>0CiA test for equality that uses units in the last place \xe2\x80\xa6CkApproximate equality using both the absolute difference \xe2\x80\xa6CeApproximate equality assertion for floating point \xe2\x80\xa60BlThe inverse of <code>UlpsEq::ulps_eq</code>.0CmApproximate inequality using both the absolute difference \xe2\x80\xa6CdThis configures Unicode mode for the entire pattern.CiThis configures Unicode mode for the all of the patterns.10CoEnable or disable the Unicode flag (<code>u</code>) by default.00ClA distribution uniformly sampling numbers within a given \xe2\x80\xa60DdReturns a <code>TimeZone</code> that is specifially marked as \xe2\x80\x9c\xe2\x80\xa6CgDivides <code>self</code> by the scalar <code>t</code>.CaUpgrades an upgradable lock to an exclusive lock.ClAtomically upgrades an upgradable read lock lock into an \xe2\x80\xa6CiUpgrades an upgradeable lock guard to a writable lock \xe2\x80\xa6Dh<code>variant</code> is called to identify which variant to deserialize.DeSets the version for the short version (<code>-V</code>) and help \xe2\x80\xa60CiReturns the weekday corresponding to this zoned datetime.BiReturns the parsed weekday, if available.BoReturns the weekday corresponding to this date.CcReturns the weekday corresponding to this datetime.CeReturns the day component of this ISO 8601 week date.CjReturns a lazy-loading iterator containing the current \xe2\x80\xa60AnWindows-specific style queriesBfReturn a window producer and iterable.iAbsolute.Ae<code>abstract</code>AmThe allocator return an errorBgThe type of anchored search to perform.ClSupport only anchored searches. Requesting an unanchored \xe2\x80\xa61BmA trait for approximate equality comparisons.ClAn array where the data has shared ownership and is copy \xe2\x80\xa6CiUnfortunate implementation detail required to use the \xe2\x80\xa6AlFamily of related arguments.00AlOps that depend on word sizeCjAn iterator that traverses over an axis and and yields \xe2\x80\xa6BbThe shape parameter is not finite.CiA \xe2\x80\x9cmeta iterator adaptor\xe2\x80\x9d. Its closure receives a \xe2\x80\xa6ChA single binary operation (i.e., &amp;&amp;, \xe2\x80\x93 or ~~).CfThe binomial distribution <code>Binomial(n, p)</code>.DbA wrapper type implementing <code>RngCore</code> for some type \xe2\x80\xa6DeThe Collision Detection Engine (CDE). <code>Hazard</code>s can be \xe2\x80\xa6CaRepresents the capture groups for a single match.0CjThe span offsets of capturing groups after a match has \xe2\x80\xa6CjCategorizes the cause of a <code>serde_json::Error</code>.CdCalculation of the centroid. The centroid is the \xe2\x80\xa6lChild nodes.AfA character class set.B`A <code>clipPath</code> element.hclipPathCgAn iterator adaptor that may join together adjacent \xe2\x80\xa6CnA builder for compiling an NFA from a regex\xe2\x80\x99s high-level \xe2\x80\xa6CcDefines an associated constant representing the \xe2\x80\xa6CkA queue \xe2\x80\x9cconsumer\xe2\x80\x9d; it can dequeue items from the queueCfA consumer is effectively a generalized \xe2\x80\x9cfold\xe2\x80\x9d \xe2\x80\xa6EeChecks if <code>rhs</code> is completely contained within <code>self</code>. More \xe2\x80\xa6B`Continue folding with this value0C`A <code>continue</code>, with an optional label.Ae<code>continue</code>DkFor algorithms which can use both integer <strong>and</strong> floating \xe2\x80\xa60DhThe position of a <code>Coord</code> relative to a <code>Geometry</code>BeAn array with copy-on-write behavior.ChAn enum input to a <code>proc_macro_derive</code> macro.CiA representation of a civil datetime in the Gregorian \xe2\x80\xa6ChA builder for setting the fields on a <code>Date</code>.BaDiscrete set of rotations allowedmA \xe2\x88\xa9 B = \xe2\x88\x85AiThe base dispatch logger.kA document.A`<code>..=</code>CnFailed to downcast <code>AnyValue</code> to the specified type0CaDuration type used for <code>try_lock_for</code>.0DgA <code>Duration</code> type to represent a span of time, typically \xe2\x80\xa6gA \xe2\x8a\x86 BCcAn envelope type that encompasses some child nodes.CkThe object\xe2\x80\x99s envelope type. Usually, AABB will be the \xe2\x80\xa6AlWork was found and executed.0BoError type returned from <code>Exp::new</code>.Eg<code>Expected</code> represents an explanation of what data a <code>Visitor</code> \xe2\x80\xa6CfA function call expression: <code>invoke(a, b)</code>.BkA cast expression: <code>foo as f64</code>.BnConditionless loop: <code>loop { ... }</code>.DjA path like <code>std::mem::replace</code> possibly containing generic \xe2\x80\xa6BaVarious ways to represent a shapeBlRepresents all regions outside the containerCgFind the extreme coordinates and indices of a geometry.Ab<code>=&gt;</code>BcA single field in a struct pattern.oPath to a file.00ChAn iterator adapter to filter values within a nested \xe2\x80\xa6CjAn iterator of non-overlapping matches in a particular \xe2\x80\xa6CjAn iterator over non-overlapping matches from a packed \xe2\x80\xa61CcAn iterator over non-overlapping substring matches.EnA floating point literal, e.g. <code>3.14</code>, <code>8.</code>, <code>135e12</code>, or \xe2\x80\xa6Dh<code>FoldWith</code> is an iterator that applies a function over an \xe2\x80\xa6CgForm feed, spelled <code>\\f</code> (<code>\\x0C</code>).DcAn escaped form feed character (usually escaped as <code>\\f</code>)CnLifetimes and type parameters attached to a declaration of \xe2\x80\xa6CeError type returned from <code>Geometric::new</code>.BnA common numeric trait used for geo algorithmsC`An enum representing any possible geometry type.0CiPolicy for placing a space every four hexadecimal digits.DiRounds to the nearest allowed value like <code>HalfExpand</code>, but \xe2\x80\xa60CaInclusive at the beginning, exclusive at the end.CoWhen encountered, display <code>Command::print_long_help</code>00CiThe literal is written as a hex code with a bracketed \xe2\x80\xa6ClThe literal is written as a hex code with a fixed number \xe2\x80\xa6DiHost name of a computer. Shells usually parse <code>/etc/hosts</code> \xe2\x80\xa600DiAdditional methods for <code>Ident</code> not provided by proc-macro2 \xe2\x80\xa6AmAn item within an impl block.CiOnly capture states corresponding to implicit capture \xe2\x80\xa6CmConverts external representations of items and containers \xe2\x80\xa6BdFixed capacity <code>IndexMap</code>BeFixed capacity <code>IndexSet</code>.AdA vector of indices.AbAn injector queue.CkThe (abstract) static representation of a problem instance.AnBy-value iterator for an arrayDfAn iterator over <code>TokenStream</code>\xe2\x80\x99s <code>TokenTree</code>s.BmParallel iterator that moves out of an array.BdThe type of iterator we will become.DiA parallel iterator over the value in <code>Some</code> variant of an \xe2\x80\xa6AoParallel iterator over a resultBmParallel iterator that moves out of a vector.BcParallel iterator over a B-Tree mapBdParallel iterator over a binary heapBcParallel iterator over a B-Tree setBaParallel iterator over a hash mapBaParallel iterator over a hash setBdParallel iterator over a linked listBkParallel iterator over a double-ended queueCfAn owning iterator over a serde_json::Map\xe2\x80\x99s entries.DeAn iterator that moves key-value pairs out of a <code>SlotMap</code>.CcAn iterator that moves key-value pairs out of a \xe2\x80\xa6DhAn iterator that moves key-value pairs out of a <code>HopSlotMap</code>.11DjAn iterator that consumes a <code>SmallVec</code> and yields its items \xe2\x80\xa6CeAn iterator over owned values of type <code>T</code>.DfPredicates to test the convexity of a  <code>LineString</code> . A \xe2\x80\xa6DeAn enum definition: <code>enum Foo&lt;A, B&gt; { A(A), B(B) }</code>.CfAn impl block providing trait or associated items: \xe2\x80\xa6AaA type alias: \xe2\x80\xa6CnAn iterator adaptor that merges an abitrary number of base \xe2\x80\xa6CcSee <code>.lanes_mut()</code> for more information.CgError returned from <code>TokenStream::from_str</code>.BeA Rust lifetime: <code>&#39;a</code>.DdA lifetime parameter: <code>&#39;a: &#39;b + &#39;c + &#39;d</code>.CdA lifetime parameter in precise capturing bound: \xe2\x80\xa6EjA lifetime predicate in a <code>where</code> clause: <code>&#39;a: &#39;b + &#39;c</code>.AdA lifetime argument.CgLine feed, spelled <code>\\n</code> (<code>\\x0A</code>).DcAn escaped line feed character (usually escaped as <code>\\n</code>)CbAn iterator of a sequence of evenly spaced floats.DfA floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.CkAn iterator of a sequence of logarithmically spaced number.ClThe maximum size of an internal node. Larger values will \xe2\x80\xa6DgThe minimum size of an internal node. <code>MIN_SIZE</code> must be \xe2\x80\xa6DmA transparent wrapper of <code>Cell&lt;T&gt;</code> which is identical in \xe2\x80\xa6CaA label to disambiguate hours on a 12-hour clock.BoA structured list within an attribute, like \xe2\x80\xa6AmMetadata about a log message.Di<code>MultiZip</code> is an iterator that zips up a tuple of parallel \xe2\x80\xa6CnA negation operator applied to all subsequent flags in the \xe2\x80\xa6CkOccurs when the user doesn\xe2\x80\x99t use equals for an option \xe2\x80\xa60CeA helper type for forcing literal string replacement.0AoDeems no hazards as irrelevant.CeA property that isn\xe2\x80\x99t a particular value, e.g., \xe2\x80\xa6DcThe entry corresponding to the key <code>K</code> exists in the mapAbAn occupied Entry.AbAn occupied entry.0BjString-like methods for <code>OsStr</code>Bloverflow when computing offset, length, etc.BlOverflow when calculating the sum of weights0Ae<code>override</code>ChUnique key for each <code>PlacedItem</code> in a layout.CiAn iterator adaptor that pads a sequence to a minimum \xe2\x80\xa6CcAn iterator over mutably borrowed pairs of type \xe2\x80\xa6BjA const block: <code>const { ... }</code>.BhA pattern that binds a new variable: \xe2\x80\xa6DgA macro invocation expression: <code>format!(&quot;{}&quot;, q)</code>.BnA parenthesized pattern: <code>(A | B)</code>.GaA range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.DkA dynamically sized slice pattern: <code>[a, b, ref i @ .., y, z]</code>\xe2\x80\xa6BeA tuple pattern: <code>(a, b)</code>.B`A <code>polyline</code> element.hpolylineDjThe first component of the value yielded by <code>WithPosition</code>. \xe2\x80\xa6BjA single position in a regular expression.AeA positioning method.CfAn iterator to iterate through the powerset of the \xe2\x80\xa6AbExisting arguments0CkA queue \xe2\x80\x9cproducer\xe2\x80\x9d; it can enqueue items into the queueEhA <code>Producer</code> is effectively a \xe2\x80\x9csplittable <code>IntoIterator</code>\xe2\x80\x9d. \xe2\x80\xa6CmAn iterator adaptor that allows putting multiple items in \xe2\x80\xa6D`Representation of a <code>Hazard</code> in a <code>QTNode</code>n<code>?</code>CdDefines a number type that is compatible with rstar.AmBasic operations for a mutex.CgThe <code>self</code> argument of an associated method.0CjHandles codepoint and invalid sequence events from the \xe2\x80\xa6CmMatch multiple, possibly overlapping, regexes in a single \xe2\x80\xa60ChThe requisite parameters for testing for approximate \xe2\x80\xa6iRelative.CnA trait for types that can be used to replace matches in a \xe2\x80\xa60Ckexterior ring is oriented clockwise, interior rings are \xe2\x80\xa6Ak24-bit ANSI RGB color codes00AjRow major or \xe2\x80\x9cC\xe2\x80\x9d orderCiA Simple Polygon is a polygon that does not intersect \xe2\x80\xa6ChA packed searcher for quickly finding occurrences of \xe2\x80\xa6CjA searcher for creating iterators and performing lower \xe2\x80\xa6CiEnumeration of possible methods to seek within an I/O \xe2\x80\xa6Aa<code>Self</code>EeWhen encountered, act as if <code>&quot;false&quot;</code> was encountered on the \xe2\x80\xa600ChA group of flags that is not applied to a particular \xe2\x80\xa6CbArray shape argument with optional order parameterAfSimplifies a geometry.CkA type that can slice an array of dimension <code>D</code>.CbA small-state, fast, non-crypto, non-portable PRNGDfA <code>Vec</code>-like container that can store a small number of \xe2\x80\xa6ChParallel iterator over mutable slices separated by a \xe2\x80\xa6CkUse standard match semantics, which support overlapping \xe2\x80\xa6hStandardCiControls in which cases the associated code should be runBgIncrementally strip non-contiguous dataBnThe Student t-distribution <code>t(\xce\xbd)</code>.B`A <code>textPath</code> element.htextPathChA builder for setting the fields on a <code>Time</code>.B`A representation of a time zone.DgTypes that can be interpolated inside a <code>quote!</code> invocation.DkA bounded 2D area whose three vertices are defined by <code>Coord</code>\xe2\x80\xa60BfA try block: <code>try { ... }</code>.DjA path like <code>std::slice::Iter</code>, optionally qualified with a \xe2\x80\xa6CeAn iterator adapter to filter out duplicate elements.CiSamples uniformly from the volume of the unit ball in \xe2\x80\xa6CgSamples uniformly from the unit disc in two dimensions.CnUnparks a thread parked by the associated <code>Parker</code>.BkA trait for values which cannot be negativeGbThe input contained an unsigned integer <code>u8</code>, <code>u16</code>, <code>u32</code> or <code>u64</code>\xe2\x80\xa6DmA braced group of imports in a <code>use</code> item: <code>{A, B, C}</code>.BfName of a local operating system user.00BmThe conversion source contained invalid data.0000BlThe variadic argument of a foreign function.DjThe literal is written verbatim, e.g., <code>a</code> or <code>\xe2\x98\x83</code>.CeTokens in expression position not interpreted by Syn.BnTokens forming an item not interpreted by Syn.CnTokens in an <code>extern</code> block not interpreted by Syn.CnTokens within the definition of a trait not interpreted by \xe2\x80\xa6CcTokens within an impl block not interpreted by Syn.BkA raw token literal not interpreted by Syn.CbTokens in pattern position not interpreted by Syn.BoTokens in type position not interpreted by Syn.AnArray view\xe2\x80\x99s representation.ChParallelIterator for arbitrary tree-shaped patterns. \xe2\x80\xa6EbComputes the absolute difference between <code>self</code> and <code>other</code>.ClAdd an edge to the polygon using an azimuth (in degrees) \xe2\x80\xa6AlAdds a \xe2\x80\x9cfail\xe2\x80\x9d NFA state.BmAdd the given item to this sequence of flags.AkAdd a \xe2\x80\x9clook\xe2\x80\x9d NFA state.ClThis module provides APIs for dealing with the alphabets \xe2\x80\xa6BaSets the anchor mode of a search.0BbSet the anchored mode of a search.E`<strong>Auto-adapting <code>stdout</code> / <code>stderr</code> streams</strong>DiIf the <code>Value</code> is an Array, returns the associated vector. \xe2\x80\xa6CcReturns the substring of the haystack that matched.BbReturns the bytes in this literal.AmGets the bytes of this value.FoConverts from <code>&amp;EitherOrBoth&lt;A, B&gt;</code> to <code>EitherOrBoth&lt;&amp;_, &amp;_&gt;</code> \xe2\x80\xa6CcReturns the number of whole hours in this duration.CiReturns the total duration in units of whole nanoseconds.CmReturns the total number of nanoseconds contained by this \xe2\x80\xa6ChReturn references to the forward and reverse caches, \xe2\x80\xa6CgReturns the array slice backing the buffer, without \xe2\x80\xa6BnExtracts a slice containing the entire vector.CmReturn the array\xe2\x80\x99s data as a slice, if it is contiguous \xe2\x80\xa6CjReturns the underlying sequence of byte ranges as a slice.2ChReturns the remaining items of this iterator as a slice.DhReturn the internal value as a <code>usize</code>. This is guaranteed to0DjReturn this small index as a <code>usize</code>. This is guaranteed to \xe2\x80\xa611DkReturn this unit as a <code>usize</code>, regardless of whether it is a \xe2\x80\xa6CmProvides a mutable reference to the back element, or None \xe2\x80\xa6DfThe initial state of the <code>CDEngine</code> for this container. \xe2\x80\xa6CiA \xe2\x80\x9cmeta iterator adaptor\xe2\x80\x9d. Its closure receives a \xe2\x80\xa6AdSet background color00ChReturns the total cost of all bins used in the solution.CkOverrides the runtime-determined name of the binary for \xe2\x80\xa60BcCalculate the binomial coefficient.BkBoolean Ops such as union, xor, difference;AaC string literal.CmInvokes the callback with the given producer as argument. \xe2\x80\xa6CjReturns the maximum number of elements the deque can hold.CnReturns the capacity of the buffer, which is the length of \xe2\x80\xa6BoReturns the number of elements the map can holdBoReturns the number of elements the set can holdCdReturns the number of elements that the map can holdCjReturns the maximum number of elements the String can holdCkReturns the maximum number of elements the vector can hold.BhReturns the capacity of the binary heap.CiReturns the maximum number of elements the queue can hold00ClReturns the total number of pattern identifiers that may \xe2\x80\xa6DhReturns the number of elements the <code>SlotMap</code> can hold withoutDiReturns the number of elements the <code>DenseSlotMap</code> can hold \xe2\x80\xa6DgReturns the number of elements the <code>HopSlotMap</code> can hold \xe2\x80\xa6DiReturns the number of elements the <code>SecondaryMap</code> can hold \xe2\x80\xa6DjReturns the number of elements the <code>SparseSecondaryMap</code> can \xe2\x80\xa6CcThe number of items the vector can hold without \xe2\x80\xa6CnThis routine searches for the first match of this regex in \xe2\x80\xa60CnExecutes a leftmost forward search and writes the spans of \xe2\x80\xa6CkExecutes an anchored leftmost forward search and writes \xe2\x80\xa6CcWhether to include \xe2\x80\x98Capture\xe2\x80\x99 states in the NFA.2CaProvides types for dealing with capturing groups.CbCalculate the centroid of a <code>Geometry</code>.BkSee: https://en.wikipedia.org/wiki/CentroidDhThe Centroid of a <code>GeometryCollection</code> is the mean of the \xe2\x80\xa6CgThe Centroid of a <code>Line</code> is its middle pointhExamplesDeThe Centroid of a <code>MultiLineString</code> is the mean of the \xe2\x80\xa6E`The Centroid of a <code>MultiPoint</code> is the mean of all <code>Point</code>sDbThe Centroid of a <code>MultiPolygon</code> is the mean of the \xe2\x80\xa6ChThe Centroid of a <code>Point</code> is the point itselfD`The Centroid of a <code>Polygon</code> is the mean of its pointsDjThe Centroid of a <code>Rect</code> is the mean of its <code>Point</code>sDnThe Centroid of a <code>Triangle</code> is the mean of its <code>Point</code>sDgThe Centroid of a <code>Geometry</code> is the centroid of its enum \xe2\x80\xa6B`The children of the node, if anyAnReturns this node\xe2\x80\x99s childrenDaReturn an <em>iterable</em> that can group iterator elements. \xe2\x80\xa6BeMinimal, flexible command-line parserCnReturns the floating point category of the number. If only \xe2\x80\xa6000BdCategorizes the cause of this error.AeCheck CLICOLOR statusCnReturn an iterator adaptor that uses the passed-in closure \xe2\x80\xa6CiUsed to detect collisions in a binary fashion: either \xe2\x80\xa6CfAll comments found in the original regular expression.ClReturn a compiler for configuring the construction of an \xe2\x80\xa6BmFinish consuming items, produce final result.DkCreates a new <code>Timestamp</code> value in a <code>const</code> context.DfCreates a new <code>Date</code> value in a <code>const</code> context.DjCreates a new <code>DateTime</code> value in a <code>const</code> context.DfCreates a new <code>Time</code> value in a <code>const</code> context.DiCreates a new time zone offset in a <code>const</code> context from a \xe2\x80\xa6CjReturns true when the given offset is contained within \xe2\x80\xa6EgReturns <code>true</code> if all of the effects in <code>other</code> are contained \xe2\x80\xa600DiReturns <code>true</code> if the given pattern matches a sub-slice of \xe2\x80\xa6GbDetermine whether <code>Geometry</code> <code>A</code> completely encloses <code>Geometry</code> <code>B</code>\xe2\x80\xa6CfReturns <code>true</code> if the set contains a value.DhReturns <code>true</code> if the given item is present in this iterator.5CnReturn true if and only if the given pattern identifier is \xe2\x80\xa6CeReturns true if and only if the given look-around \xe2\x80\xa60EaReturns <code>true</code> if a given element is equal (<code>==</code>) to an \xe2\x80\xa6AoSign of Y, magnitude of X (f64)DkReturns a number composed of the magnitude of <code>self</code> and the \xe2\x80\xa60DjThe transformation that was applied to the <code>Item</code> before it \xe2\x80\xa6CgThe transformation to apply to the item when placing itBmReturns a raw pointer to the underlying data.00CfReturns the civil datetime component of this zoned \xe2\x80\xa6DjCreates a new <code>DateTime</code> value in a <code>const</code> context.CkReturns the civil datetime that was used to create this \xe2\x80\xa60ClRemove duplicates from sections of consecutive identical \xe2\x80\xa6CjRemoves consecutive duplicate elements using the given \xe2\x80\xa6CnReturn a read-write view over the diagonal elements of the \xe2\x80\xa6CfMaximum distance between any two points in the polygonCnGenerate the full set of optimized implementations to take \xe2\x80\xa6CmReturns the distance from <code>self</code> to the given ray.AgCeiled integer divisionAhCeiled integer division.ChAttempt to downcast the error object to a concrete type.DhConsume the first <code>n</code> elements from the iterator eagerly, \xe2\x80\xa6CjReturns the positive duration which represents how far \xe2\x80\xa6CcWhether to execute an \xe2\x80\x9cearliest\xe2\x80\x9d search or not.0CmReturns an iterator of the bytes in the given equivalence \xe2\x80\xa6CkEntities to model 2D Irregular Cutting and Packing ProblemsBoEntities to model the Bin Packing Problem (BPP)CaEntities to model the Strip Packing Problem (SPP)B`Returns the object\xe2\x80\x99s envelope.CfReturns the smallest envelope that encompasses all \xe2\x80\xa6BnPrints to <code>stderr</code>, with a newline.AmReturns the year and its era.ChSet the year of a zoned datetime via its era and its \xe2\x80\xa61CgSet year of a date via its era and its non-negative \xe2\x80\xa62CkSet year of a datetime via its era and its non-negative \xe2\x80\xa6AnThe target type to downcast to0CkExternal (serializable) representations of the entities \xe2\x80\xa6CjExternal (serializable) representations of Bin Packing \xe2\x80\xa6ChExternal (serializable) representations of all Strip \xe2\x80\xa6D`Return a reference to the exterior <code>LineString</code> ring.0CfCalculate the extreme coordinates and indices of a \xe2\x80\xa6BfBitwise \xe2\x80\x9cor\xe2\x80\x9d with the current tag.CmApplies bitwise \xe2\x80\x9cor\xe2\x80\x9d to the current value and returns \xe2\x80\xa60CmApplies logical \xe2\x80\x9cor\xe2\x80\x9d to the current value and returns \xe2\x80\xa61111111111AdSet foreground color00DiSearches for <strong>some</strong> item in the parallel iterator that \xe2\x80\xa6CgFind an element in the list that can be changed and \xe2\x80\xa6CmLike <code>find</code>, but accepts and returns raw pointers.000000000DkApplies <code>map_op</code> to each item of this iterator to get nested \xe2\x80\xa6CnReturn the greater of two arguments or, if either argument \xe2\x80\xa6CmReturn the lesser of two arguments or, if either argument \xe2\x80\xa6DkEvaluate the provided expression for both <code>Either::Left</code> and \xe2\x80\xa6CbCall <code>f</code> for each element in the array.CiApply a function to all elements of the input arrays, \xe2\x80\xa600000DfExecutes <code>OP</code> on each item produced by the iterator, in \xe2\x80\xa6ClPrint f32 to the given buffer and return number of bytes \xe2\x80\xa6ClPrint f64 to the given buffer and return number of bytes \xe2\x80\xa6CoA bespoke but easy to read format for <code>Span</code> and \xe2\x80\xa6EfConstructs a new <code>SmallVec</code> on the stack from an <code>A</code> without \xe2\x80\xa6CkReturns a time zone database initialized from the given \xe2\x80\xa6CcInitializes the filter builder from an environment.CfCreate a builder from the given environment variables.BhCreates the logger from the environment.CaInitializes the log builder from the environment.CmReturns a time zone database initialized from the current \xe2\x80\xa6DiConverts a <code>f32</code> to return an optional value of this type. \xe2\x80\xa6DiConverts a <code>f64</code> to return an optional value of this type. \xe2\x80\xa6EgConverts a finite <code>f64</code> to a <code>Number</code>. Infinite or NaN values \xe2\x80\xa6EfIff <code>value</code> is a value received from <code>k.as_ffi()</code>, returns a \xe2\x80\xa6DjConverts an <code>i16</code> to return an optional value of this type. \xe2\x80\xa6DjConverts an <code>i32</code> to return an optional value of this type. \xe2\x80\xa6DjConverts an <code>i64</code> to return an optional value of this type. \xe2\x80\xa6CiReturns a new owned pointer pointing to <code>raw</code>.CbConverts a raw pointer into a <code>Parker</code>.CeConverts a raw pointer into an <code>Unparker</code>.CfCreates a new mutex based on a pre-existing raw mutex.CmCreates a new reentrant mutex based on a pre-existing raw \xe2\x80\xa6DlCreates a new new instance of an <code>RwLock&lt;T&gt;</code> based on a \xe2\x80\xa6CmCreate a new PRNG seeded from an infallible <code>Rng</code>.0BiParse an argument into <code>Self</code>.00HjParses <code>a +/- bi</code>; <code>ai +/- b</code>; <code>a</code>; or <code>bi</code> where <code>a</code> and <code>b</code> are of \xe2\x80\xa6DlConvert a &amp;str to <code>OrderedFloat</code>. Returns an error if the \xe2\x80\xa6DmConvert a &amp;str to <code>NotNan</code>. Returns an error if the string \xe2\x80\xa6CdAttempts to parse a string into a regular expression0DhDeserialize an instance of type <code>T</code> from a string of JSON \xe2\x80\xa60CiCreates a JSON deserializer from a <code>&amp;str</code>.DjConverts an <code>u16</code> to return an optional value of this type. \xe2\x80\xa6DjConverts an <code>u32</code> to return an optional value of this type. \xe2\x80\xa6DjConverts an <code>u64</code> to return an optional value of this type. \xe2\x80\xa6ClCreate a one-dimensional array from a vector (no copying \xe2\x80\xa6DmConstruct a new <code>SmallVec</code> from a <code>Vec&lt;A::Item&gt;</code>.BhAlias for <code>Rng::random_bool</code>.0B`Generate a new block of results.ChCreates a new point value with given values for each \xe2\x80\xa6BnThis module makes all geometry types availableBhGeometric primitives and base algorithmsD`Getters for all args. It will return a vector of <code>Id</code>0BkReturns whether \xe2\x80\x9cCRLF\xe2\x80\x9d mode is enabled.BmReturns the number of day units in this span.DcGets the value of a specific <code>ArgAction::SetTrue</code> or \xe2\x80\xa60C`Get the help specified for this argument, if any000CbGet the long option name for this argument, if any0CjIterate over values of a specific option or positional \xe2\x80\xa60AhGet the name of the cmd.BbGet the name of the argument value10A`Return the name.0BeIterate through the <em>options</em>.0CmReturns whether this configuration will instruct the lazy \xe2\x80\xa6mGet the seed.00BnReturn the span for this search configuration.0CgReturns whether UTF-8 mode is enabled for this builder.CjReturns whether this configuration has enabled UTF-8 mode.BfReturns whether UTF-8 mode is enabled.AmSee <code>.chunk_by()</code>.CnReport the <code>ArgGroup::id</code> for this set of arguments00EaIf <code>Left</code>, or <code>Both</code>, return true. Otherwise, return false.CmThis module contains the parallel iterator types for hash \xe2\x80\xa60ClReturn a borrow of the underlying haystack as a slice of \xe2\x80\xa60De<code>static</code> friendly data structures that don\xe2\x80\x99t require \xe2\x80\xa6AjCreate the identity matrixAninterface name, e.g. \xe2\x80\x9cen0\xe2\x80\x9dElReturns a positive value if the coordinate <code>pd</code> lies <strong>outside</strong> \xe2\x80\xa6BnThe first index of that an argument showed up.0ClReturns a sequence of literals without a finite size and \xe2\x80\xa6AjReturns positive infinity.AkReturns the infinite value.10fSafetyBbReturn this alternation as an AST.BdReturn this concatenation as an AST.CcConverts the owned pointer into a <code>Box</code>.CkConvert the dimensional into a dynamic dimensional (IxDyn).0ClConvert any array or array view to a dynamic dimensional \xe2\x80\xa6CfConsumes this entry to yield to key associated with itEaBuilds this logger into a <code>Box&lt;log::Log&gt;</code> and calculates the \xe2\x80\xa6CeConsumes this entry and yields a reference to the \xe2\x80\xa6CiConverts the entry into a mutable reference to its value.DkConverts the <code>OccupiedEntry</code> into a mutable reference to the \xe2\x80\xa60ChConverts this <code>Ref</code> into a mutable reference.CbConverts a <code>Parker</code> into a raw pointer.CeConverts an <code>Unparker</code> into a raw pointer.C`Converts this <code>Ref</code> into a reference.CeProduces the source underlying the failed conversion.00000000CbCreate a <code>Vec</code> of the printable contentDnReturns the underlying <code>Vec&lt;T,N&gt;</code>. Order is arbitrary and \xe2\x80\xa6DoReturn result as a <code>Vec&lt;usize&gt;</code>. Conversion may or may not \xe2\x80\xa6EfConvert a <code>SmallVec</code> to a <code>Vec</code>, without reallocating if the \xe2\x80\xa6CjCreate an iterator over the \xe2\x80\x9ccartesian product\xe2\x80\x9d of \xe2\x80\xa6DeReturns true if the <code>Value</code> is an Array. Returns false \xe2\x80\xa6CiReturns true if and only if this character class will \xe2\x80\xa60CgReturns true when this span is empty. That is, when \xe2\x80\xa6CbReturns true when the span in this match is empty.BcReport the bytes has been exhaustedCmReturns <code>true</code> if there are no parameters present.AgArgument is length of 0AcNo short flags leftC`Returns <code>true</code> if the queue is empty.00DcReturns <code>true</code> if the queue was empty at the time of \xe2\x80\xa6DbSome geometries, like a <code>MultiPoint</code>, can have zero \xe2\x80\xa6B`Is this GeometryCollection empty0BcReturns whether the deque is empty.BmReturns true if the map contains no elements.CjReturns <code>true</code> if the set contains no elements.BlReturns true if the map contains no elementsB`Returns true if the vec is emptyBcChecks if the binary heap is empty.BcChecks if the linked list is empty.BoReturns <code>true</code> if the queue is emptyAkTrue if no items are placedBiReturn whether the array has any elementsCaChecks if this <code>TokenStream</code> is empty.BaCheck whether the range is empty.AlTrue when the length is zero0BmReturns <code>true</code> if the length is 0.2CjReturns <code>true</code> if the tree contains no weights.CjReturns true if and only if this match has a length of \xe2\x80\xa6CjReturns <code>true</code> if this set contains no regexes.10CgReturns true when this span is empty. That is, when \xe2\x80\xa6CbReturns true when the span in this match is empty.CfReturn true if and only if this set has no pattern \xe2\x80\xa6BnReturns true if and only if this set is empty.ClReturns true if and only if this span is empty. That is, \xe2\x80\xa6BmReturn true if and only if this Ast is empty.CnReturns true if and only if this character class is empty. \xe2\x80\xa63CkReturns true if and only if this sequence is finite and \xe2\x80\xa6ChReturns true if and only if this literal has zero bytes.BmReturns true if the map contains no elements.BaReturns if the slot map is empty.00BfReturns if the secondary map is empty.0C`Returns <code>true</code> if the vector is emptyCcReturns <code>true</code> if there are zero fields.ClReturns whether there are no more tokens remaining to be \xe2\x80\xa6CiDetermines whether this punctuated sequence is empty, \xe2\x80\xa6DnCompare corresponding bytes in <code>x</code> and <code>y</code> for equality.BhWhether the op is an equality op or not.CmReturns true if and only if all literals in this sequence \xe2\x80\xa6CbReturns true if and only if this literal is exact.CnDetermines whether this is a path of length 1 equal to the \xe2\x80\xa6DnReturns <code>true</code> if <code>self</code> is an <code>Index</code> value.CjReturns true if and only if this automaton matches the \xe2\x80\xa6CfReturns true if the given ID represents a match state.CnReturns true if and only if there is a match for the regex \xe2\x80\xa6CnReturns true if and only if one of the regexes in this set \xe2\x80\xa610ClReturns true if and only if this regex matches the given \xe2\x80\xa6CjReturn true if and only if this lazy state ID has been \xe2\x80\xa61CmExecutes an anchored leftmost forward search, and returns \xe2\x80\xa6DjReturns true if and only if this <code>PikeVM</code> matches the given \xe2\x80\xa6CdReturns true if and only if this capturing group \xe2\x80\xa6CmReturns <code>true</code> iff the array is the owned variant.0DiReturns <code>true</code> iff the data is the <code>Owned</code> variant.AoCheck if no effects are enabledAnCheck if no styling is enabled1010DeReturns <code>true</code> if the steal operation needs to be retried.CkReturn true if the value is the <code>Right</code> variant.0DjIf <code>Right</code>, return true. Otherwise, return false. Exclusive \xe2\x80\xa61AiCan treat as a short-flagDmReturns <code>true</code> if <code>self</code> is a <code>Slice</code> value.CfReturns true if the given ID represents a start state.=EeReturns true when <code>Look::Start</code> is satisfied <code>at</code> the given \xe2\x80\xa6CmDoes the argument look like a stdio argument (<code>-</code>)BkReturns <code>true</code> if we can sample.CmReturns true if and only if this character class range is \xe2\x80\xa6CkReturns true if and only if this repetition range is valid.CeReturns the parsed ISO 8601 week-based number, if \xe2\x80\xa6BnMutably borrow the inner value as an iterator.CeReturns an iterator that allows modifying each value.CnReturn an iterator over the key-value pairs of the map, in \xe2\x80\xa6CiAn iterator visiting all key-value pairs in arbitrary \xe2\x80\xa6CiReturns a mutable iterator visiting all values in the \xe2\x80\xa6CdReturns an iterator that allows modifying each value5ClReturn an iterator of mutable references to the elements \xe2\x80\xa66CnReturns an iterator over all mutable elements contained in \xe2\x80\xa6CdGets a mutable iterator over the entries of the map.55555DiGet an iterator over the mutably borrowed <code>Field</code> items in \xe2\x80\xa6CiReturns an iterator over mutably borrowed syntax tree \xe2\x80\xa6CiA fast and fearless Collision Detection Engine for 2D \xe2\x80\xa6CkGet the last key-value pair, with mutable access to the \xe2\x80\xa6CjReturns a mutable reference to the last element of the \xe2\x80\xa6CbMutably borrows the last element in this sequence.BhReturns the squared length of this line.DjIf the cursor is pointing at a <code>Lifetime</code>, returns it along \xe2\x80\xa6BkReturn an iterator of evenly spaced floats.DdCreate a one-dimensional array with <code>n</code> evenly spaced \xe2\x80\xa6CiIf this is a finite sequence, return its members as a \xe2\x80\xa6BiReturns the location of the distribution.DiThis library provides type-safe and fully-featured <code>Mutex</code> \xe2\x80\xa6ChSpin synchronisation primitives, but compatible with \xe2\x80\xa6CiConvenience method for opening a log file with common \xe2\x80\xa6CgAn iterator of a sequence of logarithmically spaced \xe2\x80\xa6DfCreate a one-dimensional array with <code>n</code> logarithmically \xe2\x80\xa6CnReturns a set of all look-around assertions that appear at \xe2\x80\xa6ChReduce the values along an axis into just one value, \xe2\x80\xa6EgApplies <code>map_op</code> to a value returned by <code>init</code> with each item \xe2\x80\xa6DdConvert each item of the iterator using the <code>Into</code> trait.EfApply the function <code>f</code> on the value in the <code>Left</code> variant if \xe2\x80\xa60ElApply the function <code>f</code> on the value <code>a</code> in <code>Left(a)</code> or \xe2\x80\xa61EfApplies <code>map_op</code> to the given <code>init</code> value with each item of \xe2\x80\xa6CbReplace the max ulps value with the one specified.CeThe ULPs to tolerate when testing values that are \xe2\x80\xa6CmSearch for the last occurrence of two possible bytes in a \xe2\x80\xa6CmSearch for the last occurrence of three possible bytes in \xe2\x80\xa6CgReturn an iterator adaptor that merges the two base \xe2\x80\xa6BjReturns the parsed meridiem, if available.BaMetadata about the log directive.DlSet <code>metadata</code>. Construct a <code>Metadata</code> object with \xe2\x80\xa6BjReturns the first moment of time in a day.DhReturns <code>true</code> if the closure was called from a different \xe2\x80\xa60DkAllows more than one of the <code>Arg</code>s in this group to be used. \xe2\x80\xa60DgAn iterator that generalizes <code>.zip()</code> and allows running \xe2\x80\xa6DiAllows one to mutate all <code>Arg</code>s after they\xe2\x80\x99ve been added \xe2\x80\xa60AjReturns <code>-0.0</code>.000AlCreates a FIFO worker queue.DkDO NOT USE! This fn will be renamed to <code>new</code> in the upcoming \xe2\x80\xa60AlCreates a LIFO worker queue.DkBuilds a <code>Regex</code> from many pattern strings using the default \xe2\x80\xa6CgParse the given regular expressions using a default \xe2\x80\xa6DhLike <code>new</code>, but parses multiple patterns into a single \xe2\x80\x9c\xe2\x80\xa60100CkConstructs a new history buffer, where every element is \xe2\x80\xa6DkThis returns <code>Ok(Some(key))</code> for the next key in the map, or \xe2\x80\xa6BhReturn the next random <code>u32</code>.0BhReturn the next random <code>u64</code>.0AeCheck NO_COLOR statusDbReturns the square of the norm (since <code>T</code> doesn\xe2\x80\x99t \xe2\x80\xa6DkReturns the truncated principal <code>n</code>th root of an integer \xe2\x80\x93 \xe2\x80\xa60CgSpecifies the number of arguments parsed per occurrence0BlReturns one more than this value as a usize.0CbReturns one more than this small index as a usize.11ClGives the orientation of 3 2-dimensional points: ccw, cw \xe2\x80\xa6FeReturns a positive value if the coordinates <code>pa</code>, <code>pb</code>, and <code>pc</code> \xe2\x80\xa6CiThe position of the original flag. The error position \xe2\x80\xa6CmThe position of the original negation operator. The error \xe2\x80\xa6CiThe position of the initial occurrence of the capture \xe2\x80\xa6BoReturns the number of axes in the output array.DhReturns the number of dimensions after calling <code>.slice()</code> \xe2\x80\xa6CkContour of the container to be used for collision detectionDhThe LOF algorithm. <code>k_neighbours</code> specifies the number of \xe2\x80\xa6CeSee <code>OutlierDetection::outliers</code> for usageCdConverts <code>self</code> into a parallel iterator.AlSorts the slice in parallel.Bo<code>PathBuf</code> parser for argument values0CfReturns the regex patterns that this regex set was \xe2\x80\xa60ClReturns an iterator over all pattern identifiers in this \xe2\x80\xa6CcPeeks any identifier including keywords. Usage: \xe2\x80\xa6CkReturns a mutable reference to the greatest item in the \xe2\x80\xa6CjWorks exactly like the <code>peek_mut</code> method in \xe2\x80\xa6DkA drop-in replacement for <code>std::iter::Peekable</code> which adds a \xe2\x80\xa6DkReturns a reference to the <code>nth</code> value without advancing the \xe2\x80\xa6A`Platform supportCnTraits and functions used to implement parallel iteration. \xe2\x80\xa6AdPredefined policies.CkRemoves the item from the back of the deque and returns \xe2\x80\xa6B`Returns this point\xe2\x80\x99s position.CeDecrement the pointer by 1, but return its old value.CeIncrement the pointer by 1, but return its old value.ClReturn an iterator that iterates through the powerset of \xe2\x80\xa6BeHow the hazard is present in the nodeChReturns the previous weekday, wrapping around at the \xe2\x80\xa6CiIterate over the entire iterator and multiply all the \xe2\x80\xa6AhAppend a row to an array0DfAppends a given string slice onto the end of this <code>String</code>.CgCreate an iterator where you can put back a single itemCePut back a single value to the front of the iterator.BmPuts <code>x</code> in front of the iterator.AlEverything Quadtree related.AiRoot node of the quadtreeAhDraw the quadtree on topAoReturn a raw view of the array.CmReads a IEEE754 single-precision (4 bytes) floating point \xe2\x80\xa6CmReads a IEEE754 double-precision (8 bytes) floating point \xe2\x80\xa6CdReads a signed 16 bit integer from <code>buf</code>.DcReads a signed 24 bit integer from <code>buf</code>, stored in i32.CdReads a signed 32 bit integer from <code>buf</code>.DcReads a signed 48 bit integer from <code>buf</code>, stored in i64.CdReads a signed 64 bit integer from <code>buf</code>.CeReads a signed n-bytes integer from <code>buf</code>.CgReads an unsigned 16 bit integer from <code>buf</code>.DfReads an unsigned 24 bit integer from <code>buf</code>, stored in u32.CgReads an unsigned 32 bit integer from <code>buf</code>.DfReads an unsigned 48 bit integer from <code>buf</code>, stored in u64.CgReads an unsigned 64 bit integer from <code>buf</code>.FdConvert the view into an <code>ArrayViewMut&lt;&#39;b, A, D&gt;</code> where <code>&#39;b</code> \xe2\x80\xa6FfConvert the view into an <code>ArrayView&lt;&#39;b, A, D&gt;</code> where <code>&#39;b</code> is a \xe2\x80\xa601DnA method\xe2\x80\x99s <code>self</code> receiver, such as <code>&amp;self</code> or \xe2\x80\xa6BiRegisters a new handle for the collector.CfSet the relative datetime to use when rounding a span.EdCreate an iterator that produces <code>n</code> repetitions of <code>element</code>.DgCreates a parallel iterator that produces <code>n</code> repeats of \xe2\x80\xa6DfReplaces at most <code>limit</code> non-overlapping matches in the \xe2\x80\xa60BlSpecifies that the argument must be present.CiRequire an argument from the group to be present when \xe2\x80\xa610CjSets an argument that is required when this one is presentCjSpecify an argument or group that must be present when \xe2\x80\xa610ChFlip the look-around assertion to its equivalent for \xe2\x80\xa60BaReturn right value or given value00AgThe rotation in radiansAmThe rotation angle in radiansCjReturn a producer and iterable that traverses over the \xe2\x80\xa6CkScale a geometry from it\xe2\x80\x99s bounding box center, using \xe2\x80\xa6EfAssign to each reference in <code>self</code> from the <code>from</code> iterator, \xe2\x80\xa6BfSet the hour on this broken down time.BkSet the span for this search configuration.CaConfigures the span for <em>only this token</em>.DkConfigures the span for this <code>Group</code>\xe2\x80\x99s delimiters, but not \xe2\x80\xa6CbConfigure the span for this punctuation character.DiConfigures the span of this <code>Ident</code>, possibly changing its \xe2\x80\xa6C`Configures the span associated for this literal.51ClSet whether the NFA produced by this builder should only \xe2\x80\xa6BfSet the year on this broken down time.EmSets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.CfContour of the item to be used for collision detectionDdSimplify <code>Geometries</code> using the Ramer-Douglas-Peucker \xe2\x80\xa6CnReturns the simplified representation of a geometry, using \xe2\x80\xa6BeMutable version of <code>skew</code>.EdCreates an iterator that skips <code>n</code> elements from <em>anywhere</em> in \xe2\x80\xa6DkReturns the total number of slots in this <code>GroupInfo</code> across \xe2\x80\xa6ClSet the smallest units allowed in the duration returned. \xe2\x80\xa6CnSet the smallest units allowed in the span returned. These \xe2\x80\xa6CdSet the smallest units allowed in the span returned.ClSet the smallest units allowed in the timestamp returned \xe2\x80\xa61ChSet the smallest units allowed in the zoned datetime \xe2\x80\xa622CkSet the smallest units allowed in the datetime returned \xe2\x80\xa63CmSet the smallest units allowed in the time returned after \xe2\x80\xa6CjSet the smallest units allowed in the offset returned. \xe2\x80\xa6CiSmall vectors in various sizes. These store a certain \xe2\x80\xa6CiCreates a <code>SmallVec</code> containing the arguments.DeSplit the array view along <code>axis</code> and return one array \xe2\x80\xa6DdSplit the array view along <code>axis</code> and return one view \xe2\x80\xa61DgSplit the array view along <code>axis</code> and return one mutable \xe2\x80\xa61022DdSplits the iterator at <code>index</code>, yielding two disjoint \xe2\x80\xa6CgSplits the iterator at index, yielding two disjoint \xe2\x80\xa601DkSplit into two producers; one produces items <code>0..index</code>, the \xe2\x80\xa6CjDivide the consumer into two consumers, one processing \xe2\x80\xa6BkAttempts to split <code>self</code> in two.0CdAttempts to split <code>self</code> at the midpoint.CbReturn standard deviation along <code>axis</code>.DbFormats this timestamp according to the given <code>format</code>.DgFormats this zoned datetime according to the given <code>format</code>.DcFormats this civil date according to the given <code>format</code>.DgFormats this civil datetime according to the given <code>format</code>.DcFormats this civil time according to the given <code>format</code>.DkParses a timestamp (expressed as broken down time) in <code>input</code>\xe2\x80\xa6EeParses a zoned datetime in <code>input</code> matching the given <code>format</code>.EaParses a civil date in <code>input</code> matching the given <code>format</code>.EeParses a civil datetime in <code>input</code> matching the given <code>format</code>.EaParses a civil time in <code>input</code> matching the given <code>format</code>.CkReturns a new set that is the result of subtracting the \xe2\x80\xa60BcReturn sum along <code>axis</code>.EbCreates an iterator that yields <code>n</code> elements from <em>anywhere</em> \xe2\x80\xa6CkA hybrid format derived from RFC 3339, RFC 9557 and ISO \xe2\x80\xa6CmSet the Thompson NFA configuration for this builder using \xe2\x80\xa600DcDefines a Thompson NFA and provides the <code>PikeVM</code> and \xe2\x80\xa611DhExtracts the bytes of <code>self</code> without swapping the byte order.00000000000CmReturn the capture group index corresponding to the given \xe2\x80\xa6EbConverts the value of <code>self</code> to an <code>isize</code>. If the value \xe2\x80\xa6CcSplit a multi-lane vector into single-lane vectors.D`Converts <code>self</code> to the equivalent <code>Level</code>.CiMakes a copy of the underlying buffer and returns the \xe2\x80\xa6000BkReturn an uniquely owned copy of the array.DgTransform the array into <code>new_shape</code>; any shape with the \xe2\x80\xa6AeTreat as a short-flagCmReturn the array\xe2\x80\x99s data as a slice, if it is contiguous \xe2\x80\xa60EhConverts the value of <code>self</code> to a <code>usize</code>. If the value cannot \xe2\x80\xa6A`Treat as a valueEfConvert a <code>T</code> into <code>serde_json::Value</code> which is an enum that \xe2\x80\xa60DjCreates a <code>Zoned</code> value by attaching the given time zone to \xe2\x80\xa6CeExtracts a zoned datetime from this broken down time.DhConverts a civil datetime to a <code>Zoned</code> datetime by adding \xe2\x80\xa60DdConverts a civil datetime to a <code>Zoned</code> in this time zone.CfReturns the zoned datetime with a date immediately \xe2\x80\xa6C`Returns the date immediately following this one.CjReturns the datetime with a date immediately following \xe2\x80\xa6CiReturns the ISO 8601 date immediately following this one.CjShortens this <code>String</code> to the specified length.DhShortens the vector, keeping the first <code>len</code> elements and \xe2\x80\xa6DgShorten the vector, keeping the first <code>len</code> elements and \xe2\x80\xa6CiSet the number of days on this span. The value may be \xe2\x80\xa6ClReturns the location of the first match according to the \xe2\x80\xa6CiExecutes a non-overlapping search with this automaton \xe2\x80\xa6DjExecutes a leftmost forward search and returns a <code>Match</code> if \xe2\x80\xa6BbPerforms a fallible parallel fold.CdAttempts to parse a string into a regular expression000BfRe-allocate to set the capacity to \xe2\x80\xa6ChAttempts to initialize the global logger with an env \xe2\x80\xa6ChInitializes the global logger with the built env logger.DgMacro for unwrapping the left side of an <code>Either</code>, which \xe2\x80\xa6ClAttempts to acquire this mutex without blocking. Returns \xe2\x80\xa6AnAttempts to acquire this lock.10DbTry to lock this <code>Mutex</code>, returning a lock guard if \xe2\x80\xa6DfTry to lock this <code>SpinMutex</code>, returning a lock guard if \xe2\x80\xa6CfAttempts to acquire this lock with shared read access.DeAttempts to acquire this <code>RwLock</code> with shared read access.CeAttempt to acquire this lock with shared read access.BjPerform <em>unchecked</em> array indexing.CfTemporarily unlocks the mutex to execute the given \xe2\x80\xa60DdTemporarily unlocks the <code>RwLock</code> to execute the given \xe2\x80\xa600CkReturns a reference to an associated <code>Unparker</code>.BhReturn variance along <code>axis</code>.BcSet of points that form the polygonBeReturn a read-write view of the arrayBfThe input contains an <code>i8</code>.BeThe input contains a <code>u8</code>.kDescriptionAiWeighted (index) sampling0CfApply <code>Command</code>\xe2\x80\x99s formatting to the error0CjCreate a new span by replacing the ending the position \xe2\x80\xa6DdConstructs a new, empty <code>SlotMap</code> with a custom key type.DgConstructs a new, empty <code>DenseSlotMap</code> with a custom key \xe2\x80\xa6DgConstructs a new, empty <code>HopSlotMap</code> with a custom key type.EcReturns the same pointer, but tagged with <code>tag</code>. <code>tag</code> is \xe2\x80\xa60DgWrites an integer value like <code>-123</code> to the specified writer.AcWrite the ANSI code00CgWrites a copy of <code>self</code> to <code>dst</code>.DfWrites an integer value like <code>123</code> to the specified writer.Cn<em><strong>Fast, safe, compile error. Pick two.</strong></em>CmEquality that is defined using the absolute difference of \xe2\x80\xa6AlThe <code>+=</code> operatorGaApply an <code>AffineTransform</code> like <code>scale</code>, <code>skew</code>, or <code>rotate</code> to a \xe2\x80\xa6BmThe conversion source was improperly aligned.0000BhAvailable 4-bit ANSI color palette codes00Bfone-dimensional shared ownership arrayBftwo-dimensional shared ownership arrayCiBehavior of arguments when they are encountered while \xe2\x80\xa600BdPosition within <code>RawArgs</code>B`An <em>n</em>-dimensional array.AgA read-only array view.AnA single zero-width assertion.0CnA binding (equality constraint) on an associated type: the \xe2\x80\xa60CnDistinguishes between attributes that decorate an item and \xe2\x80\xa6CeAn attribute, like <code>#[repr(transparent)]</code>.CbA trait that abstracts over Aho-Corasick automata.BoDynamic counterpart of <code>BPInstance</code>.DcAn escaped backspace character (usually escaped as <code>\\b</code>)CmAn argument in a function type: the <code>usize</code> in \xe2\x80\xa6CeThe Bernoulli distribution <code>Bernoulli(p)</code>.0C`Error type returned from <code>Beta::new</code>.BaDefines big-endian serialization.AfBig-endian byte order.CnA bracketed character class set, which may contain zero or \xe2\x80\xa6EcBright red: #1 (foreground code <code>91</code>, background code <code>101</code>).00Di<code>ByteOrder</code> describes types that can serialize integers as \xe2\x80\xa6BjA type-level representation of byte order.CnA state with a single transition that can only be taken if \xe2\x80\xa6CaA mutable or immutable reference to a byte slice.BjConfiguration of the <code>CDEngine</code>CiA candidate is the result of running a prefilter on a \xe2\x80\xa6BhThe error type of reference conversions.AeChaCha with 20 roundsCnParallel iterator over mutable non-overlapping chunks of a \xe2\x80\xa6AgA Perl character class.DhA single perl character class, e.g., <code>\\d</code> or <code>\\W</code>.BaAn epoch-based garbage collector.BmOverlapping Lines intersect in a line segmentBkAlias for a <code>Complex&lt;f32&gt;</code>BkAlias for a <code>Complex&lt;f64&gt;</code>ClDefines an associated constant representing the additive \xe2\x80\xa6CiA container in which <code>Item</code>\xe2\x80\x99s can be placed.DhA marker trait over <code>RngCore</code> for securely unpredictable RNGs0AkArray representation trait.DbAn untagged union input to a <code>proc_macro_derive</code> macro.DnProvides a convenient <code>Debug</code> implementation for a <code>u8</code>.DnAn object that holds a <code>Group</code>\xe2\x80\x99s <code>span_open()</code> and \xe2\x80\xa6CeDescribes how a sequence of token trees is delimited.AlArray shape and index trait.CnBy default, a properly-oriented Polygon has its outer ring \xe2\x80\xa6CfConfiguration for <code>SpanPrinter::direction</code>.AnThe Dirichlet distribution \xe2\x80\xa6AlThe <code>/=</code> operatorA`<code>...</code>Dh<code>Enumerate</code> is an iterator that returns the current count \xe2\x80\xa6BjCommand line argument parser kind of error0CiError code for an error related to array shape or layout.CiThe type of an error that occurred while building an AST.DfThe type of an error that occurred while building an <code>Hir</code>.CfA slice literal expression: <code>[a, b, c, d]</code>.BkAn async block: <code>async { ... }</code>.BlAn await expression: <code>fut.await</code>.BfA blocked scope: <code>{ ... }</code>.DiA <code>break</code>, with an optional label to break and an optional \xe2\x80\xa6BjA const block: <code>const { ... }</code>.DhAccess of a named struct field (<code>obj.k</code>) or unnamed tuple \xe2\x80\xa6CdAn expression contained within invisible delimiters.CoA square bracketed indexing expression: <code>vector[2]</code>.DgThe inferred value of a const generic argument, denoted <code>_</code>.DgA macro invocation expression: <code>format!(&quot;{}&quot;, q)</code>.EjA <code>match</code> expression: <code>match n { Some(n) =&gt; {}, None =&gt; {} }</code>.CaA parenthesized expression: <code>(a + b)</code>.GaA range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.BnA tuple expression: <code>(a, b, c, d)</code>.CdA unary operation: <code>!x</code>, <code>*x</code>.BnA while loop: <code>while expr { ... }</code>.BlA yield expression: <code>yield expr</code>.DjExternal representation of a <code>Layout</code>. A layout consists of \xe2\x80\xa6DdThese are \xe2\x80\x9cextensions\xe2\x80\x9d to the standard <code>strftime</code> \xe2\x80\xa6DeExtracts prefix or suffix literal sequences from <code>Hir</code> \xe2\x80\xa6DjThis type defines a margin within two <code>f32</code> values might be \xe2\x80\xa6DjThis type defines a margin within two <code>f64</code> values might be \xe2\x80\xa6AmReturn <code>1.0 / \xcf\x80</code>.AmReturn <code>2.0 / \xcf\x80</code>.AmReturn <code>\xcf\x80 / 2.0</code>.AmReturn <code>\xcf\x80 / 3.0</code>.AmReturn <code>\xcf\x80 / 4.0</code>.AmReturn <code>\xcf\x80 / 6.0</code>.AmReturn <code>\xcf\x80 / 8.0</code>.Eg<code>FilterMap</code> creates an iterator that uses <code>filter_op</code> to both \xe2\x80\xa6CeA reverse substring searcher using the Rabin-Karp \xe2\x80\xa6CfA reverse substring searcher that uses the Two-Way \xe2\x80\xa6CmA single substring reverse searcher fixed to a particular \xe2\x80\xa6BbA single item in a group of flags.DhAn iterator adaptor that flattens <code>Result::Ok</code> values and \xe2\x80\xa6ClGeneric trait for floating point numbers that works with \xe2\x80\xa60BaAll possible float type suffixes.CgProvides the calling context to a closure called by \xe2\x80\xa60Al32-bit Fowler-Noll-Vo hasherDfAn enum used for controlling the execution of <code>fold_while</code>.E`Value controlling the execution of <code>.fold_while</code> on <code>Zip</code>.EgA sign is always written, with <code>-</code> for negative spans and <code>+</code> \xe2\x80\xa6AoA formatter to write logs into.BaA type alias for a log formatter.CjThis trait abstracts away serializing the JSON control \xe2\x80\xa6BiTypes for which any bit pattern is valid.DgTypes for which a sequence of <code>0</code> bytes is a valid instance.CeThe geometric distribution <code>Geometric(p)</code>.CfRepresents information about capturing groups in a \xe2\x80\xa6AdThe kind of a group.CnMarker type which indicates that the Guard type for a lock \xe2\x80\xa6DiRounds to the nearest allowed value like <code>HalfExpand</code>, but \xe2\x80\xa6CkA representation of \xe2\x80\x9chalf\xe2\x80\x9d of a match reported by a \xe2\x80\xa61BiMarker trait to assign Kernel for scalarsCjWhen encountered, display <code>Command::print_help</code>00CmA special mode that uses designator labels that are known \xe2\x80\xa6BnTypes which are free from interior mutability.EdAn <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a \xe2\x80\xa6CeAn inherited visibility, which usually means private.CkConvenience error combining possible errors which could \xe2\x80\xa6ChTypes that can be converted to an immutable slice of \xe2\x80\xa6DcAn iterator over owned pairs of type <code>Pair&lt;T, P&gt;</code>.AhIs the argument present?0CeA constant item: <code>const MAX: u16 = 65535</code>.D`A macro invocation, which includes <code>macro_rules!</code> \xe2\x80\xa6ClA trait definition: <code>pub trait Iterator { ... }</code>.DfA union definition: <code>union Foo&lt;A, B&gt; { x: A, y: B }</code>.DgAn <code>Iterator</code> blanket implementation that provides extra \xe2\x80\xa6B`Dynamic dimension or index type.BcConfiguration for the LBF optimizerDeCreates <code>Transformation</code> samples for a given item. The \xe2\x80\xa6CiAn iterator that traverses over all axes but one, and \xe2\x80\xa6CkA fixed capacity map / dictionary that performs lookups \xe2\x80\xa6BaIterate over lines of a geometry.DjThe expression assigned in a local <code>let</code> binding, including \xe2\x80\xa6ChThe log-normal distribution <code>ln N(\xce\xbc, \xcf\x83\xc2\xb2)</code>.AbThe maximum value.0000Bk<code>m &lt;= 0</code> or <code>nan</code>.DhProvides a <code>Visitor</code> access to each entry of a map in the \xe2\x80\xa6CiMap a function over all the coordinates in an object, \xe2\x80\xa6CdA knob for controlling the match semantics of an \xe2\x80\xa6CjA knob for controlling the match semantics of a packed \xe2\x80\xa6CgThe kind of match semantics to use for a regex pattern.B`Minimum number of allowed values0Ee<code>mode &lt; min</code> or <code>mode &gt; max</code> or <code>mode</code> is NaN.0CiMPMC queue with a capacity for N elements N must be a \xe2\x80\xa6AlThe <code>*=</code> operatorBlA vector composed of multiple 128-bit lanes.n<code>m</code>CbSee <code>multipeek()</code> for more information.Bk<code>n &lt;= 0</code> or <code>nan</code>.Af<code>n &lt; 1</code>.BoA name-value pair within an attribute, like \xe2\x80\xa6CeReturns the next representable float value in the \xe2\x80\xa6DiInput or range <code>high - low</code> is non-finite. Not relevant to \xe2\x80\xa6Cf<code>lambda = \xe2\x88\x9e</code> or <code>lambda = nan</code>1DhThe trait for <code>Num</code> types which also implement assignment \xe2\x80\xa6CgA one letter abbreviated class, e.g., <code>\\pN</code>.n<code>+</code>AiArray\xe2\x80\x99s representation.AiI am <code>kswapd</code>.Dk<code>PanicFuse</code> is an adaptor that wraps an iterator with a fuse \xe2\x80\xa6AeCommand-line ArgumentDfA struct or struct variant pattern: <code>Variant { x, y, .. }</code>.CiThe identifier of a pattern in an Aho-Corasick automaton.CgThe identifier of a regex pattern, represented by a \xe2\x80\xa60o<code>%=</code>ChError type returned from <code>Pert</code> constructors.BkTypes that are pointed to by a single word.CkA guard that is returned when a caller requests a value \xe2\x80\xa6ClAn iterator adapter to get the positions of each element \xe2\x80\xa6Ec<code>Positions</code> takes a predicate <code>predicate</code> and filters out \xe2\x80\xa6BfA prefilter for accelerating a search.CePrefilter controls whether heuristics are used to \xe2\x80\xa6BlA prefilter for accelerating regex searches.AfAn internal tree node.BjBasic operations for a reader-writer lock.DiRequired functionality for underlying <code>std::io::Write</code> for \xe2\x80\xa6DfIterate over raw argument values via <code>ArgMatches::get_raw</code>.0CjAxis-aligned rectangle. With its left bottom corner at \xe2\x80\xa6CfAn n-dimensional rectangle defined by its two corners.AlA <code>rect</code> element.drectDhA referencing operation: <code>&amp;a</code> or <code>&amp;mut a</code>.BoA reference pattern: <code>&amp;mut var</code>.DoA reference type: <code>&amp;&#39;a T</code> or <code>&amp;&#39;a mut T</code>.AlThe <code>%=</code> operatorCiThe mode for dealing with the remainder when rounding \xe2\x80\xa6ClThe stddev of translation starts at 1% and ends at 0.05% \xe2\x80\xa6DjModifiable counterpart of <code>SPInstance</code>: items can be placed \xe2\x80\xa6Bk<code>s &lt;= 1</code> or <code>nan</code>.Bj<code>s &lt; 0</code> or <code>nan</code>.CkRepresents a fork-join scope which can be used to spawn \xe2\x80\xa60Aa<code>self</code>CkProvides methods for formatting numbers with separators \xe2\x80\xa6DkProvides a <code>Visitor</code> access to each element of a sequence in \xe2\x80\xa6DjA <strong>data structure</strong> that can be serialized into any data \xe2\x80\xa6CaDerive macro available if serde is built with \xe2\x80\xa61BcThe <code>&lt;&lt;=</code> operatorBcThe <code>&gt;&gt;=</code> operatorCfA function signature in a trait or implementation: \xe2\x80\xa6CnThe error emitted if the conversion source is of incorrect \xe2\x80\xa6ClRepresents all of the necessary information to perform a \xe2\x80\xa6CcJSON input source that reads from a slice of bytes.BeOptions for <code>Span::round</code>.")